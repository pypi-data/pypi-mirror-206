(undo-tree-save-format-version . 1)
"d82faf43e40601d5892d042002ddf6ebbb122dff"
[nil nil nil nil (25672 17829 741487 890000) 0 nil]
([nil nil ((#(", When" 0 6 (fontified t)) . 60) (undo-tree-id38 . -2) (undo-tree-id39 . -6) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -1) (undo-tree-id43 . -2) (undo-tree-id44 . -1) (undo-tree-id45 . -6) (undo-tree-id46 . -5) (t 25671 63815 854765 979000)) nil (25672 17829 741484 924000) 0 nil])
([nil nil ((#("from ..time import Delta
" 0 4 (face font-lock-keyword-face fontified t) 4 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 25 (fontified t)) . 36) (undo-tree-id21 . -24) (undo-tree-id22 . -24) (undo-tree-id23 . -24) (undo-tree-id24 . -23) (undo-tree-id25 . -24) (undo-tree-id26 . -25) (undo-tree-id27 . -24) (undo-tree-id28 . -24) (undo-tree-id29 . -24) (undo-tree-id30 . -24) (undo-tree-id31 . -24) (undo-tree-id32 . -23) (undo-tree-id33 . -24) (undo-tree-id34 . -23) (undo-tree-id35 . -23) (undo-tree-id36 . -23) (undo-tree-id37 . -25) 59) nil (25672 17829 741473 819000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 36) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (25672 17829 741455 698000) 0 nil])
([nil nil ((432 . 436) (#("time" 0 4 (fontified nil)) . -432) (432 . 436) (#("time" 0 4 (fontified t)) . -432) (undo-tree-id17 . -4) 436 (424 . 436) (#("f" 0 1 (fontified t)) . -424) (undo-tree-id18 . -1) (421 . 425)) nil (25672 17829 741450 627000) 0 nil])
([nil nil ((393 . 398) (#("time" 0 4 (fontified t)) . 393) (undo-tree-id12 . -3) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4)) nil (25672 17829 741440 499000) 0 nil])
([nil nil ((433 . 438) (#("timeDelta(time)" 0 4 (fontified t) 4 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t) 10 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t)) . 433) (undo-tree-id0 . -9) (undo-tree-id1 . -14) (undo-tree-id2 . 11) (undo-tree-id3 . -4) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -9) (undo-tree-id8 . -10) (undo-tree-id9 . -14) (undo-tree-id10 . -15) (undo-tree-id11 . -15)) nil (25672 17829 741419 443000) 0 nil])
([nil nil ((489 . 494) (484 . 489) (#(" " 0 1 (fontified t)) . -484) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("s" 0 1 (fontified t)) . -485) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("e" 0 1 (fontified t)) . -486) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 487 (485 . 487) (t 25672 17829 754835 193000)) nil (25672 17843 706436 376000) 0 nil])
([nil nil ((#("    When(time)
" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t)) . 490) (undo-tree-id47 . -15) (undo-tree-id48 . -14) (undo-tree-id49 . 11) (undo-tree-id50 . -3) (undo-tree-id51 . -15) (undo-tree-id52 . -15) (undo-tree-id53 . 11) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -15) 493) nil (25672 17843 706407 471000) 0 nil])
([nil nil ((3493 . 3498) (3492 . 3493) (t 25672 17843 718694 567000)) nil (25672 17856 457322 15000) 0 nil])
([nil nil ((#("    Delta(1)
" 0 4 (fontified t) 4 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t) 10 11 (face highlight-numbers-number fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . 3494) (undo-tree-id96 . -13) (undo-tree-id97 . -12) (undo-tree-id98 . 9) (undo-tree-id99 . -13) (undo-tree-id100 . -13) (undo-tree-id101 . -9) (undo-tree-id102 . -3) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -13) 3497) nil (25672 17856 457318 226000) 0 nil])
([nil nil ((3495 . 3504) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3495) (undo-tree-id90 . -1) (3492 . 3496) (#("1" 0 1 (face highlight-numbers-number fontified t)) . -3492) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 3493) nil (25672 17856 457295 923000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3488) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 3489 (#("or " 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3489) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) 3492 (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -3492) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) 3496 (#("." 0 1 (fontified t)) . -3496) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 3497 (#("now " 0 4 (fontified t)) . -3497) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) 3501 (#("+ " 0 2 (fontified t)) . -3501) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) 3503 (#("1" 0 1 (face highlight-numbers-number fontified t)) . -3503) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 3504) nil (25672 17861 479238 365000) 0 nil])
([nil nil ((#("        import pdb; pdb.set_trace()
" 0 8 (face (hi-yellow hi-yellow) fontified t) 8 14 (face (hi-yellow hi-yellow font-lock-keyword-face) fontified t) 14 33 (face (hi-yellow hi-yellow) fontified t) 33 34 (face (hi-yellow hi-yellow rainbow-delimiters-depth-1-face) fontified t) 34 35 (face (hi-yellow hi-yellow rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t)) . 3433) (undo-tree-id113 . -35) (undo-tree-id114 . -35) (undo-tree-id115 . -36) (undo-tree-id116 . -35) (undo-tree-id117 . -36) (undo-tree-id118 . -36) (undo-tree-id119 . -18) (undo-tree-id120 . -18) (undo-tree-id121 . -18) (undo-tree-id122 . -36) 3451) nil (25672 17861 478626 623000) 0 nil])
([nil nil ((689 . 708) (684 . 689) (676 . 684) (#(":" 0 1 (fontified t)) . -676) (undo-tree-id315 . -1) 677 (666 . 677) (660 . 666) (#("    " 0 4 (fontified t)) . -660) (undo-tree-id316 . -4) 664 (659 . 664) (#("    " 0 4 (fontified t)) . -659) (undo-tree-id317 . -4) 663 (658 . 663) (t 25672 17861 502514 990000) 650) nil (25672 18602 335589 122000) 0 nil])
([nil nil ((707 . 709)) nil (25672 18602 335581 230000) 0 nil])
([nil nil ((772 . 779) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -772) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . 1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("a" 0 1 (fontified t)) . -773) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("r" 0 1 (fontified t)) . -774) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) 775 (756 . 775) (747 . 756) (745 . 747) (#("=" 0 1 (fontified t)) . -745) (undo-tree-id311 . -1) 746 (737 . 746) (732 . 737) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -732) (undo-tree-id312 . -1) (718 . 733) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -718) (undo-tree-id313 . -1) (716 . 719) (711 . 716) (#("    " 0 4 (fontified t)) . 711) (undo-tree-id314 . -4) 715 (710 . 715) 708) nil (25672 18602 335575 753000) 0 nil])
([nil nil ((776 . 779) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -776) (undo-tree-id287 . -1) (773 . 777)) nil (25672 18602 335545 814000) 0 nil])
([nil nil ((797 . 808) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -797) (undo-tree-id286 . -1) (794 . 798) (785 . 794) 778) nil (25672 18602 335542 592000) 0 nil])
([nil nil ((#("
    def after(self, delta):
        return self, self.now + delta

    def at(self, time):
        return self, time

" 0 1 (fontified t) 1 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 14 (face font-lock-function-name-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 19 (face font-lock-keyword-face fontified t) 19 21 (fontified t) 21 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 29 (fontified t) 29 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 48 (face font-lock-keyword-face fontified t) 48 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 66 (fontified t) 66 67 (fontified t) 67 72 (fontified t) 72 75 (face font-lock-keyword-face fontified t) 75 76 (fontified t) 76 78 (face font-lock-function-name-face fontified t) 78 79 (face (rainbow-delimiters-depth-1-face default) fontified t) 79 83 (face font-lock-keyword-face fontified t) 83 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face default) fontified t) 90 92 (fontified t) 92 100 (fontified t) 100 103 (face font-lock-keyword-face fontified t) 103 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t) 107 111 (face font-lock-keyword-face fontified t) 111 118 (fontified t) 118 119 (fontified t)) . 372) (undo-tree-id234 . -118) (undo-tree-id235 . -118) (undo-tree-id236 . -118) (undo-tree-id237 . -112) (undo-tree-id238 . -118) (undo-tree-id239 . -118) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -29) (undo-tree-id243 . -29) (undo-tree-id244 . -67) (undo-tree-id245 . -67) (undo-tree-id246 . -68) (undo-tree-id247 . -68) (undo-tree-id248 . -92) (undo-tree-id249 . -92) (undo-tree-id250 . -118) (undo-tree-id251 . -118) (undo-tree-id252 . -119) (undo-tree-id253 . -119) (undo-tree-id254 . -118) (undo-tree-id255 . -119) (undo-tree-id256 . -9) (undo-tree-id257 . -14) (undo-tree-id258 . -118) (undo-tree-id259 . -118) (undo-tree-id260 . -113) (undo-tree-id261 . -118) (undo-tree-id262 . -89) (undo-tree-id263 . -113) (undo-tree-id264 . -67) (undo-tree-id265 . -89) (undo-tree-id266 . -50) (undo-tree-id267 . -67) (undo-tree-id268 . -22) (undo-tree-id269 . -50) (undo-tree-id270 . -22) (undo-tree-id271 . -119) (undo-tree-id272 . -118) (undo-tree-id273 . -1) (undo-tree-id274 . -29) (undo-tree-id275 . -1) (undo-tree-id276 . -67) (undo-tree-id277 . -29) (undo-tree-id278 . -68) (undo-tree-id279 . -67) (undo-tree-id280 . -92) (undo-tree-id281 . -68) (undo-tree-id282 . -118) (undo-tree-id283 . -92) (undo-tree-id284 . -118) (undo-tree-id285 . -119) 490) nil (25672 18602 335535 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 689 . 690) (#("
" 0 1 (fontified nil)) . -808) (689 . 809) 667) nil (25672 18602 335469 357000) 0 nil])
([nil nil ((740 . 743) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . 740) (undo-tree-id230 . -3) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4)) nil (25672 18602 335465 894000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -372) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) 376 (371 . 376) 370) nil (25672 18602 335456 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 808) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (t 25672 18602 350724 505000)) nil (25672 18608 732301 663000) 0 nil])
([nil nil ((3613 . 3619) (#("f" 0 1 (fontified t)) . -3613) (undo-tree-id330 . -1) (3610 . 3614) (3589 . 3610) (#("qww34" 0 5 (fontified t)) . -3589) (undo-tree-id331 . -5) (undo-tree-id332 . -5) 3594 (3589 . 3594) (#("    " 0 4 (fontified t)) . -3589) (undo-tree-id333 . -4) 3593 (3580 . 3593) (t 25672 18608 746655 633000) 3559) nil (25672 21129 96516 408000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3955) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) 3956 (t 25672 21129 111343 77000)) nil (25672 21222 534536 213000) 0 nil])
([nil nil ((#("dead " 0 5 (fontified t)) . 3951) (undo-tree-id478 . -4) (undo-tree-id479 . 1) (undo-tree-id480 . -5) (undo-tree-id481 . -1) (undo-tree-id482 . -2) (undo-tree-id483 . -1) (undo-tree-id484 . -3) (undo-tree-id485 . -2) (undo-tree-id486 . -4) (undo-tree-id487 . -3) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -5) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -4) (undo-tree-id498 . -3) (undo-tree-id499 . -5) (undo-tree-id500 . -4) (undo-tree-id501 . -5) (undo-tree-id502 . -5) 3956) nil (25672 21222 534527 886000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3950) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) 3951) nil (25672 21222 533820 946000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t)) . 3946) (undo-tree-id413 . -3) (undo-tree-id414 . -4) (undo-tree-id415 . -1) (undo-tree-id416 . -2) (undo-tree-id417 . -1) (undo-tree-id418 . -3) (undo-tree-id419 . -2) (undo-tree-id420 . -4) (undo-tree-id421 . -3) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) 3950) nil (25672 21222 533795 710000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 3939) (undo-tree-id360 . -6) (undo-tree-id361 . -7) (undo-tree-id362 . -1) (undo-tree-id363 . -2) (undo-tree-id364 . -1) (undo-tree-id365 . -3) (undo-tree-id366 . -2) (undo-tree-id367 . -4) (undo-tree-id368 . -3) (undo-tree-id369 . -5) (undo-tree-id370 . -4) (undo-tree-id371 . -6) (undo-tree-id372 . -5) (undo-tree-id373 . -7) (undo-tree-id374 . -6) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -7) (undo-tree-id384 . -7) (undo-tree-id385 . -7) (undo-tree-id386 . -7) (undo-tree-id387 . -7) (undo-tree-id388 . -7) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -7) (undo-tree-id394 . -7) (undo-tree-id395 . -7) (undo-tree-id396 . -7) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) (undo-tree-id401 . -7) (undo-tree-id402 . -7) (undo-tree-id403 . -7) (undo-tree-id404 . -7) (undo-tree-id405 . -7) (undo-tree-id406 . -7) (undo-tree-id407 . -7) (undo-tree-id408 . -7) (undo-tree-id409 . -7) (undo-tree-id410 . -7) (undo-tree-id411 . -7) (undo-tree-id412 . -7) 3946) nil (25672 21222 533754 366000) 0 nil])
([nil nil ((3997 . 4000) (3994 . 3997) (#("f" 0 1 (fontified t)) . -3994) (undo-tree-id358 . -1) (3986 . 3995) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3986) (undo-tree-id359 . -1) (3976 . 3987) (3967 . 3976) 3939) nil (25672 21222 532671 925000) 0 nil])
([nil nil ((#(".after()" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3992) (undo-tree-id334 . -7) (undo-tree-id335 . -1) (undo-tree-id336 . -2) (undo-tree-id337 . -1) (undo-tree-id338 . -3) (undo-tree-id339 . -2) (undo-tree-id340 . -4) (undo-tree-id341 . -3) (undo-tree-id342 . -5) (undo-tree-id343 . -4) (undo-tree-id344 . -6) (undo-tree-id345 . -5) (undo-tree-id346 . -7) (undo-tree-id347 . -6) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -6) (undo-tree-id353 . -7) (undo-tree-id354 . -1) (undo-tree-id355 . -6) (undo-tree-id356 . -1) (undo-tree-id357 . -8)) nil (25672 21222 532662 9000) 0 nil])
([nil nil ((3378 . 3383) (#("E" 0 1 (face font-lock-string-face fontified t)) . -3378) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 3379 (3365 . 3379) (3356 . 3365) (t 25672 21222 546121 367000) 3321) nil (25672 21295 826453 791000) 0 nil])
([nil nil ((3382 . 3394) (t 25672 21295 845178 83000)) nil (25672 21636 363237 11000) 0 nil])
([nil nil ((3299 . 3301) (t 25672 21636 381060 273000)) nil (25672 21662 622136 519000) 0 nil])
([nil nil ((3312 . 3316) (3303 . 3312) (t 25672 21662 640756 287000) 3300) nil (25672 21726 845978 428000) 0 nil])
([nil nil ((3314 . 3315) (#("u" 0 1 (fontified t)) . -3314) (undo-tree-id520 . -1) 3315) nil (25672 21726 845975 963000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3391 . 3392) (nil fontified nil 3391 . 3392) (3391 . 3392) (3380 . 3391) (#("c" 0 1 (fontified t)) . -3380) (undo-tree-id518 . -1) (#("a" 0 1 (fontified t)) . -3381) (undo-tree-id519 . -1) 3382 (3380 . 3382) (3371 . 3380) 3327) nil (25672 21726 845971 894000) 0 nil])
([nil nil ((3387 . 3400) (#("Stop" 0 4 (fontified nil)) . -3387) (3387 . 3391) (#("StopIterationy" 0 13 (fontified nil) 13 14 (rear-nonsticky t fontified nil)) . 3387) (3387 . 3400) (#("Stop" 0 4 (fontified t)) . -3387) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) 3391) nil (25672 21726 845965 118000) 0 nil])
([nil nil ((3404 . 3413) (3399 . 3404) (#("    " 0 4 (fontified t)) . -3404) (#("        " 0 8 (fontified nil)) . -3372) (3400 . 3407)) nil (25672 21726 845954 998000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3416) (3408 . 3416) (3376 . 3380) (#("        " 0 8 (fontified nil)) . -3329) (3317 . 3329)) nil (25672 21726 845952 178000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3428) (3416 . 3428) (#("    " 0 4 (fontified nil)) . -3388) (3380 . 3388) (#("            " 0 12 (fontified nil)) . -3333) (3317 . 3333)) nil (25672 21726 845948 906000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -3329) (3317 . 3329) 3337) nil (25672 21726 845945 378000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3442) (undo-tree-id512 . 4) (3434 . 3442) 3454) nil (25672 21726 845938 989000) 0 nil])
([nil nil ((#("        print(\"STATE >\")
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face font-lock-string-face syntax-table (15) fontified t) 15 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face syntax-table (15) fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 25 (fontified t)) . 3279) (undo-tree-id628 . -24) (undo-tree-id629 . -19) (undo-tree-id630 . -23) (undo-tree-id631 . -25) (undo-tree-id632 . -11) (undo-tree-id633 . -25) (undo-tree-id634 . -25) (undo-tree-id635 . -11) (undo-tree-id636 . -11) (undo-tree-id637 . -25) 3290 (t 25672 21726 860018 988000)) nil (25672 21771 533158 300000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 3279) (undo-tree-id605 . -12) (undo-tree-id606 . -12) (undo-tree-id607 . -12) (undo-tree-id608 . -12) (undo-tree-id609 . -12) (undo-tree-id610 . -13) (undo-tree-id611 . -11) (undo-tree-id612 . -13) (undo-tree-id613 . -13) (undo-tree-id614 . -12) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -12) (undo-tree-id618 . -12) (undo-tree-id619 . -11) (undo-tree-id620 . -12) (undo-tree-id621 . -11) (undo-tree-id622 . -12) (undo-tree-id623 . -11) (undo-tree-id624 . -11) (undo-tree-id625 . -11) (undo-tree-id626 . -11) (undo-tree-id627 . -13) 3290) nil (25672 21771 533147 556000) 0 nil])
([nil nil ((#("        except StopIteration as ex:
            print(ex)
" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 31 (face font-lock-keyword-face fontified t) 31 36 (fontified t) 36 48 (fontified t) 48 53 (face font-lock-keyword-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 58 (fontified t)) . 3338) (undo-tree-id581 . -47) (undo-tree-id582 . -57) (undo-tree-id583 . -11) (undo-tree-id584 . -47) (undo-tree-id585 . 1) (undo-tree-id586 . -15) (undo-tree-id587 . -56) (undo-tree-id588 . -36) (undo-tree-id589 . -58) (undo-tree-id590 . -47) (undo-tree-id591 . -36) (undo-tree-id592 . -36) (undo-tree-id593 . -58) (undo-tree-id594 . -58) (undo-tree-id595 . -11) (undo-tree-id596 . -58) (undo-tree-id597 . -11) (undo-tree-id598 . -11) (undo-tree-id599 . -11) (undo-tree-id600 . -47) (undo-tree-id601 . -47) (undo-tree-id602 . -11) (undo-tree-id603 . -47) (undo-tree-id604 . -58) 3385) nil (25672 21771 533126 74000) 0 nil])
([nil nil ((#("        print(\"END STATE\", next_state)
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face font-lock-string-face fontified t syntax-table (15)) 15 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t syntax-table (15)) 25 27 (fontified t) 27 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t)) . 3338) (undo-tree-id526 . -38) (undo-tree-id527 . 39) (undo-tree-id528 . 39) (undo-tree-id529 . -14) (undo-tree-id530 . -13) (undo-tree-id531 . -14) (undo-tree-id532 . -25) (undo-tree-id533 . -25) (undo-tree-id534 . -26) (undo-tree-id535 . -36) (undo-tree-id536 . -21) (undo-tree-id537 . -20) (undo-tree-id538 . -20) (undo-tree-id539 . -20) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -39) (undo-tree-id543 . -20) (undo-tree-id544 . -20) (undo-tree-id545 . -20) (undo-tree-id546 . -20) (undo-tree-id547 . -20) (undo-tree-id548 . -11) (undo-tree-id549 . -39) (undo-tree-id550 . -39) (undo-tree-id551 . -20) (undo-tree-id552 . -20) (undo-tree-id553 . -20) (undo-tree-id554 . -20) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -38) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -11) (undo-tree-id561 . -8) (undo-tree-id562 . -14) (undo-tree-id563 . -15) (undo-tree-id564 . -28) (undo-tree-id565 . -29) (undo-tree-id566 . -31) (undo-tree-id567 . -32) (undo-tree-id568 . -34) (undo-tree-id569 . -34) (undo-tree-id570 . -35) (undo-tree-id571 . -39) (undo-tree-id572 . -39) (undo-tree-id573 . -39) (undo-tree-id574 . -39) (undo-tree-id575 . -39) (undo-tree-id576 . -39) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -11) (undo-tree-id580 . -39) 3349) nil (25672 21771 533100 390000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -3287) (undo-tree-id522 . -11) (undo-tree-id523 . -11) (undo-tree-id524 . -12) (undo-tree-id525 . -12) (3279 . 3287)) nil (25672 21771 533049 53000) 0 nil])
([nil nil ((3298 . 3313) (#("s" 0 1 (face (hi-yellow) fontified t)) . -3298) (undo-tree-id521 . -1) 3299 (3298 . 3299) (3287 . 3298) (3278 . 3287) 3278) nil (25672 21771 533036 823000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -542) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) 546 (541 . 546) (t 25672 21771 551510 557000) 541) nil (25672 21894 538785 144000) 0 nil])
([nil nil ((296 . 302) (#("yield" 0 5 (face font-lock-keyword-face fontified t)) . 296) (undo-tree-id642 . -3) (undo-tree-id643 . -4) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -5) (undo-tree-id652 . -5) (t 25672 21894 554128 271000)) nil (25672 21914 569750 85000) 0 nil])
([nil nil ((318 . 323) (305 . 318) (297 . 305) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -297) (undo-tree-id653 . -1) (296 . 298) (287 . 296) (t 25672 21914 581905 292000) 277) nil (25672 21925 967255 529000) 0 nil])
([nil nil ((#("        import pdb;pdb.set_trace()
" 0 7 (face (hi-yellow hi-yellow) fontified t) 7 8 (face (hi-yellow hi-yellow) fontified t) 8 14 (face (hi-yellow hi-yellow font-lock-keyword-face) fontified t) 14 32 (face (hi-yellow hi-yellow) fontified t) 32 33 (face (hi-yellow hi-yellow rainbow-delimiters-depth-1-face) fontified t) 33 34 (face (hi-yellow hi-yellow rainbow-delimiters-depth-1-face) fontified t) 34 35 (fontified t)) . 3317) (undo-tree-id654 . -15) (undo-tree-id655 . -34) (undo-tree-id656 . -35) (undo-tree-id657 . -35) (undo-tree-id658 . -35) (undo-tree-id659 . -34) (undo-tree-id660 . -32) (undo-tree-id661 . -34) (undo-tree-id662 . -34) (undo-tree-id663 . -35) (undo-tree-id664 . -34) (undo-tree-id665 . -35) (undo-tree-id666 . -35) (undo-tree-id667 . -15) (undo-tree-id668 . -18) (undo-tree-id669 . -7) (undo-tree-id670 . -19) (undo-tree-id671 . -22) (undo-tree-id672 . -15) (undo-tree-id673 . -19) (undo-tree-id674 . -15) (undo-tree-id675 . -15) (undo-tree-id676 . -15) (undo-tree-id677 . -19) (undo-tree-id678 . -15) (undo-tree-id679 . -15) (undo-tree-id680 . -19) (undo-tree-id681 . -19) (undo-tree-id682 . -15) (undo-tree-id683 . -19) (undo-tree-id684 . -19) (undo-tree-id685 . -15) (undo-tree-id686 . -15) (undo-tree-id687 . -19) (undo-tree-id688 . -15) (undo-tree-id689 . -19) (undo-tree-id690 . -35) 3336 (t 25672 21925 981778 607000)) nil (25672 21969 402800 490000) 0 nil])
([nil nil ((#("                print(attr, func.name)
" 0 16 (fontified t) 16 21 (face font-lock-keyword-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t)) . 2059) (undo-tree-id691 . -38) (undo-tree-id692 . -39) (undo-tree-id693 . -39) (undo-tree-id694 . -39) (undo-tree-id695 . -16) (undo-tree-id696 . -21) (undo-tree-id697 . -16) (undo-tree-id698 . -16) (undo-tree-id699 . -16) (undo-tree-id700 . -16) (undo-tree-id701 . -16) (undo-tree-id702 . -16) (undo-tree-id703 . -16) (undo-tree-id704 . -16) (undo-tree-id705 . -16) (undo-tree-id706 . -16) (undo-tree-id707 . -16) (undo-tree-id708 . -16) (undo-tree-id709 . -16) (undo-tree-id710 . -16) (undo-tree-id711 . -16) (undo-tree-id712 . -16) (undo-tree-id713 . -16) (undo-tree-id714 . -16) (undo-tree-id715 . -16) (undo-tree-id716 . -16) (undo-tree-id717 . -16) (undo-tree-id718 . -39) 2075 (t 25672 21969 417297 419000)) nil (25672 21975 13983 679000) 0 nil])
([nil nil ((577 . 589) (t 25672 21975 33235 371000)) nil (25672 22079 352534 914000) 0 nil])
([nil nil ((625 . 626) (619 . 625) (615 . 619) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -615) (undo-tree-id719 . -1) (611 . 616) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -611) (undo-tree-id720 . -1) (600 . 612) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -600) (undo-tree-id721 . -1) (598 . 601) (#("l" 0 1 (fontified t)) . -598) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (#("e" 0 1 (fontified t)) . -599) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) 600 (594 . 600) (#("f" 0 1 (fontified t)) . -594) (undo-tree-id732 . -1) (594 . 595) (592 . 594) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -592) (undo-tree-id733 . -1) (589 . 593)) nil (25672 22079 352525 799000) 0 nil])
([nil nil ((#("self " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . 573) (undo-tree-id734 . -1) (undo-tree-id735 . -4) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) 578 (t 25672 22079 380088 786000)) nil (25672 22082 235173 600000) 0 nil])
([nil nil ((620 . 624) (t 25672 22082 260057 297000)) nil (25672 22102 116269 104000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t)) . 745) (undo-tree-id754 . -2) (undo-tree-id755 . -1) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) 747 (t 25672 22102 139840 158000)) nil (25672 22137 787275 446000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . 741) (undo-tree-id741 . -4) (undo-tree-id742 . -3) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) 745) nil (25672 22137 787248 301000) 0 nil])
([nil nil ((#("        self._check_alive()
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 15 (fontified t) 15 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 28 (fontified t)) . 3376) (undo-tree-id765 . -27) (undo-tree-id766 . -28) (undo-tree-id767 . -26) (undo-tree-id768 . -26) (undo-tree-id769 . -14) (undo-tree-id770 . -25) (undo-tree-id771 . -28) (undo-tree-id772 . -28) (undo-tree-id773 . -14) (undo-tree-id774 . -14) (undo-tree-id775 . -14) (undo-tree-id776 . -14) (undo-tree-id777 . -1) (undo-tree-id778 . -2) (undo-tree-id779 . -3) (undo-tree-id780 . -4) (undo-tree-id781 . -5) (undo-tree-id782 . -6) (undo-tree-id783 . -7) (undo-tree-id784 . -8) (undo-tree-id785 . -9) (undo-tree-id786 . -10) (undo-tree-id787 . -11) (undo-tree-id788 . -12) (undo-tree-id789 . -1) (undo-tree-id790 . -13) (undo-tree-id791 . -2) (undo-tree-id792 . -14) (undo-tree-id793 . -3) (undo-tree-id794 . -15) (undo-tree-id795 . -4) (undo-tree-id796 . -16) (undo-tree-id797 . -5) (undo-tree-id798 . -17) (undo-tree-id799 . -6) (undo-tree-id800 . -18) (undo-tree-id801 . -7) (undo-tree-id802 . -19) (undo-tree-id803 . -8) (undo-tree-id804 . -20) (undo-tree-id805 . -9) (undo-tree-id806 . -21) (undo-tree-id807 . -10) (undo-tree-id808 . -22) (undo-tree-id809 . -11) (undo-tree-id810 . -23) (undo-tree-id811 . -12) (undo-tree-id812 . -24) (undo-tree-id813 . -13) (undo-tree-id814 . -25) (undo-tree-id815 . -14) (undo-tree-id816 . -26) (undo-tree-id817 . -15) (undo-tree-id818 . -27) (undo-tree-id819 . -16) (undo-tree-id820 . -28) (undo-tree-id821 . -28) 3390 (t 25672 22137 811451 407000)) nil (25672 22165 619847 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3327 . 3328) (#("
" 0 1 (fontified nil)) . -3347) (3319 . 3348)) nil (25672 22165 619772 660000) 0 nil])
([nil nil ((#("        assert isinstance(when, float)
" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 25 (face font-lock-builtin-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 32 (fontified t) 32 37 (face font-lock-builtin-face fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t)) . 3599) (undo-tree-id822 . -8) (undo-tree-id823 . -38) (undo-tree-id824 . -38) (undo-tree-id825 . -38) (undo-tree-id826 . -38) (undo-tree-id827 . -37) (undo-tree-id828 . -37) (undo-tree-id829 . -37) (undo-tree-id830 . -37) (undo-tree-id831 . -37) (undo-tree-id832 . -37) (undo-tree-id833 . -37) (undo-tree-id834 . -8) (undo-tree-id835 . -21) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -39) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -39) 3607 (t 25672 22165 643148 856000)) nil (25672 22202 688598 497000) 0 nil])
([nil nil ((4032 . 4037) (4019 . 4032) (t 25672 22202 714746 826000)) nil (25672 22283 457392 772000) 0 nil])
([nil nil ((#("    self.die()
" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t)) . 4033) (undo-tree-id1054 . -14) (undo-tree-id1055 . 11) (undo-tree-id1056 . -15) (undo-tree-id1057 . -3) (undo-tree-id1058 . -8) (undo-tree-id1059 . -15) (undo-tree-id1060 . -8) (undo-tree-id1061 . -15) (undo-tree-id1062 . -15) (undo-tree-id1063 . -15) (undo-tree-id1064 . -15) (undo-tree-id1065 . -15) (undo-tree-id1066 . -15) (undo-tree-id1067 . -15) (undo-tree-id1068 . -15) (undo-tree-id1069 . -15) (undo-tree-id1070 . -15) (undo-tree-id1071 . -8) (undo-tree-id1072 . -15) (undo-tree-id1073 . -8) (undo-tree-id1074 . -8) (undo-tree-id1075 . -8) (undo-tree-id1076 . 11) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -15) 4036) nil (25672 22283 457385 738000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4032) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . 1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) 4033) nil (25672 22283 457315 746000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -35) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (#(" " 0 1 (fontified t)) . -36) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) 37 (#("i" 0 1 (fontified t)) . -37) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (#("m" 0 1 (fontified t)) . -38) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) 39 (35 . 39)) nil (25672 22283 457208 167000) 0 nil])
([nil nil ((36 . 55) (#("f" 0 1 (fontified t)) . -36) (undo-tree-id850 . -1) (36 . 37) (#("from " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -36) (undo-tree-id851 . -5) (undo-tree-id852 . -2) (undo-tree-id853 . -1) (undo-tree-id854 . -3) (undo-tree-id855 . -2) (undo-tree-id856 . -4) (undo-tree-id857 . -2) (undo-tree-id858 . -5) (undo-tree-id859 . -2) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -5) (undo-tree-id874 . -5) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) 41 (#(".." 0 2 (fontified t)) . -41) (undo-tree-id895 . -2) (undo-tree-id896 . -1) (undo-tree-id897 . -2) (undo-tree-id898 . -1) (undo-tree-id899 . -2) (undo-tree-id900 . -2) (undo-tree-id901 . -2) (undo-tree-id902 . -2) (undo-tree-id903 . -2) (undo-tree-id904 . -2) (undo-tree-id905 . -2) (undo-tree-id906 . -2) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -2) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) (undo-tree-id920 . -2) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) 43 (#("time " 0 5 (fontified t)) . -43) (undo-tree-id928 . -5) (undo-tree-id929 . -1) (undo-tree-id930 . -2) (undo-tree-id931 . -1) (undo-tree-id932 . -3) (undo-tree-id933 . -2) (undo-tree-id934 . -4) (undo-tree-id935 . -3) (undo-tree-id936 . -5) (undo-tree-id937 . -4) (undo-tree-id938 . -5) (undo-tree-id939 . -5) (undo-tree-id940 . -5) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) 48 (#("import " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -48) (undo-tree-id955 . -7) (undo-tree-id956 . -1) (undo-tree-id957 . -2) (undo-tree-id958 . -1) (undo-tree-id959 . -3) (undo-tree-id960 . -2) (undo-tree-id961 . -4) (undo-tree-id962 . -3) (undo-tree-id963 . -5) (undo-tree-id964 . -4) (undo-tree-id965 . -6) (undo-tree-id966 . -5) (undo-tree-id967 . -7) (undo-tree-id968 . -6) (undo-tree-id969 . -7) 55 (36 . 55) (#("f" 0 1 (fontified t)) . -36) (undo-tree-id970 . -1) (35 . 37) 34) nil (25672 22283 452971 695000) 0 nil])
([nil nil ((4052 . 4053)) nil (25672 22283 452745 486000) 0 nil])
([nil nil ((4002 . 4004) (#("U" 0 1 (fontified t)) . -4002) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) 4003 (3991 . 4003) (t 25672 22283 485874 361000)) nil (25672 22339 462751 332000) 0 nil])
([nil nil ((3995 . 4000) (t 25672 22339 489271 869000)) nil (25672 22342 726233 940000) 0 nil])
([nil nil ((844 . 846) (#("f" 0 1 (fontified t)) . -844) (undo-tree-id1088 . -1) (841 . 845) (t 25672 22342 749236 856000)) nil (25672 22426 690006 627000) 0 nil])
([nil nil ((3520 . 3530) (#("TypeError" 0 9 (face font-lock-type-face fontified t)) . 3520) (undo-tree-id1112 . -8) (undo-tree-id1113 . -9) (undo-tree-id1114 . -9) (t 25672 22398 872634 997000)) nil (25672 22794 921083 664000) 0 nil] [nil nil ((nil rear-nonsticky nil 861 . 862) (#("
" 0 1 (fontified nil)) . -862) (861 . 863) 840 (t 25672 22398 872634 997000)) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 861) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (862 . 863) (nil rear-nonsticky t 861 . 862)) (25672 22425 44093 560000) 0 nil])
([nil nil ((3520 . 3532) (t 25672 22794 936424 936000)) nil (25672 22811 437344 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 862 . 863) (#("
" 0 1 (fontified nil)) . -863) (862 . 864)) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 862) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (863 . 864) (nil rear-nonsticky t 862 . 863)) (25672 22425 36383 282000) 0 nil])
([nil nil ((3542 . 3543)) nil (25672 22811 437337 122000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (t 25672 22811 456250 376000)) nil (25672 22917 773694 947000) 0 nil])
([nil nil ((3599 . 3605) (3590 . 3599) (3569 . 3590) (#("assret " 0 7 (fontified t)) . -3569) (undo-tree-id1149 . -7) 3576 (3569 . 3576) (3560 . 3569) 3544) nil (25672 22917 773691 127000) 0 nil])
([nil nil ((#("        assert isinstance(next_state, State)
" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 25 (face font-lock-builtin-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) . 3561) (undo-tree-id1119 . -44) (undo-tree-id1120 . 1) (undo-tree-id1121 . -45) (undo-tree-id1122 . -43) (undo-tree-id1123 . -43) (undo-tree-id1124 . 1) (undo-tree-id1125 . -26) (undo-tree-id1126 . -25) (undo-tree-id1127 . -37) (undo-tree-id1128 . -40) (undo-tree-id1129 . -39) (undo-tree-id1130 . -41) (undo-tree-id1131 . -40) (undo-tree-id1132 . -42) (undo-tree-id1133 . -40) (undo-tree-id1134 . -43) (undo-tree-id1135 . -40) (undo-tree-id1136 . -44) (undo-tree-id1137 . -44) (undo-tree-id1138 . -44) (undo-tree-id1139 . -43) (undo-tree-id1140 . -43) (undo-tree-id1141 . 20) (undo-tree-id1142 . -26) (undo-tree-id1143 . 2) (undo-tree-id1144 . -44) (undo-tree-id1145 . -43) (undo-tree-id1146 . -38) (undo-tree-id1147 . -43) (undo-tree-id1148 . -45) 3604) nil (25672 22917 773685 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3604 . 3605) (#("
" 0 1 (fontified nil)) . -3641) (3596 . 3642) 3562) nil (25672 23081 870747 861000) 0 nil])
([nil nil ((3597 . 3609) (#("        " 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . 3597) (undo-tree-id1156 . -8) (undo-tree-id1157 . -8) (undo-tree-id1158 . -8) (undo-tree-id1159 . -8)) ((3597 . 3605) ("            " . 3597) (undo-tree-id1152 . -8) (undo-tree-id1153 . -8) (undo-tree-id1154 . -8) (undo-tree-id1155 . -8) (t 25672 22917 791128 152000)) (25672 23084 915004 646000) 0 nil])
([nil nil ((145 . 154) (#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -145) (undo-tree-id1241 . -1) 146 (145 . 146) (t 25672 22917 791128 152000)) nil (25672 23194 267441 732000) 0 nil] [nil nil ((690 . 699) (t 25672 22917 791128 152000)) ((#("\"state\", " 0 1 (face font-lock-string-face fontified t syntax-table (15)) 1 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t syntax-table (15)) 7 9 (fontified t)) . 690)) (25672 23083 820290 268000) 0 nil])
([nil nil ((147 . 155) (#("n" 0 1 (face font-lock-string-face fontified t)) . -147) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -148) (undo-tree-id1239 . -1) 149 (146 . 149) (#("async" 0 5 (face font-lock-string-face fontified t)) . 146) (undo-tree-id1240 . -4)) nil (25672 23194 267437 574000) 0 nil])
nil
([nil nil ((217 . 234)) nil (25672 23194 267431 944000) 0 nil])
([nil nil ((310 . 315) (292 . 310) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -292) (undo-tree-id1235 . -1) (289 . 293) (#("d" 0 1 (fontified t)) . -289) (undo-tree-id1236 . -1) 290 (289 . 290) (280 . 289) 279) nil (25672 23194 267429 815000) 0 nil])
([nil nil ((387 . 398) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -387) (undo-tree-id1233 . -1) (386 . 388) (384 . 386) (#("False" 0 5 (face font-lock-constant-face fontified t)) . 384) (undo-tree-id1234 . -4)) nil (25672 23194 267422 65000) 0 nil])
([nil nil ((417 . 418)) nil (25672 23194 267418 483000) 0 nil])
([nil nil ((#("        yield from self.f(obj)
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 15 (face font-lock-keyword-face fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . 1038) (undo-tree-id1228 . -30) (undo-tree-id1229 . -31) (undo-tree-id1230 . -31) (undo-tree-id1231 . -31) (undo-tree-id1232 . -17) 1055) nil (25672 23194 267416 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 426 . 427) (#("
" 0 1 (fontified nil)) . -449) (418 . 450) 400) nil (25672 23194 267410 666000) 0 nil])
([nil nil ((#("            yield 
" 0 12 (fontified t) 12 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 400) (undo-tree-id1221 . -18) (undo-tree-id1222 . -16) (undo-tree-id1223 . -19) (undo-tree-id1224 . -8) (undo-tree-id1225 . -8) (undo-tree-id1226 . -8) (undo-tree-id1227 . -19) 408) nil (25672 23194 267408 369000) 0 nil])
([nil nil ((#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -412) (undo-tree-id1213 . -8) (undo-tree-id1214 . -8) (undo-tree-id1215 . -8) (undo-tree-id1216 . -8) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8) (undo-tree-id1219 . -8) (undo-tree-id1220 . -8) (400 . 412) 408) nil (25672 23194 267400 584000) 0 nil])
([nil nil ((443 . 448) (#("    " 0 4 (fontified t)) . -443) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) 447 (434 . 447) 408) nil (25672 23194 267391 876000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -461) (undo-tree-id1206 . -8) (449 . 461) 461) nil (25672 23194 267384 115000) 0 nil])
([nil nil ((#("
class GenState(State):
    def step(self, obj):

" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 15 (face font-lock-type-face fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 28 (fontified t) 28 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 36 (face font-lock-function-name-face fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 41 (face font-lock-keyword-face fontified t) 41 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-1-face) fontified t) 47 49 (fontified t) 49 50 (fontified t)) . 1023) (undo-tree-id1161 . -49) (undo-tree-id1162 . -49) (undo-tree-id1163 . -49) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -24) (undo-tree-id1168 . -24) (undo-tree-id1169 . -49) (undo-tree-id1170 . -49) (undo-tree-id1171 . -49) (undo-tree-id1172 . -49) (undo-tree-id1173 . -50) (undo-tree-id1174 . -50) (undo-tree-id1175 . -49) (undo-tree-id1176 . -50) (undo-tree-id1177 . -13) (undo-tree-id1178 . -36) (undo-tree-id1179 . -13) (undo-tree-id1180 . -49) (undo-tree-id1181 . -36) (undo-tree-id1182 . -50) (undo-tree-id1183 . -49) (undo-tree-id1184 . -50) (undo-tree-id1185 . -50) (undo-tree-id1186 . -49) (undo-tree-id1187 . -50) (undo-tree-id1188 . -36) (undo-tree-id1189 . -49) (undo-tree-id1190 . -13) (undo-tree-id1191 . -36) (undo-tree-id1192 . -36) (undo-tree-id1193 . -13) (undo-tree-id1194 . -49) (undo-tree-id1195 . -36) (undo-tree-id1196 . -50) (undo-tree-id1197 . -49) (undo-tree-id1198 . -49) (undo-tree-id1199 . -49) (undo-tree-id1200 . -24) (undo-tree-id1201 . -49) (undo-tree-id1202 . -1) (undo-tree-id1203 . -24) (undo-tree-id1204 . -1) (undo-tree-id1205 . -50)) nil (25672 23194 267378 316000) 0 nil])
([nil nil ((749 . 762) (#("f" 0 1 (fontified t)) . -749) (undo-tree-id1160 . -1) (746 . 750)) nil (25672 23194 267331 986000) 0 nil])
([nil nil ((1389 . 1394) (#("GenState" 0 8 (fontified t)) . 1389) (undo-tree-id1242 . -7) (undo-tree-id1243 . -8) (undo-tree-id1244 . -8) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) (t 25672 23194 284236 386000)) nil (25672 23211 29969 178000) 0 nil])
([nil nil ((1414 . 1430)) nil (25672 23211 29936 51000) 0 nil])
([nil nil ((4256 . 4263) (4252 . 4256) (#("f" 0 1 (fontified t)) . -4252) (undo-tree-id1271 . -1) (4250 . 4253) (#("," 0 1 (fontified t)) . -4250) (undo-tree-id1272 . -1) (#(" " 0 1 (fontified t)) . -4251) (undo-tree-id1273 . -1) 4252 (4242 . 4252) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4242) (undo-tree-id1274 . -1) (4232 . 4243) (4223 . 4232) (4221 . 4223) (4213 . 4221) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4213) (undo-tree-id1275 . -1) (4205 . 4214) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -4205) (undo-tree-id1276 . -1) (4202 . 4206) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4202) (undo-tree-id1277 . -1) (4200 . 4203) (4195 . 4200) (#("    " 0 4 (fontified t)) . 4195) (undo-tree-id1278 . -4) 4199 (4194 . 4199) (t 25672 23211 56085 296000) 4170) nil (25672 23496 881388 825000) 0 nil])
([nil nil ((4257 . 4262) (#("delay" 0 5 (fontified t)) . 4257) (undo-tree-id1258 . -4) (undo-tree-id1259 . -1) (undo-tree-id1260 . -2) (undo-tree-id1261 . -3) (undo-tree-id1262 . -4) (undo-tree-id1263 . -3) (undo-tree-id1264 . -5) (undo-tree-id1265 . -4) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5)) nil (25672 23496 881375 451000) 0 nil])
([nil nil ((4262 . 4272)) nil (25672 23496 881362 851000) 0 nil])
([nil nil ((4225 . 4231) (4216 . 4225) (#("delay" 0 5 (fontified t)) . -4216) (undo-tree-id1257 . -5) 4221) nil (25672 23496 881361 287000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4287 . 4288) (#("
" 0 1 (fontified nil)) . -4371) (4283 . 4372) 4268) nil (25672 23496 881357 778000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4284) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) 4288 (4283 . 4288) 4238) nil (25672 23496 881354 927000) 0 nil])
([nil nil ((4293 . 4295) (#("after" 0 5 (face font-lock-function-name-face fontified t)) . 4293) (undo-tree-id1250 . -4) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5)) nil (25672 23496 881347 737000) 0 nil])
([nil nil ((4347 . 4349) (#("after" 0 5 (fontified t)) . 4347) (undo-tree-id1247 . -4) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5)) nil (25672 23496 881338 851000) 0 nil])
([nil nil ((3613 . 3622) (3600 . 3613) (t 25672 23496 901420 604000) 3585) nil (25672 23586 479436 773000) 0 nil])
([nil nil ((3599 . 3605)) nil (25672 23586 479429 613000) 0 nil])
([nil nil ((#("
    def after(self, *args, **kwargs):
        return self._state.after(*args, **kwargs)

    def at(self, *args, **kwargs):
        return self._state.at(*args, **kwargs)
" 0 1 (fontified t) 1 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 14 (face font-lock-function-name-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 19 (face font-lock-keyword-face fontified t) 19 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 39 (fontified t) 39 47 (fontified t) 47 53 (face font-lock-keyword-face fontified t) 53 54 (fontified t) 54 58 (face font-lock-keyword-face fontified t) 58 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 93 (fontified t) 93 94 (fontified t rear-nonsticky t) 94 97 (face font-lock-keyword-face fontified t) 97 98 (fontified t) 98 100 (face font-lock-function-name-face fontified t) 100 101 (face (rainbow-delimiters-depth-1-face) fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-1-face) fontified t) 123 125 (fontified t) 125 133 (fontified t) 133 139 (face font-lock-keyword-face fontified t) 139 140 (fontified t) 140 144 (face font-lock-keyword-face fontified t) 144 154 (fontified t) 154 155 (face (rainbow-delimiters-depth-1-face) fontified t) 155 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-1-face) fontified t) 171 172 (fontified t)) . 4223) (undo-tree-id1301 . -125) (undo-tree-id1302 . -171) (undo-tree-id1303 . -125) (undo-tree-id1304 . -171) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -39) (undo-tree-id1308 . -39) (undo-tree-id1309 . -89) (undo-tree-id1310 . -89) (undo-tree-id1311 . -90) (undo-tree-id1312 . -90) (undo-tree-id1313 . -125) (undo-tree-id1314 . -125) (undo-tree-id1315 . -1) (undo-tree-id1316 . -125) (t 25672 23586 496558 237000)) nil (25672 24021 998968 695000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4222) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) 4223) nil (25672 24021 998940 743000) 0 nil])
([nil nil ((4222 . 4223)) nil (25672 24021 998882 502000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3506) (undo-tree-id1337 . -8) 3514 (3505 . 3514) (t 25672 24022 16256 359000) 3504) nil (25672 24547 525647 308000) 0 nil])
([nil nil ((3516 . 3519) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3516) (undo-tree-id1335 . -1) (3515 . 3517) (3506 . 3515) (#("        " 0 8 (fontified t)) . 3506) (undo-tree-id1336 . -8) 3514 (3505 . 3514) 3486) nil (25672 24547 525643 513000) 0 nil])
([nil nil ((#("        if(i
" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 3507) (undo-tree-id1329 . -12) (undo-tree-id1330 . 1) (undo-tree-id1331 . -13) (undo-tree-id1332 . -11) (undo-tree-id1333 . 3) (undo-tree-id1334 . -11) 3518) nil (25672 24547 525638 371000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3507) (undo-tree-id1327 . 1) (undo-tree-id1328 . -1)) nil (25672 24547 525630 990000) 0 nil])
([nil nil ((3516 . 3523) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3516) (undo-tree-id1325 . -1) (3515 . 3517) (3506 . 3515) (#("        " 0 8 (fontified t)) . 3506) (undo-tree-id1326 . -8) 3514 (3505 . 3514) 3486) nil (25672 24547 525626 968000) 0 nil])
([nil nil ((#("        if isins
" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 3507) (undo-tree-id1320 . -16) (undo-tree-id1321 . 1) (undo-tree-id1322 . -17) (undo-tree-id1323 . -15) (undo-tree-id1324 . 1) 3522) nil (25672 24547 531297 947000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3507) (undo-tree-id1338 . 1) (undo-tree-id1339 . -1)) ((3507 . 3508)) (25672 24548 661258 593000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 979) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 980 (t 25672 24551 74900 763000)) nil (25674 8187 320620 974000) 0 nil])
([nil nil ((#("now " 0 4 (fontified t)) . 975) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -3) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) 979) nil (25674 8187 320615 170000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 974) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 975) nil (25674 8187 320606 140000) 0 nil])
([nil nil ((#("obj" 0 3 (fontified t)) . 971) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -2) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) 974) nil (25674 8187 320593 20000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 970) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 971) nil (25674 8187 320574 733000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 966) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -3) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) 970) nil (25674 8187 320554 771000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -966) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 967) nil (25674 8187 320526 898000) 0 nil])
nil
