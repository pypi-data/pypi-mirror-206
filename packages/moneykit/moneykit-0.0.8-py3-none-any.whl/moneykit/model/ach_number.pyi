# coding: utf-8

"""
    MoneyKit API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""

import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import uuid  # noqa: F401
from datetime import date, datetime  # noqa: F401

import frozendict  # noqa: F401
import typing_extensions  # noqa: F401

from moneykit import schemas  # noqa: F401

class AchNumber(schemas.DictSchema):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "account_number",
            "routing_number",
        }

        class properties:
            account_number = schemas.StrSchema
            routing_number = schemas.StrSchema

            class wire_routing_number(schemas.StrBase, schemas.NoneBase, schemas.Schema, schemas.NoneStrMixin):
                def __new__(
                    cls,
                    *_args: typing.Union[
                        None,
                        str,
                    ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> "wire_routing_number":
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "account_number": account_number,
                "routing_number": routing_number,
                "wire_routing_number": wire_routing_number,
            }
    account_number: MetaOapg.properties.account_number
    routing_number: MetaOapg.properties.routing_number

    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_number"]) -> MetaOapg.properties.account_number: ...
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["routing_number"]) -> MetaOapg.properties.routing_number: ...
    @typing.overload
    def __getitem__(
        self, name: typing_extensions.Literal["wire_routing_number"]
    ) -> MetaOapg.properties.wire_routing_number: ...
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    def __getitem__(
        self,
        name: typing.Union[
            typing_extensions.Literal[
                "account_number",
                "routing_number",
                "wire_routing_number",
            ],
            str,
        ],
    ):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    @typing.overload
    def get_item_oapg(
        self, name: typing_extensions.Literal["account_number"]
    ) -> MetaOapg.properties.account_number: ...
    @typing.overload
    def get_item_oapg(
        self, name: typing_extensions.Literal["routing_number"]
    ) -> MetaOapg.properties.routing_number: ...
    @typing.overload
    def get_item_oapg(
        self, name: typing_extensions.Literal["wire_routing_number"]
    ) -> typing.Union[MetaOapg.properties.wire_routing_number, schemas.Unset]: ...
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    def get_item_oapg(
        self,
        name: typing.Union[
            typing_extensions.Literal[
                "account_number",
                "routing_number",
                "wire_routing_number",
            ],
            str,
        ],
    ):
        return super().get_item_oapg(name)
    def __new__(
        cls,
        *_args: typing.Union[
            dict,
            frozendict.frozendict,
        ],
        account_number: typing.Union[
            MetaOapg.properties.account_number,
            str,
        ],
        routing_number: typing.Union[
            MetaOapg.properties.routing_number,
            str,
        ],
        wire_routing_number: typing.Union[
            MetaOapg.properties.wire_routing_number, None, str, schemas.Unset
        ] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[
            schemas.AnyTypeSchema,
            dict,
            frozendict.frozendict,
            str,
            date,
            datetime,
            uuid.UUID,
            int,
            float,
            decimal.Decimal,
            None,
            list,
            tuple,
            bytes,
        ],
    ) -> "AchNumber":
        return super().__new__(
            cls,
            *_args,
            account_number=account_number,
            routing_number=routing_number,
            wire_routing_number=wire_routing_number,
            _configuration=_configuration,
            **kwargs,
        )
