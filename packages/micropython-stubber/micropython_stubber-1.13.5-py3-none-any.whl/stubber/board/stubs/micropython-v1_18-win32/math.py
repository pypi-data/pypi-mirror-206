"""
Module: 'math' on micropython-v1.18-win32
"""
# MCU: {'machine': 'unknown', 'sysname': 'unknown', 'platform': 'win32', 'nodename': 'unknown', 'ver': 'v1.18', 'release': '1.18.0', 'name': 'micropython', 'family': 'micropython', 'port': 'win32', 'version': '1.18.0', 'mpy': 517, 'build': ''}
# Stubber: 1.11.2
from typing import Any

e = 2.718281828459045 # type: float
pi = 3.141592653589793 # type: float
def isnan(*args, **kwargs) -> Any:
    ...

def ldexp(*args, **kwargs) -> Any:
    ...

def lgamma(*args, **kwargs) -> Any:
    ...

def trunc(*args, **kwargs) -> Any:
    ...

def gamma(*args, **kwargs) -> Any:
    ...

def frexp(*args, **kwargs) -> Any:
    ...

def isinf(*args, **kwargs) -> Any:
    ...

def isclose(*args, **kwargs) -> Any:
    ...

def isfinite(*args, **kwargs) -> Any:
    ...

def sqrt(*args, **kwargs) -> Any:
    ...

def sinh(*args, **kwargs) -> Any:
    ...

def log(*args, **kwargs) -> Any:
    ...

def tan(*args, **kwargs) -> Any:
    ...

def tanh(*args, **kwargs) -> Any:
    ...

def log2(*args, **kwargs) -> Any:
    ...

def log10(*args, **kwargs) -> Any:
    ...

def sin(*args, **kwargs) -> Any:
    ...

def modf(*args, **kwargs) -> Any:
    ...

def radians(*args, **kwargs) -> Any:
    ...

def atan2(*args, **kwargs) -> Any:
    ...

def atan(*args, **kwargs) -> Any:
    ...

def fmod(*args, **kwargs) -> Any:
    ...

def atanh(*args, **kwargs) -> Any:
    ...

def ceil(*args, **kwargs) -> Any:
    ...

def acos(*args, **kwargs) -> Any:
    ...

def pow(*args, **kwargs) -> Any:
    ...

def asinh(*args, **kwargs) -> Any:
    ...

def acosh(*args, **kwargs) -> Any:
    ...

def asin(*args, **kwargs) -> Any:
    ...

def expm1(*args, **kwargs) -> Any:
    ...

def exp(*args, **kwargs) -> Any:
    ...

def copysign(*args, **kwargs) -> Any:
    ...

def fabs(*args, **kwargs) -> Any:
    ...

def floor(*args, **kwargs) -> Any:
    ...

def cosh(*args, **kwargs) -> Any:
    ...

def cos(*args, **kwargs) -> Any:
    ...

def erfc(*args, **kwargs) -> Any:
    ...

def degrees(*args, **kwargs) -> Any:
    ...

def erf(*args, **kwargs) -> Any:
    ...

