name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

env:
  CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8, <=3.12"
  CIBW_SKIP: "pp37* pp38*"
  CIBW_ARCHS_WINDOWS: auto64
  CIBW_ARCHS_LINUX: auto64
  CIBW_ARCHS_MACOS: x86_64 arm64
  CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.14
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
  CIBW_BUILD_VERBOSITY: 1
  CIBW_PRERELEASE_PYTHONS: True
  CIBW_TEST_SKIP: "*-macosx_arm64"
  # CIBW_TEST_COMMAND: pytest {project}/tests
  # CIBW_TEST_REQUIRES: pytest

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build SDist
        run: pipx run build --sdist
      - name: Check metadata
        run: pipx run twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: pypa/cibuildwheel@v2.12.3
      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/setup-python@v4
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
