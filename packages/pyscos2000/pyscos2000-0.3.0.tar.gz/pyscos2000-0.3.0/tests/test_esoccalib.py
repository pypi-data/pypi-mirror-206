"""Test a caf/cap calibration case from the ESOC MIB"""
import unittest
from pathlib import Path

from pyscos2000 import SCOS, PacketInterface, Parameter

packet = b''.join(
         [b'\x08\xa5\xc6\x16\x03*\x10\x03\x19\x00+\xcd\x866!\xf5\x00\x00\x00W',
          b'\x80\x00\x00\x88\x00\x02\x00\x00\x00\x00  \x08\xa0\x82\x02\x08\x80',
          b'\x08\x82\x80\x00\x00\x00\x00\x00\x08\x08\x02\x02\x81\x00\x80\x00',
          b'\x00\x00 \xaa\xa8\xaa\xaa\xaa\x80\xaa\xaa\x02\xaa\xaa\xaa\xaa\xaa',
          b'\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa0\xaa\xaa\xaa\x8a\xaa\x82\xa9',
          b'\x88\xaa\xaa\xaa\xaa\xaa\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R\x00\x00\x03.\x00\x00',
          b'\x03\xce\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc1\xa4[9\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\xc1\xa3\xb5\xe9\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\xc1\xbd\x1f\xf9\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\xc1\xbb\xf7\xb8\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x98\x12\x00\x00~^\x00\x00s\x04\x00\x00u\xa0',
          b'\x00\x00t\xa0\x00\x00p\xf8\x00\x00r\x9a\x00\x00\x00\x00\x00\x00\xbb',
          b',\x00\x00\xba\xe0\x00\x00\xb9\xe2\x00\x00\xc0\xdc\x00\x00\xc0\xbc',
          b'\x00\x00\xa9f\x00\x00\xaa\xce\x00\x00\x81\xbc\x00\x00\x85|\x00\x00',
          b'\xac\xa8\x00\x00\xa6@\x00\x00\xb9\xc4\x00\x00\xab\x06\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00oj\x00\x00kb\x00\x00l',
          b'\x02\x00\x00r\xb6\x00\x00t&\x00\x00k\n\x00\x00jf\x00\x00d\x04\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00r\x9e\x00\x00t',
          b'\x90\x00\x00Z\x8c\x00\x00W\xae\x00\x00e\x16\x00\x00` \x00\x00[\xca',
          b'\x00\x00W\xc2\x00\x00eP\x00\x00f\x1e\x00\x00f<\x00\x00ap\x00\x00g',
          b'\x9e\x00\x00cL\x00\x00e\xcc\x00\x00c\x96\x00\x00g\x12\x00\x00b\x00',
          b'\x00\x00`\xc0\x00\x00e\xb0\x00\x00g\xee\x00\x00g\x9e\x00\x00\x8a',
          b'\xba\x00\x00\\d\x00\x00[X\x00\x00]X\x00\x00f\x00\x00\x00gL\x00\x00',
          b'g\x88\x00\x00x@\x00\x00y\xfe\x00\x00y2\x00\x00yd\x00\x00z2\x00\x00',
          b'pt\x00\x00w\xb4\x00\x00uh\x00\x00wv\x00\x00j\x86\x00\x00w`\x00\x00',
          b'x\x98\x00\x00w\x86\x00\x00z\xc2\x00\x00k\x8e\x00\x00v\xa8\x00\x00z2',
          b'\x00\x00f\x88\x00\x00x\xaa\x00\x00~\xe4\x00\x00q\xde\x00\x00xd\x00',
          b'\x00fp\x00\x00z\x92\x00\x00\xad\x86\x00\x00\xad\xcc\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00c\x16\x00\x00f\x12\x00\x00p\x9e\x00',
          b'\x00s6\x00\x00q\xc4\x00\x00x\x94\x00\x00{0\x00\x00\xb6\x8e\x00\x00',
          b'\xaf\xe2\x00\x00\x03\xc6\x00\x00\x88\x1e\x00\x00\xb2\x84\x00\x00',
          b'\xba\x04\x00\x00\x00\x00\x00\x00\xb80\x00\x00\x85V\x00\x00\x80\x9a',
          b'\x00\x00Z2\x00\x00Z$\x00\x00_&\x00\x00Xb\x00\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00{:\x00\x00\xbb\xb4\x00\x00\xc6\xee\x00\x00\xcc\xfa',
          b'\x00\x00\x00\x00\x00\x00\xc8\xb2\x00\x00\x00\x00\x00\x00\xdb2\x00',
          b'\x00\x00\x00\x00\x00\xc5\x1c\x00\x00\xbe\x96\x00\x00W~\x00\x00Z\xa2',
          b'\x00\x00V"\x00\x00V&\x00\x00\xc5l\x00\x00\xc58\x00\x00\x96:\x00\x00',
          b'\xad:\x00\x00\xaaV\x00\x00\xba4\x00\x00\x89p\x00\x00\\\xc0\x00\x00',
          b'Z\xfc\x00\x00fJ\x00\x00gh\x00\x00\x00\x00\x00\x00\x93H\x00\x00\x93',
          b'*\x00\x00\x89\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
          b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00',
          b'\xde\xed',
          ])
RAW = [50926, 52474, 51378, 56114]

class ESOCCafCapTest(unittest.TestCase):
    def setUp(self):
        self.scos = SCOS(Path(__file__).parent / 'esoccalib')

    def test_values(self):
        self.assertTrue(False)