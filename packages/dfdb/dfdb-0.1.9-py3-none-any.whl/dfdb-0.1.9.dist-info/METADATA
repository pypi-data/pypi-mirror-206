Metadata-Version: 2.1
Name: dfdb
Version: 0.1.9
Summary: Pandas-like interface for manipulating SQL databases.
Author: Ho Yin Chau
License: MIT License
        
        Copyright (c) 2023 hchau630
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: repository, https://github.com/hchau630/dfdb
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas (>=1.5.3)
Requires-Dist: SQLAlchemy (>=2.0.0)
Requires-Dist: hyclib (>=0.1.13)
Requires-Dist: addict
Requires-Dist: beautifulsoup4

# dfdb
Pandas-like interface for manipulating SQL databases

## Install
`pip install dfdb`

## Overview
This package is a lightweight wrapper around SQLalchemy. As such, it can be used with a variety of database backends, although as of now the package has only been tested with SQLite.

The `dfdb.Database` class provides a dict-like interface of manipulating tables in a SQL database. For example, if we create a `Database` object like

```db = dfdb.Database(filename='data.db', drivername='sqlite')```

Then we can perform operations on a table called `df` in `data.db` by calling, for example

```db['df'].groupby('col1').agg(mean=('col2', 'mean')).fetch()```

`db['df']` is a `dfdb.DataFrame` object that behaves almost identically as a `pandas.DataFrame`. The only difference is that you need to call `.fetch()`, which establishes a connection to the database and performs the corresponding SQL query.

Adding rows to the table is as simple as

```db['df'].append({'col1': 1, 'col2': 2})```

More detailed documentation to follow in the future.
