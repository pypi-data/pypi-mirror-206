# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-27 13:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/mdb/index.md:5
msgid "Objects in Mdb"
msgstr ""

#: ../../reference/mdb/index.md:1
msgid "Abaqus Model Database"
msgstr ""

#: ../../reference/mdb/index.md:3
msgid "Mdb commands are used to create and upgrade an Abaqus model database that stores models and analysis controls."
msgstr ""

#: ../../reference/mdb/index.md:15
msgid "Classes"
msgstr ""

#: ../../reference/mdb/index.md:17
msgid "Mdb"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:1
msgid "Bases: :py:class:`~abaqus.Part.AcisMdb.AcisMdb`, :py:class:`~abaqus.Job.JobMdb.JobMdb`"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:1
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:1
msgid "The Mdb object is the high-level Abaqus model database. A model database stores models and analysis controls."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:5
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:5
msgid "This object can be accessed by::"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:10
msgid "Check `Mdb on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:12
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:12
#: ../../None:12:<autosummary>:1
msgid "This constructor creates an empty Mdb object."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:15
#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:4
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:15
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:6
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:4
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:4
msgid "This function can be accessed by::"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:0
#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.closeAuxMdb:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:0
msgid "Parameters"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:20
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:20
msgid "A String specifying the path to be used when the model database is saved to a file. If you do not provide a file extension, .cae is appended automatically to the path. The default value is an empty string."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:0
#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:0
msgid "Returns"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:25
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:25
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:16
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:16
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:16
msgid "A Mdb object"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:0
#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:0
msgid "Return type"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:26
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:26
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:17
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:17
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:17
msgid ":class:`Mdb`"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:0
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`version <abaqus.Mdb.MdbBase.MdbBase.version>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.version:1
msgid "An Int specifying the release number of the Mdb object in memory."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`lastChangedCount <abaqus.Mdb.MdbBase.MdbBase.lastChangedCount>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid "A Float specifying the value of a counter associated with the Mdb object."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`jobs <abaqus.Mdb.MdbBase.MdbBase.jobs>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.jobs:1
msgid "A repository of Job objects."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`adaptivityProcesses <abaqus.Mdb.MdbBase.MdbBase.adaptivityProcesses>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.adaptivityProcesses:1
msgid "A repository of AdaptivityProcess objects."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`coexecutions <abaqus.Mdb.MdbBase.MdbBase.coexecutions>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.coexecutions:1
msgid "A repository of Coexecution objects."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`optimizationProcesses <abaqus.Mdb.MdbBase.MdbBase.optimizationProcesses>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.optimizationProcesses:1
msgid "A repository of OptimizationProcess objects."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`meshEditOptions <abaqus.Mdb.MdbBase.MdbBase.meshEditOptions>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.meshEditOptions:1
msgid "A MeshEditOptions object specifying the undo/redo behavior when editing meshes on parts or part instances."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`models <abaqus.Mdb.MdbBase.MdbBase.models>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.models:1
msgid "A repository of Model objects."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`customData <abaqus.Mdb.MdbBase.MdbBase.customData>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.customData:1
msgid "A RepositorySupport object."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`annotations <abaqus.Mdb.MdbBase.MdbBase.annotations>`\\"
msgstr ""

#: ../../None:12:<autosummary>:1
#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.annotations:1
msgid "A repository of Annotation objects."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:0
msgid "Public Methods:"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`Model <abaqus.Mdb.Mdb.Mdb.Model>`\\ \\(name\\[\\, description\\, stefanBoltzmann\\, ...\\]\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:1
#: ../../None:3:<autosummary>:1
msgid "This method creates a Model object."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openAcis <abaqus.Part.AcisMdb.AcisMdb.openAcis>`\\ \\(fileName\\[\\, scaleFromFile\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing ACIS-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openCatia <abaqus.Part.AcisMdb.AcisMdb.openCatia>`\\ \\(fileName\\[\\, topology\\, ...\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing V5-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openEnf <abaqus.Part.AcisMdb.AcisMdb.openEnf>`\\ \\(fileName\\, fileType\\[\\, topology\\, ...\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing Elysium Neutral File-format geometry that was created by CATIA V5, I-DEAS, or Pro/ENGINEER."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openIges <abaqus.Part.AcisMdb.AcisMdb.openIges>`\\ \\(fileName\\[\\, trimCurve\\, ...\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing IGES-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openParasolid <abaqus.Part.AcisMdb.AcisMdb.openParasolid>`\\ \\(fileName\\[\\, topology\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing Parasolid-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openStep <abaqus.Part.AcisMdb.AcisMdb.openStep>`\\ \\(fileName\\[\\, scale\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing STEP-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openVda <abaqus.Part.AcisMdb.AcisMdb.openVda>`\\ \\(fileName\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing VDA-FS-format geometry."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`openSolidworks <abaqus.Part.AcisMdb.AcisMdb.openSolidworks>`\\ \\(fileName\\[\\, topology\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid "This method creates an AcisFile object from a file containing Solidworks format geometry."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`Job <abaqus.Job.JobMdb.JobMdb.Job>`\\ \\(name\\, model\\[\\, description\\, type\\, queue\\, ...\\]\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid "This method creates an analysis job using a model on a model database (MDB) for the model definition."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`JobFromInputFile <abaqus.Job.JobMdb.JobMdb.JobFromInputFile>`\\ \\(name\\, inputFileName\\[\\, ...\\]\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid "This method creates an analysis job using an input file for the model definition."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`OptimizationProcess <abaqus.Job.JobMdb.JobMdb.OptimizationProcess>`\\ \\(name\\, model\\, task\\, ...\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid "This method creates an OptimizationProcess object."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`__init__ <abaqus.Mdb.MdbBase.MdbBase.__init__>`\\ \\(\\[pathName\\]\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`importDxf <abaqus.Mdb.MdbBase.MdbBase.importDxf>`\\ \\(fileName\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid "This method creates a ConstrainedSketch object from a file containing dxf-format (AutoCAD) geometry."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`openMdb <abaqus.Mdb.MdbBase.MdbBase.openMdb>`\\ \\(pathName\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:1
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:1
#: ../../None:12:<autosummary>:1
msgid "This method opens an existing model database file."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`close <abaqus.Mdb.MdbBase.MdbBase.close>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid "This method closes an open Mdb object but does not save the Mdb object to disk."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`save <abaqus.Mdb.MdbBase.MdbBase.save>`\\ \\(\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:1
#: ../../None:12:<autosummary>:1
msgid "This method saves an Mdb object to disk at the location specified by **pathName** (*pathName* is a member of the Mdb object)."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`saveAs <abaqus.Mdb.MdbBase.MdbBase.saveAs>`\\ \\(pathName\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:1
#: ../../None:12:<autosummary>:1
msgid "This method saves an Mdb object to disk at the specified location."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`openAuxMdb <abaqus.Mdb.MdbBase.MdbBase.openAuxMdb>`\\ \\(pathName\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid "This method opens an auxiliary Mdb object on the disk at the specified location."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`closeAuxMdb <abaqus.Mdb.MdbBase.MdbBase.closeAuxMdb>`\\ \\(\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.closeAuxMdb:1
#: ../../None:12:<autosummary>:1
msgid "This method closes the auxiliary Mdb which had been opened earlier using the openAuxMdb command."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`getAuxMdbModelNames <abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames>`\\ \\(\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:1
#: ../../None:12:<autosummary>:1
msgid "This method returns a list of model names present in the auxiliary Mdb which had been opened earlier using the openAuxMdb command."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`copyAuxMdbModel <abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel>`\\ \\(fromName\\[\\, toName\\]\\)"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:1
#: ../../None:12:<autosummary>:1
msgid "This method copies a specified model from the auxiliary Mdb which had been opened earlier using the openAuxMdb command."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb:1
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:1
msgid "Member Details:"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:9
msgid "Check `Model on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-modelpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:12
msgid "A String specifying the repository key."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:14
msgid "A String specifying the purpose and contents of the Model object. The default value is an empty string."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:17
msgid "None or a Float specifying the Stefan-Boltzmann constant. The default value is None."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:19
msgid "None or a Float specifying the absolute zero constant. The default value is None."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:21
msgid "A SymbolicConstant specifying the type of incident wave formulation to be used in acoustic problems. Possible values are NOT_SET, SCATTERED, and TOTAL. The default value is NOT_SET."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:25
msgid "A SymbolicConstant specifying the analysis model type. Possible values are STANDARD_EXPLICIT and ELECTROMAGNETIC. The default is STANDARD_EXPLICIT."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:28
msgid "None or a Float specifying the universal gas constant. The default value is None."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:30
msgid "A boolean specifying whether to copy the constraints created in the model to the model that instances this model. The default value is ON."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:33
msgid "A boolean specifying whether to copy the connectors created in the model to the model that instances this model. The default value is ON."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:36
msgid "A boolean specifying whether to copy the interactions created in the model to the model that instances this model. The default value is ON."
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:39
msgid "**model** -- A Model object"
msgstr ""

#: ../../../../src/abaqus/Mdb/Mdb.py:docstring of abaqus.Mdb.Mdb.Mdb.Model:40
msgid ":class:`Model`"
msgstr ""

#: ../../reference/mdb/index.md:27
msgid "Other Classes"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase:10
msgid "Check `MdbBase on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.close:1
msgid "This method closes an open Mdb object but does not save the Mdb object to disk. After closing the Mdb object, this method creates a new unnamed empty Mdb object."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.closeAuxMdb:5
msgid "Check `MdbBase.closeAuxMdb on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbcloseauxmdbpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.closeAuxMdb:7
msgid "The auxiliary Mdb was not opened; If the auxiliary Mdb was not opened earlier"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:5
msgid "Check `MdbBase.copyAuxMdbModel on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbcopyauxmdbmodelpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:8
msgid "A String specifying the model name in the auxiliary Mdb which is to be copied."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:10
msgid "A String specifying the name to be given to the model after it is copied into the Mdb. If this argument is not specified **toName** is assumed to be the same as **fromName**. If a model with name **toName** already exists in Mdb, it is overwritten."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:0
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:0
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:0
msgid "Raises"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:14
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:7
msgid "The auxiliary Mdb was not opened;     If the auxiliary Mdb was not opened earlier"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.copyAuxMdbModel:15
msgid "fromName does not exist;     If the model fromName does not exist in the auxiliary Mdb"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:4
msgid "A list of model names present in the auxiliaryMdb"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.getAuxMdbModelNames:5
msgid ":class:`List[str]`"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:1
msgid "This method creates a ConstrainedSketch object from a file containing dxf-format (AutoCAD) geometry. Only a limited number of entities are supported. This format should be used only if no other formats are available."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:11
msgid "Check `MdbBase.importDxf on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbimportdxfpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.importDxf:14
msgid "A String specifying the path to the dxf file to open."
msgstr ""

#: ../../docstring of abaqus.Mdb.MdbBase.MdbBase.lastChangedCount:1
msgid "A Float specifying the value of a counter associated with the Mdb object. The counter indicates when the Mdb object was last changed."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:1
msgid "This method opens an auxiliary Mdb object on the disk at the specified location. This enables models from the auxiliary Mdb object to be copied into the current Mdb."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:5
msgid "Check `MdbBase.openAuxMdb on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbopenauxmdbpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:8
msgid "A String specifying the path to the auxiliary Mdb which is to be opened. If you do not provide a file extension, .cae is appended automatically to the path."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:12
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:19
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:19
msgid "invalid model database;     If the file is an invalid model database"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:13
msgid "incompatible release number;     If the file contains a model database from an Abaqus release other than the Abaqus     release you are currently running"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openAuxMdb:14
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:22
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:22
msgid "cannot open file;     If the command fails to open the model database file for reasons not mentioned above"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:9
msgid "Check `MdbBase.openMdb on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbopenmdbpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:12
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:12
msgid "A String specifying the path to the model database file to open. If you do not provide a file extension, Abaqus/CAE attempts to open the file with .cae appended to the path."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:20
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:20
msgid "incompatible release number, expected *<Abaqus release>*, got *<earlier or later Abaqus release>*;     If the file contains a model database from an Abaqus release other than the Abaqus     release you are currently running"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.openMdb:21
#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:21
msgid "cannot open file; may be in use by another CAE session;     If the model database file is already opened in write mode"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:5
msgid "Check `MdbBase.save on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbsavepyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:7
msgid "cannot save file; If the command fails to save the Mdb object to disk for reasons not mentioned above"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:10
msgid "cannot save file: pathname member is empty;     If **pathName** is empty"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.save:11
#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:11
msgid "“abaqus.cae” is an invalid CAE filename;     If **pathName** is abaqus.cae"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:4
msgid "Check `MdbBase.saveAs on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbpyc.htm?contextscope=all#simaker-mdbsaveaspyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:7
msgid "A String specifying the path to be used when the model database is saved to a file. If you do not provide a file extension, .cae is appended automatically to the path."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbBase.py:docstring of abaqus.Mdb.MdbBase.MdbBase.saveAs:12
msgid "cannot save file;     If the command fails to save the Mdb object to disk for reasons not mentioned above"
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:1
msgid "This method combines the results from existing ODB files for each optimization cycle and writes a merged ODB file."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:5
msgid "A String specifying the path to the folder in which optimization results are present."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:8
msgid "A Symbolic Constant to specify the optimization cycles from which the results should be merged. The possible values are INITIAL_AND_LAST, NONE, ALL, LAST, EVERY_NCYCLES, SPECIFY. The default value is INITIAL_AND_LAST."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:12
msgid "An Int or a tuple of Ints specifying the optimization cycles from which the results should be merged. This argument is used only when EVERY_NCYCLES or SPECIFY is selected for optIter. The default value is ALL."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:16
msgid "A tuple of strings specifying the list of models for which the merging of results is performed. The default value is ALL."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:19
msgid "A tuple of strings specifying the list of steps from the selected models to be included in the odb merge. The default value is ALL."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:22
msgid "A tuple of strings specifying the list of analysisFieldVariables to be included in the odb merge. The default value is ALL."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:25
msgid "A Symbolic Constant to specify the target odb to which the results will be merged. The possible values are ORIGINAL_MODEL, FIRST or LAST. The default value is FIRST."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.CombineOptResults:29
msgid "A String to specify the path of target odb if includeResultsFrom is set to ORIGINAL_MODEL."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.openMdb:9
msgid "Check `MdbCommands.openMdb on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionmdbcommandspyc.htm?contextscope=all#simaker-functionmdbcommandsopenmdbpyc>`__."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:1
msgid "This method upgrades an existing Mdb object to the current release and writes the upgraded version of the Mdb object to a file. In addition, Abaqus/CAE writes information about the status of the upgrade to the log file ( upgradedMdbPath.log )."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:7
msgid "A String specifying the path to the file containing the model database to be upgraded."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:11
msgid "A String specifying the path to the file that will contain the upgraded model database."
msgstr ""

#: ../../../../src/abaqus/Mdb/MdbCommands.py:docstring of abaqus.Mdb.MdbCommands.upgradeMdb:15
msgid "Cannot convert file"
msgstr ""
