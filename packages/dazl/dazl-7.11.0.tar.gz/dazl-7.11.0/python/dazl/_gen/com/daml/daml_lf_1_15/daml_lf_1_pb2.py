# Copyright (c) 2017-2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: com/daml/daml_lf_1_15/daml_lf_1.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%com/daml/daml_lf_1_15/daml_lf_1.proto\x12\tdaml_lf_1\"\x06\n\x04Unit\"\x9b\x01\n\nPackageRef\x12%\n\x04self\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x04self\x12&\n\x0epackage_id_str\x18\x02 \x01(\tH\x00R\x0cpackageIdStr\x12\x37\n\x17package_id_interned_str\x18\x03 \x01(\x05H\x00R\x14packageIdInternedStrB\x05\n\x03Sum\"(\n\nDottedName\x12\x1a\n\x08segments\x18\x01 \x03(\tR\x08segments\"\xd6\x01\n\tModuleRef\x12\x36\n\x0bpackage_ref\x18\x01 \x01(\x0b\x32\x15.daml_lf_1.PackageRefR\npackageRef\x12\x43\n\x11module_name_dname\x18\x02 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\x0fmoduleNameDname\x12=\n\x1amodule_name_interned_dname\x18\x03 \x01(\x05H\x00R\x17moduleNameInternedDnameB\r\n\x0bmodule_name\"\xad\x01\n\x0bTypeConName\x12,\n\x06module\x18\x01 \x01(\x0b\x32\x14.daml_lf_1.ModuleRefR\x06module\x12\x36\n\nname_dname\x18\x02 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\tnameDname\x12\x30\n\x13name_interned_dname\x18\x03 \x01(\x05H\x00R\x11nameInternedDnameB\x06\n\x04name\"\xad\x01\n\x0bTypeSynName\x12,\n\x06module\x18\x01 \x01(\x0b\x32\x14.daml_lf_1.ModuleRefR\x06module\x12\x36\n\nname_dname\x18\x02 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\tnameDname\x12\x30\n\x13name_interned_dname\x18\x03 \x01(\x05H\x00R\x11nameInternedDnameB\x06\n\x04name\"\x86\x01\n\x07ValName\x12,\n\x06module\x18\x01 \x01(\x0b\x32\x14.daml_lf_1.ModuleRefR\x06module\x12\x1d\n\nname_dname\x18\x02 \x03(\tR\tnameDname\x12.\n\x13name_interned_dname\x18\x03 \x01(\x05R\x11nameInternedDname\"\x8c\x01\n\rFieldWithType\x12\x1d\n\tfield_str\x18\x01 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x03 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12#\n\x04type\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04typeB\x07\n\x05\x66ield\"\x80\x01\n\x0bVarWithType\x12\x19\n\x07var_str\x18\x01 \x01(\tH\x00R\x06varStr\x12*\n\x10var_interned_str\x18\x03 \x01(\x05H\x00R\x0evarInternedStr\x12#\n\x04type\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04typeB\x05\n\x03var\"\x84\x01\n\x0fTypeVarWithKind\x12\x19\n\x07var_str\x18\x01 \x01(\tH\x00R\x06varStr\x12*\n\x10var_interned_str\x18\x03 \x01(\x05H\x00R\x0evarInternedStr\x12#\n\x04kind\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.KindR\x04kindB\x05\n\x03var\"\x8c\x01\n\rFieldWithExpr\x12\x1d\n\tfield_str\x18\x01 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x03 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xprB\x07\n\x05\x66ield\"`\n\x07\x42inding\x12.\n\x06\x62inder\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.VarWithTypeR\x06\x62inder\x12%\n\x05\x62ound\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x05\x62ound\"\xe3\x01\n\x04Kind\x12%\n\x04star\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x04star\x12-\n\x05\x61rrow\x18\x02 \x01(\x0b\x32\x15.daml_lf_1.Kind.ArrowH\x00R\x05\x61rrow\x12#\n\x03nat\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x03nat\x1aY\n\x05\x41rrow\x12\'\n\x06params\x18\x01 \x03(\x0b\x32\x0f.daml_lf_1.KindR\x06params\x12\'\n\x06result\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.KindR\x06resultB\x05\n\x03Sum\"\x87\x07\n\x04Type\x12\'\n\x03var\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.VarH\x00R\x03var\x12\'\n\x03\x63on\x18\x02 \x01(\x0b\x32\x13.daml_lf_1.Type.ConH\x00R\x03\x63on\x12*\n\x04prim\x18\x03 \x01(\x0b\x32\x14.daml_lf_1.Type.PrimH\x00R\x04prim\x12\x30\n\x06\x66orall\x18\x05 \x01(\x0b\x32\x16.daml_lf_1.Type.ForallH\x00R\x06\x66orall\x12\x30\n\x06struct\x18\x07 \x01(\x0b\x32\x16.daml_lf_1.Type.StructH\x00R\x06struct\x12\x12\n\x03nat\x18\x0b \x01(\x12H\x00R\x03nat\x12\'\n\x03syn\x18\x0c \x01(\x0b\x32\x13.daml_lf_1.Type.SynH\x00R\x03syn\x12\x1c\n\x08interned\x18\r \x01(\x05H\x00R\x08interned\x1ax\n\x03Var\x12\x19\n\x07var_str\x18\x01 \x01(\tH\x00R\x06varStr\x12*\n\x10var_interned_str\x18\x03 \x01(\x05H\x00R\x0evarInternedStr\x12#\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\x04\x61rgsB\x05\n\x03var\x1aX\n\x03\x43on\x12,\n\x05tycon\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x05tycon\x12#\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\x04\x61rgs\x1aX\n\x03Syn\x12,\n\x05tysyn\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeSynNameR\x05tysyn\x12#\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\x04\x61rgs\x1aT\n\x04Prim\x12\'\n\x04prim\x18\x01 \x01(\x0e\x32\x13.daml_lf_1.PrimTypeR\x04prim\x12#\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\x04\x61rgs\x1a]\n\x06\x46orall\x12.\n\x04vars\x18\x01 \x03(\x0b\x32\x1a.daml_lf_1.TypeVarWithKindR\x04vars\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04\x62ody\x1a:\n\x06Struct\x12\x30\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x18.daml_lf_1.FieldWithTypeR\x06\x66ieldsB\x05\n\x03SumJ\x04\x08\x04\x10\x05J\x04\x08\x06\x10\x07J\x04\x08\x08\x10\tJ\x04\x08\t\x10\nJ\x04\x08\n\x10\x0b\"\x99\x04\n\x07PrimLit\x12\x16\n\x05int64\x18\x01 \x01(\x12H\x00R\x05int64\x12!\n\x0b\x64\x65\x63imal_str\x18\x02 \x01(\tH\x00R\ndecimalStr\x12\x32\n\x14numeric_interned_str\x18\n \x01(\x05H\x00R\x12numericInternedStr\x12\x1b\n\x08text_str\x18\x04 \x01(\tH\x00R\x07textStr\x12,\n\x11text_interned_str\x18\x0b \x01(\x05H\x00R\x0ftextInternedStr\x12\x1e\n\ttimestamp\x18\x05 \x01(\x10H\x00R\ttimestamp\x12\x1d\n\tparty_str\x18\x07 \x01(\tH\x00R\x08partyStr\x12.\n\x12party_interned_str\x18\x0c \x01(\x05H\x00R\x10partyInternedStr\x12\x14\n\x04\x64\x61te\x18\x08 \x01(\x05H\x00R\x04\x64\x61te\x12\x46\n\rrounding_mode\x18\r \x01(\x0e\x32\x1f.daml_lf_1.PrimLit.RoundingModeH\x00R\x0croundingMode\"t\n\x0cRoundingMode\x12\x06\n\x02UP\x10\x00\x12\x08\n\x04\x44OWN\x10\x01\x12\x0b\n\x07\x43\x45ILING\x10\x02\x12\t\n\x05\x46LOOR\x10\x03\x12\x0b\n\x07HALF_UP\x10\x04\x12\r\n\tHALF_DOWN\x10\x05\x12\r\n\tHALF_EVEN\x10\x06\x12\x0f\n\x0bUNNECESSARY\x10\x07\x42\x05\n\x03SumJ\x04\x08\x03\x10\x04J\x04\x08\x06\x10\x07\"\xe2\x01\n\x08Location\x12,\n\x06module\x18\x01 \x01(\x0b\x32\x14.daml_lf_1.ModuleRefR\x06module\x12/\n\x05range\x18\x02 \x01(\x0b\x32\x19.daml_lf_1.Location.RangeR\x05range\x1aw\n\x05Range\x12\x1d\n\nstart_line\x18\x01 \x01(\x05R\tstartLine\x12\x1b\n\tstart_col\x18\x02 \x01(\x05R\x08startCol\x12\x19\n\x08\x65nd_line\x18\x03 \x01(\x05R\x07\x65ndLine\x12\x17\n\x07\x65nd_col\x18\x04 \x01(\x05R\x06\x65ndCol\"\xf5\x38\n\x04\x45xpr\x12/\n\x08location\x18\x19 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x12\x19\n\x07var_str\x18\x01 \x01(\tH\x00R\x06varStr\x12*\n\x10var_interned_str\x18\x1d \x01(\x05H\x00R\x0evarInternedStr\x12&\n\x03val\x18\x02 \x01(\x0b\x32\x12.daml_lf_1.ValNameH\x00R\x03val\x12\x36\n\x07\x62uiltin\x18\x03 \x01(\x0e\x32\x1a.daml_lf_1.BuiltinFunctionH\x00R\x07\x62uiltin\x12/\n\x08prim_con\x18\x04 \x01(\x0e\x32\x12.daml_lf_1.PrimConH\x00R\x07primCon\x12/\n\x08prim_lit\x18\x05 \x01(\x0b\x32\x12.daml_lf_1.PrimLitH\x00R\x07primLit\x12\x31\n\x07rec_con\x18\x06 \x01(\x0b\x32\x16.daml_lf_1.Expr.RecConH\x00R\x06recCon\x12\x34\n\x08rec_proj\x18\x07 \x01(\x0b\x32\x17.daml_lf_1.Expr.RecProjH\x00R\x07recProj\x12\x31\n\x07rec_upd\x18\x16 \x01(\x0b\x32\x16.daml_lf_1.Expr.RecUpdH\x00R\x06recUpd\x12=\n\x0bvariant_con\x18\x08 \x01(\x0b\x32\x1a.daml_lf_1.Expr.VariantConH\x00R\nvariantCon\x12\x34\n\x08\x65num_con\x18\x1c \x01(\x0b\x32\x17.daml_lf_1.Expr.EnumConH\x00R\x07\x65numCon\x12:\n\nstruct_con\x18\t \x01(\x0b\x32\x19.daml_lf_1.Expr.StructConH\x00R\tstructCon\x12=\n\x0bstruct_proj\x18\n \x01(\x0b\x32\x1a.daml_lf_1.Expr.StructProjH\x00R\nstructProj\x12:\n\nstruct_upd\x18\x17 \x01(\x0b\x32\x19.daml_lf_1.Expr.StructUpdH\x00R\tstructUpd\x12\'\n\x03\x61pp\x18\x0b \x01(\x0b\x32\x13.daml_lf_1.Expr.AppH\x00R\x03\x61pp\x12.\n\x06ty_app\x18\x0c \x01(\x0b\x32\x15.daml_lf_1.Expr.TyAppH\x00R\x05tyApp\x12\'\n\x03\x61\x62s\x18\r \x01(\x0b\x32\x13.daml_lf_1.Expr.AbsH\x00R\x03\x61\x62s\x12.\n\x06ty_abs\x18\x0e \x01(\x0b\x32\x15.daml_lf_1.Expr.TyAbsH\x00R\x05tyAbs\x12%\n\x04\x63\x61se\x18\x0f \x01(\x0b\x32\x0f.daml_lf_1.CaseH\x00R\x04\x63\x61se\x12$\n\x03let\x18\x10 \x01(\x0b\x32\x10.daml_lf_1.BlockH\x00R\x03let\x12\'\n\x03nil\x18\x11 \x01(\x0b\x32\x13.daml_lf_1.Expr.NilH\x00R\x03nil\x12*\n\x04\x63ons\x18\x12 \x01(\x0b\x32\x14.daml_lf_1.Expr.ConsH\x00R\x04\x63ons\x12+\n\x06update\x18\x14 \x01(\x0b\x32\x11.daml_lf_1.UpdateH\x00R\x06update\x12\x31\n\x08scenario\x18\x15 \x01(\x0b\x32\x13.daml_lf_1.ScenarioH\x00R\x08scenario\x12\x43\n\roptional_none\x18\x1a \x01(\x0b\x32\x1c.daml_lf_1.Expr.OptionalNoneH\x00R\x0coptionalNone\x12\x43\n\roptional_some\x18\x1b \x01(\x0b\x32\x1c.daml_lf_1.Expr.OptionalSomeH\x00R\x0coptionalSome\x12.\n\x06to_any\x18\x1e \x01(\x0b\x32\x15.daml_lf_1.Expr.ToAnyH\x00R\x05toAny\x12\x34\n\x08\x66rom_any\x18\x1f \x01(\x0b\x32\x17.daml_lf_1.Expr.FromAnyH\x00R\x07\x66romAny\x12,\n\x08type_rep\x18  \x01(\x0b\x32\x0f.daml_lf_1.TypeH\x00R\x07typeRep\x12J\n\x10to_any_exception\x18! \x01(\x0b\x32\x1e.daml_lf_1.Expr.ToAnyExceptionH\x00R\x0etoAnyException\x12P\n\x12\x66rom_any_exception\x18\" \x01(\x0b\x32 .daml_lf_1.Expr.FromAnyExceptionH\x00R\x10\x66romAnyException\x12-\n\x05throw\x18# \x01(\x0b\x32\x15.daml_lf_1.Expr.ThrowH\x00R\x05throw\x12@\n\x0cto_interface\x18$ \x01(\x0b\x32\x1b.daml_lf_1.Expr.ToInterfaceH\x00R\x0btoInterface\x12\x46\n\x0e\x66rom_interface\x18% \x01(\x0b\x32\x1d.daml_lf_1.Expr.FromInterfaceH\x00R\rfromInterface\x12\x46\n\x0e\x63\x61ll_interface\x18& \x01(\x0b\x32\x1d.daml_lf_1.Expr.CallInterfaceH\x00R\rcallInterface\x12U\n\x13signatory_interface\x18\' \x01(\x0b\x32\".daml_lf_1.Expr.SignatoryInterfaceH\x00R\x12signatoryInterface\x12R\n\x12observer_interface\x18( \x01(\x0b\x32!.daml_lf_1.Expr.ObserverInterfaceH\x00R\x11observerInterface\x12\x46\n\x0eview_interface\x18) \x01(\x0b\x32\x1d.daml_lf_1.Expr.ViewInterfaceH\x00R\rviewInterface\x12Y\n\x15unsafe_from_interface\x18* \x01(\x0b\x32#.daml_lf_1.Expr.UnsafeFromInterfaceH\x00R\x13unsafeFromInterface\x12i\n\x1binterface_template_type_rep\x18+ \x01(\x0b\x32(.daml_lf_1.Expr.InterfaceTemplateTypeRepH\x00R\x18interfaceTemplateTypeRep\x12Y\n\x15to_required_interface\x18, \x01(\x0b\x32#.daml_lf_1.Expr.ToRequiredInterfaceH\x00R\x13toRequiredInterface\x12_\n\x17\x66rom_required_interface\x18- \x01(\x0b\x32%.daml_lf_1.Expr.FromRequiredInterfaceH\x00R\x15\x66romRequiredInterface\x12r\n\x1eunsafe_from_required_interface\x18. \x01(\x0b\x32+.daml_lf_1.Expr.UnsafeFromRequiredInterfaceH\x00R\x1bunsafeFromRequiredInterface\x12\x43\n\x0c\x65xperimental\x18\x8fN \x01(\x0b\x32\x1c.daml_lf_1.Expr.ExperimentalH\x00R\x0c\x65xperimental\x1a\x65\n\x06RecCon\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12\x30\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x18.daml_lf_1.FieldWithExprR\x06\x66ields\x1a\xb5\x01\n\x07RecProj\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12\x1d\n\tfield_str\x18\x02 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x04 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12\'\n\x06record\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06recordB\x07\n\x05\x66ield\x1a\xdd\x01\n\x06RecUpd\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12\x1d\n\tfield_str\x18\x02 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x05 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12\'\n\x06record\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06record\x12\'\n\x06update\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06updateB\x07\n\x05\x66ield\x1a\xdd\x01\n\nVariantCon\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12(\n\x0fvariant_con_str\x18\x02 \x01(\tH\x00R\rvariantConStr\x12\x39\n\x18variant_con_interned_str\x18\x04 \x01(\x05H\x00R\x15variantConInternedStr\x12\x30\n\x0bvariant_arg\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\nvariantArgB\r\n\x0bvariant_con\x1a\x9c\x01\n\x07\x45numCon\x12,\n\x05tycon\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x05tycon\x12\"\n\x0c\x65num_con_str\x18\x02 \x01(\tH\x00R\nenumConStr\x12\x33\n\x15\x65num_con_interned_str\x18\x03 \x01(\x05H\x00R\x12\x65numConInternedStrB\n\n\x08\x65num_con\x1a=\n\tStructCon\x12\x30\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x18.daml_lf_1.FieldWithExprR\x06\x66ields\x1a\x8d\x01\n\nStructProj\x12\x1d\n\tfield_str\x18\x01 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x03 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12\'\n\x06struct\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06structB\x07\n\x05\x66ield\x1a\xb5\x01\n\tStructUpd\x12\x1d\n\tfield_str\x18\x01 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x04 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12\'\n\x06struct\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06struct\x12\'\n\x06update\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06updateB\x07\n\x05\x66ield\x1aM\n\x03\x41pp\x12!\n\x03\x66un\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x66un\x12#\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x61rgs\x1aS\n\x05TyApp\x12#\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x12%\n\x05types\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\x05types\x1aX\n\x03\x41\x62s\x12,\n\x05param\x18\x01 \x03(\x0b\x32\x16.daml_lf_1.VarWithTypeR\x05param\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\x1a^\n\x05TyAbs\x12\x30\n\x05param\x18\x01 \x03(\x0b\x32\x1a.daml_lf_1.TypeVarWithKindR\x05param\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\x1a*\n\x03Nil\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x1aw\n\x04\x43ons\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12%\n\x05\x66ront\x18\x02 \x03(\x0b\x32\x0f.daml_lf_1.ExprR\x05\x66ront\x12#\n\x04tail\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04tail\x1a\x33\n\x0cOptionalNone\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x1aX\n\x0cOptionalSome\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\x1aQ\n\x05ToAny\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1aS\n\x07\x46romAny\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1aZ\n\x0eToAnyException\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\\\n\x10\x46romAnyException\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\xa9\x01\n\x05Throw\x12\x30\n\x0breturn_type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\nreturnType\x12\x36\n\x0e\x65xception_type\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\rexceptionType\x12\x36\n\x0e\x65xception_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\rexceptionExpr\x1a\xbf\x01\n\x0bToInterface\x12=\n\x0einterface_type\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\rinterfaceType\x12;\n\rtemplate_type\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x0ctemplateType\x12\x34\n\rtemplate_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0ctemplateExpr\x1a\xc3\x01\n\rFromInterface\x12=\n\x0einterface_type\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\rinterfaceType\x12;\n\rtemplate_type\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x0ctemplateType\x12\x36\n\x0einterface_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\rinterfaceExpr\x1a\xb8\x01\n\rCallInterface\x12=\n\x0einterface_type\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\rinterfaceType\x12\x30\n\x14method_interned_name\x18\x02 \x01(\x05R\x12methodInternedName\x12\x36\n\x0einterface_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\rinterfaceExpr\x1aj\n\rViewInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1ao\n\x12SignatoryInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1an\n\x11ObserverInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\x84\x02\n\x13UnsafeFromInterface\x12=\n\x0einterface_type\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\rinterfaceType\x12;\n\rtemplate_type\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x0ctemplateType\x12\x39\n\x10\x63ontract_id_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0e\x63ontractIdExpr\x12\x36\n\x0einterface_expr\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\rinterfaceExpr\x1a\xca\x01\n\x13ToRequiredInterface\x12\x45\n\x12required_interface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x11requiredInterface\x12G\n\x13requiring_interface\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x12requiringInterface\x12#\n\x04\x65xpr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\xcc\x01\n\x15\x46romRequiredInterface\x12\x45\n\x12required_interface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x11requiredInterface\x12G\n\x13requiring_interface\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x12requiringInterface\x12#\n\x04\x65xpr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\xa0\x02\n\x1bUnsafeFromRequiredInterface\x12\x45\n\x12required_interface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x11requiredInterface\x12G\n\x13requiring_interface\x18\x02 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x12requiringInterface\x12\x39\n\x10\x63ontract_id_expr\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0e\x63ontractIdExpr\x12\x36\n\x0einterface_expr\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\rinterfaceExpr\x1au\n\x18InterfaceTemplateTypeRep\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1aG\n\x0c\x45xperimental\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12#\n\x04type\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04typeB\x05\n\x03SumJ\x04\x08\x13\x10\x14J\x04\x08\x18\x10\x19\"\xb4\t\n\x07\x43\x61seAlt\x12+\n\x07\x64\x65\x66\x61ult\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x07\x64\x65\x66\x61ult\x12\x36\n\x07variant\x18\x02 \x01(\x0b\x32\x1a.daml_lf_1.CaseAlt.VariantH\x00R\x07variant\x12/\n\x08prim_con\x18\x03 \x01(\x0e\x32\x12.daml_lf_1.PrimConH\x00R\x07primCon\x12#\n\x03nil\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x03nil\x12-\n\x04\x63ons\x18\x05 \x01(\x0b\x32\x17.daml_lf_1.CaseAlt.ConsH\x00R\x04\x63ons\x12\x36\n\roptional_none\x18\x07 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x0coptionalNone\x12\x46\n\roptional_some\x18\x08 \x01(\x0b\x32\x1f.daml_lf_1.CaseAlt.OptionalSomeH\x00R\x0coptionalSome\x12-\n\x04\x65num\x18\t \x01(\x0b\x32\x17.daml_lf_1.CaseAlt.EnumH\x00R\x04\x65num\x12#\n\x04\x62ody\x18\x06 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\x1a\xf2\x01\n\x07Variant\x12(\n\x03\x63on\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x03\x63on\x12!\n\x0bvariant_str\x18\x02 \x01(\tH\x00R\nvariantStr\x12\x32\n\x14variant_interned_str\x18\x04 \x01(\x05H\x00R\x12variantInternedStr\x12\x1f\n\nbinder_str\x18\x03 \x01(\tH\x01R\tbinderStr\x12\x30\n\x13\x62inder_interned_str\x18\x05 \x01(\x05H\x01R\x11\x62inderInternedStrB\t\n\x07variantB\x08\n\x06\x62inder\x1a\xa6\x01\n\x04\x45num\x12(\n\x03\x63on\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x03\x63on\x12)\n\x0f\x63onstructor_str\x18\x02 \x01(\tH\x00R\x0e\x63onstructorStr\x12:\n\x18\x63onstructor_interned_str\x18\x03 \x01(\x05H\x00R\x16\x63onstructorInternedStrB\r\n\x0b\x63onstructor\x1a\xd0\x01\n\x04\x43ons\x12\"\n\x0cvar_head_str\x18\x01 \x01(\tH\x00R\nvarHeadStr\x12\x33\n\x15var_head_interned_str\x18\x03 \x01(\x05H\x00R\x12varHeadInternedStr\x12\"\n\x0cvar_tail_str\x18\x02 \x01(\tH\x01R\nvarTailStr\x12\x33\n\x15var_tail_interned_str\x18\x04 \x01(\x05H\x01R\x12varTailInternedStrB\n\n\x08var_headB\n\n\x08var_tail\x1as\n\x0cOptionalSome\x12\"\n\x0cvar_body_str\x18\x01 \x01(\tH\x00R\nvarBodyStr\x12\x33\n\x15var_body_interned_str\x18\x02 \x01(\x05H\x00R\x12varBodyInternedStrB\n\n\x08var_bodyB\x05\n\x03Sum\"U\n\x04\x43\x61se\x12%\n\x05scrut\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x05scrut\x12&\n\x04\x61lts\x18\x02 \x03(\x0b\x32\x12.daml_lf_1.CaseAltR\x04\x61lts\"\\\n\x05\x42lock\x12.\n\x08\x62indings\x18\x01 \x03(\x0b\x32\x12.daml_lf_1.BindingR\x08\x62indings\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\"P\n\x04Pure\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\"\xa5\x12\n\x06Update\x12%\n\x04pure\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.PureH\x00R\x04pure\x12(\n\x05\x62lock\x18\x02 \x01(\x0b\x32\x10.daml_lf_1.BlockH\x00R\x05\x62lock\x12\x32\n\x06\x63reate\x18\x03 \x01(\x0b\x32\x18.daml_lf_1.Update.CreateH\x00R\x06\x63reate\x12\x38\n\x08\x65xercise\x18\x04 \x01(\x0b\x32\x1a.daml_lf_1.Update.ExerciseH\x00R\x08\x65xercise\x12I\n\x0f\x65xercise_by_key\x18\n \x01(\x0b\x32\x1f.daml_lf_1.Update.ExerciseByKeyH\x00R\rexerciseByKey\x12/\n\x05\x66\x65tch\x18\x05 \x01(\x0b\x32\x17.daml_lf_1.Update.FetchH\x00R\x05\x66\x65tch\x12,\n\x08get_time\x18\x06 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x07getTime\x12\x45\n\rlookup_by_key\x18\x08 \x01(\x0b\x32\x1f.daml_lf_1.Update.RetrieveByKeyH\x00R\x0blookupByKey\x12\x43\n\x0c\x66\x65tch_by_key\x18\t \x01(\x0b\x32\x1f.daml_lf_1.Update.RetrieveByKeyH\x00R\nfetchByKey\x12<\n\nembed_expr\x18\x07 \x01(\x0b\x32\x1b.daml_lf_1.Update.EmbedExprH\x00R\tembedExpr\x12\x39\n\ttry_catch\x18\x0b \x01(\x0b\x32\x1a.daml_lf_1.Update.TryCatchH\x00R\x08tryCatch\x12N\n\x10\x63reate_interface\x18\x0c \x01(\x0b\x32!.daml_lf_1.Update.CreateInterfaceH\x00R\x0f\x63reateInterface\x12T\n\x12\x65xercise_interface\x18\r \x01(\x0b\x32#.daml_lf_1.Update.ExerciseInterfaceH\x00R\x11\x65xerciseInterface\x12K\n\x0f\x66\x65tch_interface\x18\x0e \x01(\x0b\x32 .daml_lf_1.Update.FetchInterfaceH\x00R\x0e\x66\x65tchInterface\x1a\x61\n\x06\x43reate\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1al\n\x0f\x43reateInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x1a\xe7\x01\n\x08\x45xercise\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12\x1f\n\nchoice_str\x18\x02 \x01(\tH\x00R\tchoiceStr\x12\x30\n\x13\x63hoice_interned_str\x18\x06 \x01(\x05H\x00R\x11\x63hoiceInternedStr\x12!\n\x03\x63id\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x63id\x12!\n\x03\x61rg\x18\x05 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x61rgB\x08\n\x06\x63hoiceJ\x04\x08\x04\x10\x05\x1a\xe6\x01\n\x11\x45xerciseInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12.\n\x13\x63hoice_interned_str\x18\x02 \x01(\x05R\x11\x63hoiceInternedStr\x12!\n\x03\x63id\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x63id\x12!\n\x03\x61rg\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x61rg\x12%\n\x05guard\x18\x05 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x05guard\x1a\xb9\x01\n\rExerciseByKey\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12.\n\x13\x63hoice_interned_str\x18\x02 \x01(\x05R\x11\x63hoiceInternedStr\x12!\n\x03key\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03key\x12!\n\x03\x61rg\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x61rg\x1a\x64\n\x05\x46\x65tch\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12!\n\x03\x63id\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x63idJ\x04\x08\x03\x10\x04\x1ai\n\x0e\x46\x65tchInterface\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12!\n\x03\x63id\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03\x63id\x1aU\n\tEmbedExpr\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62ody\x1a\x66\n\rRetrieveByKey\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12!\n\x03key\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x03key\x1a\xc2\x01\n\x08TryCatch\x12\x30\n\x0breturn_type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\nreturnType\x12*\n\x08try_expr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x07tryExpr\x12(\n\x10var_interned_str\x18\x03 \x01(\x05R\x0evarInternedStr\x12.\n\ncatch_expr\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\tcatchExprB\x05\n\x03Sum\"\xf5\x04\n\x08Scenario\x12%\n\x04pure\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.PureH\x00R\x04pure\x12(\n\x05\x62lock\x18\x02 \x01(\x0b\x32\x10.daml_lf_1.BlockH\x00R\x05\x62lock\x12\x34\n\x06\x63ommit\x18\x03 \x01(\x0b\x32\x1a.daml_lf_1.Scenario.CommitH\x00R\x06\x63ommit\x12<\n\nmustFailAt\x18\x04 \x01(\x0b\x32\x1a.daml_lf_1.Scenario.CommitH\x00R\nmustFailAt\x12%\n\x04pass\x18\x05 \x01(\x0b\x32\x0f.daml_lf_1.ExprH\x00R\x04pass\x12,\n\x08get_time\x18\x06 \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x00R\x07getTime\x12.\n\tget_party\x18\x07 \x01(\x0b\x32\x0f.daml_lf_1.ExprH\x00R\x08getParty\x12>\n\nembed_expr\x18\x08 \x01(\x0b\x32\x1d.daml_lf_1.Scenario.EmbedExprH\x00R\tembedExpr\x1a\x80\x01\n\x06\x43ommit\x12%\n\x05party\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x05party\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x12*\n\x08ret_type\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x07retType\x1aU\n\tEmbedExpr\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12#\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x62odyB\x05\n\x03Sum\"\x94\x04\n\x0eTemplateChoice\x12\x1b\n\x08name_str\x18\x01 \x01(\tH\x00R\x07nameStr\x12,\n\x11name_interned_str\x18\t \x01(\x05H\x00R\x0fnameInternedStr\x12\x1c\n\tconsuming\x18\x02 \x01(\x08R\tconsuming\x12\x31\n\x0b\x63ontrollers\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0b\x63ontrollers\x12-\n\tobservers\x18\x0b \x01(\x0b\x32\x0f.daml_lf_1.ExprR\tobservers\x12\x35\n\narg_binder\x18\x04 \x01(\x0b\x32\x16.daml_lf_1.VarWithTypeR\targBinder\x12*\n\x08ret_type\x18\x05 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x07retType\x12\'\n\x06update\x18\x06 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x06update\x12(\n\x0fself_binder_str\x18\x07 \x01(\tH\x01R\rselfBinderStr\x12\x39\n\x18self_binder_interned_str\x18\n \x01(\x05H\x01R\x15selfBinderInternedStr\x12/\n\x08location\x18\x08 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08locationB\x06\n\x04nameB\r\n\x0bself_binder\"\xe8\x04\n\x07KeyExpr\x12\x42\n\x0bprojections\x18\x01 \x01(\x0b\x32\x1e.daml_lf_1.KeyExpr.ProjectionsH\x00R\x0bprojections\x12\x33\n\x06record\x18\x02 \x01(\x0b\x32\x19.daml_lf_1.KeyExpr.RecordH\x00R\x06record\x1a\x8f\x01\n\nProjection\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12\x1d\n\tfield_str\x18\x02 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x03 \x01(\x05H\x00R\x10\x66ieldInternedStrB\x07\n\x05\x66ield\x1aN\n\x0bProjections\x12?\n\x0bprojections\x18\x02 \x03(\x0b\x32\x1d.daml_lf_1.KeyExpr.ProjectionR\x0bprojections\x1a\x8d\x01\n\x0bRecordField\x12\x1d\n\tfield_str\x18\x01 \x01(\tH\x00R\x08\x66ieldStr\x12.\n\x12\x66ield_interned_str\x18\x03 \x01(\x05H\x00R\x10\x66ieldInternedStr\x12&\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x12.daml_lf_1.KeyExprR\x04\x65xprB\x07\n\x05\x66ield\x1ak\n\x06Record\x12)\n\x05tycon\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.Type.ConR\x05tycon\x12\x36\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x1e.daml_lf_1.KeyExpr.RecordFieldR\x06\x66ieldsB\x05\n\x03Sum\"\x84\x02\n\x15InterfaceInstanceBody\x12R\n\x07methods\x18\x01 \x03(\x0b\x32\x38.daml_lf_1.InterfaceInstanceBody.InterfaceInstanceMethodR\x07methods\x12#\n\x04view\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04view\x1ar\n\x17InterfaceInstanceMethod\x12\x30\n\x14method_interned_name\x18\x01 \x01(\x05R\x12methodInternedName\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x05value\"\xbd\x07\n\x0b\x44\x65\x66Template\x12\x38\n\x0btycon_dname\x18\x01 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\ntyconDname\x12\x32\n\x14tycon_interned_dname\x18\x0c \x01(\x05H\x00R\x12tyconInternedDname\x12\x1d\n\tparam_str\x18\x02 \x01(\tH\x01R\x08paramStr\x12.\n\x12param_interned_str\x18\x0b \x01(\x05H\x01R\x10paramInternedStr\x12)\n\x07precond\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x07precond\x12\x31\n\x0bsignatories\x18\x05 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0bsignatories\x12-\n\tagreement\x18\x06 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\tagreement\x12\x33\n\x07\x63hoices\x18\x07 \x03(\x0b\x32\x19.daml_lf_1.TemplateChoiceR\x07\x63hoices\x12-\n\tobservers\x18\x08 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\tobservers\x12/\n\x08location\x18\t \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x12/\n\x03key\x18\n \x01(\x0b\x32\x1d.daml_lf_1.DefTemplate.DefKeyR\x03key\x12\x41\n\nimplements\x18\r \x03(\x0b\x32!.daml_lf_1.DefTemplate.ImplementsR\nimplements\x1a\xc8\x01\n\x06\x44\x65\x66Key\x12#\n\x04type\x18\x01 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12&\n\x03key\x18\x02 \x01(\x0b\x32\x12.daml_lf_1.KeyExprH\x00R\x03key\x12\x32\n\x0b\x63omplex_key\x18\x04 \x01(\x0b\x32\x0f.daml_lf_1.ExprH\x00R\ncomplexKey\x12\x31\n\x0bmaintainers\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x0bmaintainersB\n\n\x08key_expr\x1ax\n\nImplements\x12\x34\n\tinterface\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\tinterface\x12\x34\n\x04\x62ody\x18\x02 \x01(\x0b\x32 .daml_lf_1.InterfaceInstanceBodyR\x04\x62odyB\x07\n\x05tyconB\x07\n\x05paramJ\x04\x08\x03\x10\x04\"\x99\x01\n\x0fInterfaceMethod\x12/\n\x08location\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x12\x30\n\x14method_interned_name\x18\x02 \x01(\x05R\x12methodInternedName\x12#\n\x04type\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\"\xa7\x04\n\x0c\x44\x65\x66Interface\x12/\n\x08location\x18\x01 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x12\x30\n\x14tycon_interned_dname\x18\x02 \x01(\x05R\x12tyconInternedDname\x12\x34\n\x07methods\x18\x03 \x03(\x0b\x32\x1a.daml_lf_1.InterfaceMethodR\x07methods\x12,\n\x12param_interned_str\x18\x04 \x01(\x05R\x10paramInternedStr\x12\x33\n\x07\x63hoices\x18\x05 \x03(\x0b\x32\x19.daml_lf_1.TemplateChoiceR\x07\x63hoices\x12H\n\x0c\x63oImplements\x18\x06 \x03(\x0b\x32$.daml_lf_1.DefInterface.CoImplementsR\x0c\x63oImplements\x12#\n\x04view\x18\x08 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04view\x12\x32\n\x08requires\x18\t \x03(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08requires\x1ax\n\x0c\x43oImplements\x12\x32\n\x08template\x18\x01 \x01(\x0b\x32\x16.daml_lf_1.TypeConNameR\x08template\x12\x34\n\x04\x62ody\x18\x02 \x01(\x0b\x32 .daml_lf_1.InterfaceInstanceBodyR\x04\x62ody\"\x9a\x01\n\x0c\x44\x65\x66\x45xception\x12.\n\x13name_interned_dname\x18\x01 \x01(\x05R\x11nameInternedDname\x12/\n\x08location\x18\x02 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x12)\n\x07message\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x07message\"\xaf\x05\n\x0b\x44\x65\x66\x44\x61taType\x12\x36\n\nname_dname\x18\x01 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\tnameDname\x12\x30\n\x13name_interned_dname\x18\x08 \x01(\x05H\x00R\x11nameInternedDname\x12\x32\n\x06params\x18\x02 \x03(\x0b\x32\x1a.daml_lf_1.TypeVarWithKindR\x06params\x12\x37\n\x06record\x18\x03 \x01(\x0b\x32\x1d.daml_lf_1.DefDataType.FieldsH\x01R\x06record\x12\x39\n\x07variant\x18\x04 \x01(\x0b\x32\x1d.daml_lf_1.DefDataType.FieldsH\x01R\x07variant\x12=\n\x04\x65num\x18\x07 \x01(\x0b\x32\'.daml_lf_1.DefDataType.EnumConstructorsH\x01R\x04\x65num\x12/\n\tinterface\x18\t \x01(\x0b\x32\x0f.daml_lf_1.UnitH\x01R\tinterface\x12\"\n\x0cserializable\x18\x05 \x01(\x08R\x0cserializable\x12/\n\x08location\x18\x06 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x1a:\n\x06\x46ields\x12\x30\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x18.daml_lf_1.FieldWithTypeR\x06\x66ields\x1ay\n\x10\x45numConstructors\x12)\n\x10\x63onstructors_str\x18\x01 \x03(\tR\x0f\x63onstructorsStr\x12:\n\x19\x63onstructors_interned_str\x18\x02 \x03(\x05R\x17\x63onstructorsInternedStrB\x06\n\x04nameB\n\n\x08\x44\x61taCons\"\x88\x02\n\nDefTypeSyn\x12\x36\n\nname_dname\x18\x01 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\tnameDname\x12\x30\n\x13name_interned_dname\x18\x08 \x01(\x05H\x00R\x11nameInternedDname\x12\x32\n\x06params\x18\x02 \x03(\x0b\x32\x1a.daml_lf_1.TypeVarWithKindR\x06params\x12#\n\x04type\x18\x03 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\x12/\n\x08location\x18\x04 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08locationB\x06\n\x04name\"\xf2\x02\n\x08\x44\x65\x66Value\x12\x46\n\x0ename_with_type\x18\x01 \x01(\x0b\x32 .daml_lf_1.DefValue.NameWithTypeR\x0cnameWithType\x12#\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.ExprR\x04\x65xpr\x12*\n\x11no_party_literals\x18\x03 \x01(\x08R\x0fnoPartyLiterals\x12\x17\n\x07is_test\x18\x04 \x01(\x08R\x06isTest\x12/\n\x08location\x18\x05 \x01(\x0b\x32\x13.daml_lf_1.LocationR\x08location\x1a\x82\x01\n\x0cNameWithType\x12\x1d\n\nname_dname\x18\x01 \x03(\tR\tnameDname\x12.\n\x13name_interned_dname\x18\x03 \x01(\x05R\x11nameInternedDname\x12#\n\x04type\x18\x02 \x01(\x0b\x32\x0f.daml_lf_1.TypeR\x04type\"\xfa\x01\n\x0c\x46\x65\x61tureFlags\x12\x30\n\x13\x66orbidPartyLiterals\x18\x01 \x01(\x08R\x13\x66orbidPartyLiterals\x12X\n\'dontDivulgeContractIdsInCreateArguments\x18\x02 \x01(\x08R\'dontDivulgeContractIdsInCreateArguments\x12^\n*dontDiscloseNonConsumingChoicesToObservers\x18\x03 \x01(\x08R*dontDiscloseNonConsumingChoicesToObservers\"\xf4\x03\n\x06Module\x12\x36\n\nname_dname\x18\x01 \x01(\x0b\x32\x15.daml_lf_1.DottedNameH\x00R\tnameDname\x12\x30\n\x13name_interned_dname\x18\x08 \x01(\x05H\x00R\x11nameInternedDname\x12-\n\x05\x66lags\x18\x04 \x01(\x0b\x32\x17.daml_lf_1.FeatureFlagsR\x05\x66lags\x12\x31\n\x08synonyms\x18\t \x03(\x0b\x32\x15.daml_lf_1.DefTypeSynR\x08synonyms\x12\x35\n\ndata_types\x18\x05 \x03(\x0b\x32\x16.daml_lf_1.DefDataTypeR\tdataTypes\x12+\n\x06values\x18\x06 \x03(\x0b\x32\x13.daml_lf_1.DefValueR\x06values\x12\x34\n\ttemplates\x18\x07 \x03(\x0b\x32\x16.daml_lf_1.DefTemplateR\ttemplates\x12\x37\n\nexceptions\x18\n \x03(\x0b\x32\x17.daml_lf_1.DefExceptionR\nexceptions\x12\x37\n\ninterfaces\x18\x0b \x03(\x0b\x32\x17.daml_lf_1.DefInterfaceR\ninterfacesB\x06\n\x04nameJ\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04\"H\n\x12InternedDottedName\x12\x32\n\x15segments_interned_str\x18\x01 \x03(\x05R\x13segmentsInternedStr\"o\n\x0fPackageMetadata\x12*\n\x11name_interned_str\x18\x01 \x01(\x05R\x0fnameInternedStr\x12\x30\n\x14version_interned_str\x18\x02 \x01(\x05R\x12versionInternedStr\"\xa4\x02\n\x07Package\x12+\n\x07modules\x18\x01 \x03(\x0b\x32\x11.daml_lf_1.ModuleR\x07modules\x12)\n\x10interned_strings\x18\x02 \x03(\tR\x0finternedStrings\x12Q\n\x15interned_dotted_names\x18\x03 \x03(\x0b\x32\x1d.daml_lf_1.InternedDottedNameR\x13internedDottedNames\x12\x36\n\x08metadata\x18\x04 \x01(\x0b\x32\x1a.daml_lf_1.PackageMetadataR\x08metadata\x12\x36\n\x0einterned_types\x18\x05 \x03(\x0b\x32\x0f.daml_lf_1.TypeR\rinternedTypes*\xa5\x02\n\x08PrimType\x12\x08\n\x04UNIT\x10\x00\x12\x08\n\x04\x42OOL\x10\x01\x12\t\n\x05INT64\x10\x02\x12\x0b\n\x07\x44\x45\x43IMAL\x10\x03\x12\x08\n\x04TEXT\x10\x05\x12\r\n\tTIMESTAMP\x10\x06\x12\t\n\x05PARTY\x10\x08\x12\x08\n\x04LIST\x10\t\x12\n\n\x06UPDATE\x10\n\x12\x0c\n\x08SCENARIO\x10\x0b\x12\x08\n\x04\x44\x41TE\x10\x0c\x12\x0f\n\x0b\x43ONTRACT_ID\x10\r\x12\x0c\n\x08OPTIONAL\x10\x0e\x12\t\n\x05\x41RROW\x10\x0f\x12\x0b\n\x07TEXTMAP\x10\x10\x12\x0b\n\x07NUMERIC\x10\x11\x12\x07\n\x03\x41NY\x10\x12\x12\x0c\n\x08TYPE_REP\x10\x13\x12\n\n\x06GENMAP\x10\x14\x12\x0e\n\nBIGNUMERIC\x10\x15\x12\x11\n\rROUNDING_MODE\x10\x16\x12\x11\n\rANY_EXCEPTION\x10\x17*4\n\x07PrimCon\x12\x0c\n\x08\x43ON_UNIT\x10\x00\x12\r\n\tCON_FALSE\x10\x01\x12\x0c\n\x08\x43ON_TRUE\x10\x02*\xcb\x11\n\x0f\x42uiltinFunction\x12\x0f\n\x0b\x41\x44\x44_DECIMAL\x10\x00\x12\x0f\n\x0bSUB_DECIMAL\x10\x01\x12\x0f\n\x0bMUL_DECIMAL\x10\x02\x12\x0f\n\x0b\x44IV_DECIMAL\x10\x03\x12\x11\n\rROUND_DECIMAL\x10\x06\x12\x0f\n\x0b\x41\x44\x44_NUMERIC\x10k\x12\x0f\n\x0bSUB_NUMERIC\x10l\x12\x0f\n\x0bMUL_NUMERIC\x10m\x12\x0f\n\x0b\x44IV_NUMERIC\x10n\x12\x11\n\rROUND_NUMERIC\x10o\x12\x10\n\x0c\x43\x41ST_NUMERIC\x10y\x12\x11\n\rSHIFT_NUMERIC\x10z\x12\r\n\tADD_INT64\x10\x07\x12\r\n\tSUB_INT64\x10\x08\x12\r\n\tMUL_INT64\x10\t\x12\r\n\tDIV_INT64\x10\n\x12\r\n\tMOD_INT64\x10\x0b\x12\r\n\tEXP_INT64\x10\x0c\x12\t\n\x05\x46OLDL\x10\x14\x12\t\n\x05\x46OLDR\x10\x15\x12\x11\n\rTEXTMAP_EMPTY\x10`\x12\x12\n\x0eTEXTMAP_INSERT\x10\x61\x12\x12\n\x0eTEXTMAP_LOOKUP\x10\x62\x12\x12\n\x0eTEXTMAP_DELETE\x10\x63\x12\x13\n\x0fTEXTMAP_TO_LIST\x10\x64\x12\x10\n\x0cTEXTMAP_SIZE\x10\x65\x12\x10\n\x0cGENMAP_EMPTY\x10|\x12\x11\n\rGENMAP_INSERT\x10}\x12\x11\n\rGENMAP_LOOKUP\x10~\x12\x11\n\rGENMAP_DELETE\x10\x7f\x12\x10\n\x0bGENMAP_KEYS\x10\x80\x01\x12\x12\n\rGENMAP_VALUES\x10\x81\x01\x12\x10\n\x0bGENMAP_SIZE\x10\x82\x01\x12\x10\n\x0c\x45XPLODE_TEXT\x10\x17\x12\x0f\n\x0b\x41PPEND_TEXT\x10\x18\x12\t\n\x05\x45RROR\x10\x19\x12\x1a\n\x15\x41NY_EXCEPTION_MESSAGE\x10\x93\x01\x12\r\n\tLEQ_INT64\x10!\x12\x0f\n\x0bLEQ_DECIMAL\x10\"\x12\x0f\n\x0bLEQ_NUMERIC\x10p\x12\x0c\n\x08LEQ_TEXT\x10$\x12\x11\n\rLEQ_TIMESTAMP\x10%\x12\x0c\n\x08LEQ_DATE\x10\x43\x12\r\n\tLEQ_PARTY\x10Y\x12\x0e\n\nLESS_INT64\x10\'\x12\x10\n\x0cLESS_DECIMAL\x10(\x12\x10\n\x0cLESS_NUMERIC\x10q\x12\r\n\tLESS_TEXT\x10*\x12\x12\n\x0eLESS_TIMESTAMP\x10+\x12\r\n\tLESS_DATE\x10\x44\x12\x0e\n\nLESS_PARTY\x10Z\x12\r\n\tGEQ_INT64\x10-\x12\x0f\n\x0bGEQ_DECIMAL\x10.\x12\x0f\n\x0bGEQ_NUMERIC\x10r\x12\x0c\n\x08GEQ_TEXT\x10\x30\x12\x11\n\rGEQ_TIMESTAMP\x10\x31\x12\x0c\n\x08GEQ_DATE\x10\x45\x12\r\n\tGEQ_PARTY\x10[\x12\x11\n\rGREATER_INT64\x10\x33\x12\x13\n\x0fGREATER_DECIMAL\x10\x34\x12\x13\n\x0fGREATER_NUMERIC\x10s\x12\x10\n\x0cGREATER_TEXT\x10\x36\x12\x15\n\x11GREATER_TIMESTAMP\x10\x37\x12\x10\n\x0cGREATER_DATE\x10\x46\x12\x11\n\rGREATER_PARTY\x10\\\x12\x11\n\rINT64_TO_TEXT\x10\x39\x12\x13\n\x0f\x44\x45\x43IMAL_TO_TEXT\x10:\x12\x13\n\x0fNUMERIC_TO_TEXT\x10t\x12\x10\n\x0cTEXT_TO_TEXT\x10<\x12\x15\n\x11TIMESTAMP_TO_TEXT\x10=\x12\x10\n\x0c\x44\x41TE_TO_TEXT\x10G\x12\x18\n\x14PARTY_TO_QUOTED_TEXT\x10?\x12\x11\n\rPARTY_TO_TEXT\x10^\x12\x11\n\rTEXT_TO_PARTY\x10_\x12\x11\n\rTEXT_TO_INT64\x10g\x12\x13\n\x0fTEXT_TO_DECIMAL\x10h\x12\x13\n\x0fTEXT_TO_NUMERIC\x10u\x12\x18\n\x13\x43ONTRACT_ID_TO_TEXT\x10\x88\x01\x12\x0f\n\x0bSHA256_TEXT\x10]\x12\x15\n\x11\x44\x41TE_TO_UNIX_DAYS\x10H\x12\x15\n\x11UNIX_DAYS_TO_DATE\x10I\x12\"\n\x1eTIMESTAMP_TO_UNIX_MICROSECONDS\x10J\x12\"\n\x1eUNIX_MICROSECONDS_TO_TIMESTAMP\x10K\x12\x14\n\x10INT64_TO_DECIMAL\x10L\x12\x14\n\x10\x44\x45\x43IMAL_TO_INT64\x10M\x12\x14\n\x10INT64_TO_NUMERIC\x10v\x12\x14\n\x10NUMERIC_TO_INT64\x10w\x12\x10\n\x0cIMPLODE_TEXT\x10N\x12\x0f\n\x0b\x45QUAL_INT64\x10O\x12\x11\n\rEQUAL_DECIMAL\x10P\x12\x11\n\rEQUAL_NUMERIC\x10x\x12\x0e\n\nEQUAL_TEXT\x10Q\x12\x13\n\x0f\x45QUAL_TIMESTAMP\x10R\x12\x0e\n\nEQUAL_DATE\x10S\x12\x0f\n\x0b\x45QUAL_PARTY\x10T\x12\x0e\n\nEQUAL_BOOL\x10U\x12\x15\n\x11\x45QUAL_CONTRACT_ID\x10V\x12\x0e\n\nEQUAL_LIST\x10W\x12\x12\n\x0e\x45QUAL_TYPE_REP\x10{\x12\n\n\x05\x45QUAL\x10\x83\x01\x12\x0c\n\x07LESS_EQ\x10\x84\x01\x12\t\n\x04LESS\x10\x85\x01\x12\x0f\n\nGREATER_EQ\x10\x86\x01\x12\x0c\n\x07GREATER\x10\x87\x01\x12\t\n\x05TRACE\x10X\x12\x16\n\x12\x43OERCE_CONTRACT_ID\x10\x66\x12\x17\n\x13\x43ODE_POINTS_TO_TEXT\x10i\x12\x17\n\x13TEXT_TO_CODE_POINTS\x10j\x12\x15\n\x10SCALE_BIGNUMERIC\x10\x89\x01\x12\x19\n\x14PRECISION_BIGNUMERIC\x10\x8a\x01\x12\x13\n\x0e\x41\x44\x44_BIGNUMERIC\x10\x8b\x01\x12\x13\n\x0eSUB_BIGNUMERIC\x10\x8c\x01\x12\x13\n\x0eMUL_BIGNUMERIC\x10\x8d\x01\x12\x13\n\x0e\x44IV_BIGNUMERIC\x10\x8e\x01\x12\x1b\n\x16SHIFT_RIGHT_BIGNUMERIC\x10\x8f\x01\x12\x1a\n\x15\x42IGNUMERIC_TO_NUMERIC\x10\x90\x01\x12\x1a\n\x15NUMERIC_TO_BIGNUMERIC\x10\x91\x01\x12\x17\n\x12\x42IGNUMERIC_TO_TEXT\x10\x92\x01\x42w\n\x13\x63om.daml.daml_lf_15ZBgithub.com/digital-asset/dazl-client/v7/go/api/com/daml/daml_lf_15\xaa\x02\x1b\x43om.Daml.Daml_Lf_15.DamlLf1b\x06proto3')

_PRIMTYPE = DESCRIPTOR.enum_types_by_name['PrimType']
PrimType = enum_type_wrapper.EnumTypeWrapper(_PRIMTYPE)
_PRIMCON = DESCRIPTOR.enum_types_by_name['PrimCon']
PrimCon = enum_type_wrapper.EnumTypeWrapper(_PRIMCON)
_BUILTINFUNCTION = DESCRIPTOR.enum_types_by_name['BuiltinFunction']
BuiltinFunction = enum_type_wrapper.EnumTypeWrapper(_BUILTINFUNCTION)
UNIT = 0
BOOL = 1
INT64 = 2
DECIMAL = 3
TEXT = 5
TIMESTAMP = 6
PARTY = 8
LIST = 9
UPDATE = 10
SCENARIO = 11
DATE = 12
CONTRACT_ID = 13
OPTIONAL = 14
ARROW = 15
TEXTMAP = 16
NUMERIC = 17
ANY = 18
TYPE_REP = 19
GENMAP = 20
BIGNUMERIC = 21
ROUNDING_MODE = 22
ANY_EXCEPTION = 23
CON_UNIT = 0
CON_FALSE = 1
CON_TRUE = 2
ADD_DECIMAL = 0
SUB_DECIMAL = 1
MUL_DECIMAL = 2
DIV_DECIMAL = 3
ROUND_DECIMAL = 6
ADD_NUMERIC = 107
SUB_NUMERIC = 108
MUL_NUMERIC = 109
DIV_NUMERIC = 110
ROUND_NUMERIC = 111
CAST_NUMERIC = 121
SHIFT_NUMERIC = 122
ADD_INT64 = 7
SUB_INT64 = 8
MUL_INT64 = 9
DIV_INT64 = 10
MOD_INT64 = 11
EXP_INT64 = 12
FOLDL = 20
FOLDR = 21
TEXTMAP_EMPTY = 96
TEXTMAP_INSERT = 97
TEXTMAP_LOOKUP = 98
TEXTMAP_DELETE = 99
TEXTMAP_TO_LIST = 100
TEXTMAP_SIZE = 101
GENMAP_EMPTY = 124
GENMAP_INSERT = 125
GENMAP_LOOKUP = 126
GENMAP_DELETE = 127
GENMAP_KEYS = 128
GENMAP_VALUES = 129
GENMAP_SIZE = 130
EXPLODE_TEXT = 23
APPEND_TEXT = 24
ERROR = 25
ANY_EXCEPTION_MESSAGE = 147
LEQ_INT64 = 33
LEQ_DECIMAL = 34
LEQ_NUMERIC = 112
LEQ_TEXT = 36
LEQ_TIMESTAMP = 37
LEQ_DATE = 67
LEQ_PARTY = 89
LESS_INT64 = 39
LESS_DECIMAL = 40
LESS_NUMERIC = 113
LESS_TEXT = 42
LESS_TIMESTAMP = 43
LESS_DATE = 68
LESS_PARTY = 90
GEQ_INT64 = 45
GEQ_DECIMAL = 46
GEQ_NUMERIC = 114
GEQ_TEXT = 48
GEQ_TIMESTAMP = 49
GEQ_DATE = 69
GEQ_PARTY = 91
GREATER_INT64 = 51
GREATER_DECIMAL = 52
GREATER_NUMERIC = 115
GREATER_TEXT = 54
GREATER_TIMESTAMP = 55
GREATER_DATE = 70
GREATER_PARTY = 92
INT64_TO_TEXT = 57
DECIMAL_TO_TEXT = 58
NUMERIC_TO_TEXT = 116
TEXT_TO_TEXT = 60
TIMESTAMP_TO_TEXT = 61
DATE_TO_TEXT = 71
PARTY_TO_QUOTED_TEXT = 63
PARTY_TO_TEXT = 94
TEXT_TO_PARTY = 95
TEXT_TO_INT64 = 103
TEXT_TO_DECIMAL = 104
TEXT_TO_NUMERIC = 117
CONTRACT_ID_TO_TEXT = 136
SHA256_TEXT = 93
DATE_TO_UNIX_DAYS = 72
UNIX_DAYS_TO_DATE = 73
TIMESTAMP_TO_UNIX_MICROSECONDS = 74
UNIX_MICROSECONDS_TO_TIMESTAMP = 75
INT64_TO_DECIMAL = 76
DECIMAL_TO_INT64 = 77
INT64_TO_NUMERIC = 118
NUMERIC_TO_INT64 = 119
IMPLODE_TEXT = 78
EQUAL_INT64 = 79
EQUAL_DECIMAL = 80
EQUAL_NUMERIC = 120
EQUAL_TEXT = 81
EQUAL_TIMESTAMP = 82
EQUAL_DATE = 83
EQUAL_PARTY = 84
EQUAL_BOOL = 85
EQUAL_CONTRACT_ID = 86
EQUAL_LIST = 87
EQUAL_TYPE_REP = 123
EQUAL = 131
LESS_EQ = 132
LESS = 133
GREATER_EQ = 134
GREATER = 135
TRACE = 88
COERCE_CONTRACT_ID = 102
CODE_POINTS_TO_TEXT = 105
TEXT_TO_CODE_POINTS = 106
SCALE_BIGNUMERIC = 137
PRECISION_BIGNUMERIC = 138
ADD_BIGNUMERIC = 139
SUB_BIGNUMERIC = 140
MUL_BIGNUMERIC = 141
DIV_BIGNUMERIC = 142
SHIFT_RIGHT_BIGNUMERIC = 143
BIGNUMERIC_TO_NUMERIC = 144
NUMERIC_TO_BIGNUMERIC = 145
BIGNUMERIC_TO_TEXT = 146


_UNIT = DESCRIPTOR.message_types_by_name['Unit']
_PACKAGEREF = DESCRIPTOR.message_types_by_name['PackageRef']
_DOTTEDNAME = DESCRIPTOR.message_types_by_name['DottedName']
_MODULEREF = DESCRIPTOR.message_types_by_name['ModuleRef']
_TYPECONNAME = DESCRIPTOR.message_types_by_name['TypeConName']
_TYPESYNNAME = DESCRIPTOR.message_types_by_name['TypeSynName']
_VALNAME = DESCRIPTOR.message_types_by_name['ValName']
_FIELDWITHTYPE = DESCRIPTOR.message_types_by_name['FieldWithType']
_VARWITHTYPE = DESCRIPTOR.message_types_by_name['VarWithType']
_TYPEVARWITHKIND = DESCRIPTOR.message_types_by_name['TypeVarWithKind']
_FIELDWITHEXPR = DESCRIPTOR.message_types_by_name['FieldWithExpr']
_BINDING = DESCRIPTOR.message_types_by_name['Binding']
_KIND = DESCRIPTOR.message_types_by_name['Kind']
_KIND_ARROW = _KIND.nested_types_by_name['Arrow']
_TYPE = DESCRIPTOR.message_types_by_name['Type']
_TYPE_VAR = _TYPE.nested_types_by_name['Var']
_TYPE_CON = _TYPE.nested_types_by_name['Con']
_TYPE_SYN = _TYPE.nested_types_by_name['Syn']
_TYPE_PRIM = _TYPE.nested_types_by_name['Prim']
_TYPE_FORALL = _TYPE.nested_types_by_name['Forall']
_TYPE_STRUCT = _TYPE.nested_types_by_name['Struct']
_PRIMLIT = DESCRIPTOR.message_types_by_name['PrimLit']
_LOCATION = DESCRIPTOR.message_types_by_name['Location']
_LOCATION_RANGE = _LOCATION.nested_types_by_name['Range']
_EXPR = DESCRIPTOR.message_types_by_name['Expr']
_EXPR_RECCON = _EXPR.nested_types_by_name['RecCon']
_EXPR_RECPROJ = _EXPR.nested_types_by_name['RecProj']
_EXPR_RECUPD = _EXPR.nested_types_by_name['RecUpd']
_EXPR_VARIANTCON = _EXPR.nested_types_by_name['VariantCon']
_EXPR_ENUMCON = _EXPR.nested_types_by_name['EnumCon']
_EXPR_STRUCTCON = _EXPR.nested_types_by_name['StructCon']
_EXPR_STRUCTPROJ = _EXPR.nested_types_by_name['StructProj']
_EXPR_STRUCTUPD = _EXPR.nested_types_by_name['StructUpd']
_EXPR_APP = _EXPR.nested_types_by_name['App']
_EXPR_TYAPP = _EXPR.nested_types_by_name['TyApp']
_EXPR_ABS = _EXPR.nested_types_by_name['Abs']
_EXPR_TYABS = _EXPR.nested_types_by_name['TyAbs']
_EXPR_NIL = _EXPR.nested_types_by_name['Nil']
_EXPR_CONS = _EXPR.nested_types_by_name['Cons']
_EXPR_OPTIONALNONE = _EXPR.nested_types_by_name['OptionalNone']
_EXPR_OPTIONALSOME = _EXPR.nested_types_by_name['OptionalSome']
_EXPR_TOANY = _EXPR.nested_types_by_name['ToAny']
_EXPR_FROMANY = _EXPR.nested_types_by_name['FromAny']
_EXPR_TOANYEXCEPTION = _EXPR.nested_types_by_name['ToAnyException']
_EXPR_FROMANYEXCEPTION = _EXPR.nested_types_by_name['FromAnyException']
_EXPR_THROW = _EXPR.nested_types_by_name['Throw']
_EXPR_TOINTERFACE = _EXPR.nested_types_by_name['ToInterface']
_EXPR_FROMINTERFACE = _EXPR.nested_types_by_name['FromInterface']
_EXPR_CALLINTERFACE = _EXPR.nested_types_by_name['CallInterface']
_EXPR_VIEWINTERFACE = _EXPR.nested_types_by_name['ViewInterface']
_EXPR_SIGNATORYINTERFACE = _EXPR.nested_types_by_name['SignatoryInterface']
_EXPR_OBSERVERINTERFACE = _EXPR.nested_types_by_name['ObserverInterface']
_EXPR_UNSAFEFROMINTERFACE = _EXPR.nested_types_by_name['UnsafeFromInterface']
_EXPR_TOREQUIREDINTERFACE = _EXPR.nested_types_by_name['ToRequiredInterface']
_EXPR_FROMREQUIREDINTERFACE = _EXPR.nested_types_by_name['FromRequiredInterface']
_EXPR_UNSAFEFROMREQUIREDINTERFACE = _EXPR.nested_types_by_name['UnsafeFromRequiredInterface']
_EXPR_INTERFACETEMPLATETYPEREP = _EXPR.nested_types_by_name['InterfaceTemplateTypeRep']
_EXPR_EXPERIMENTAL = _EXPR.nested_types_by_name['Experimental']
_CASEALT = DESCRIPTOR.message_types_by_name['CaseAlt']
_CASEALT_VARIANT = _CASEALT.nested_types_by_name['Variant']
_CASEALT_ENUM = _CASEALT.nested_types_by_name['Enum']
_CASEALT_CONS = _CASEALT.nested_types_by_name['Cons']
_CASEALT_OPTIONALSOME = _CASEALT.nested_types_by_name['OptionalSome']
_CASE = DESCRIPTOR.message_types_by_name['Case']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_PURE = DESCRIPTOR.message_types_by_name['Pure']
_UPDATE = DESCRIPTOR.message_types_by_name['Update']
_UPDATE_CREATE = _UPDATE.nested_types_by_name['Create']
_UPDATE_CREATEINTERFACE = _UPDATE.nested_types_by_name['CreateInterface']
_UPDATE_EXERCISE = _UPDATE.nested_types_by_name['Exercise']
_UPDATE_EXERCISEINTERFACE = _UPDATE.nested_types_by_name['ExerciseInterface']
_UPDATE_EXERCISEBYKEY = _UPDATE.nested_types_by_name['ExerciseByKey']
_UPDATE_FETCH = _UPDATE.nested_types_by_name['Fetch']
_UPDATE_FETCHINTERFACE = _UPDATE.nested_types_by_name['FetchInterface']
_UPDATE_EMBEDEXPR = _UPDATE.nested_types_by_name['EmbedExpr']
_UPDATE_RETRIEVEBYKEY = _UPDATE.nested_types_by_name['RetrieveByKey']
_UPDATE_TRYCATCH = _UPDATE.nested_types_by_name['TryCatch']
_SCENARIO = DESCRIPTOR.message_types_by_name['Scenario']
_SCENARIO_COMMIT = _SCENARIO.nested_types_by_name['Commit']
_SCENARIO_EMBEDEXPR = _SCENARIO.nested_types_by_name['EmbedExpr']
_TEMPLATECHOICE = DESCRIPTOR.message_types_by_name['TemplateChoice']
_KEYEXPR = DESCRIPTOR.message_types_by_name['KeyExpr']
_KEYEXPR_PROJECTION = _KEYEXPR.nested_types_by_name['Projection']
_KEYEXPR_PROJECTIONS = _KEYEXPR.nested_types_by_name['Projections']
_KEYEXPR_RECORDFIELD = _KEYEXPR.nested_types_by_name['RecordField']
_KEYEXPR_RECORD = _KEYEXPR.nested_types_by_name['Record']
_INTERFACEINSTANCEBODY = DESCRIPTOR.message_types_by_name['InterfaceInstanceBody']
_INTERFACEINSTANCEBODY_INTERFACEINSTANCEMETHOD = _INTERFACEINSTANCEBODY.nested_types_by_name['InterfaceInstanceMethod']
_DEFTEMPLATE = DESCRIPTOR.message_types_by_name['DefTemplate']
_DEFTEMPLATE_DEFKEY = _DEFTEMPLATE.nested_types_by_name['DefKey']
_DEFTEMPLATE_IMPLEMENTS = _DEFTEMPLATE.nested_types_by_name['Implements']
_INTERFACEMETHOD = DESCRIPTOR.message_types_by_name['InterfaceMethod']
_DEFINTERFACE = DESCRIPTOR.message_types_by_name['DefInterface']
_DEFINTERFACE_COIMPLEMENTS = _DEFINTERFACE.nested_types_by_name['CoImplements']
_DEFEXCEPTION = DESCRIPTOR.message_types_by_name['DefException']
_DEFDATATYPE = DESCRIPTOR.message_types_by_name['DefDataType']
_DEFDATATYPE_FIELDS = _DEFDATATYPE.nested_types_by_name['Fields']
_DEFDATATYPE_ENUMCONSTRUCTORS = _DEFDATATYPE.nested_types_by_name['EnumConstructors']
_DEFTYPESYN = DESCRIPTOR.message_types_by_name['DefTypeSyn']
_DEFVALUE = DESCRIPTOR.message_types_by_name['DefValue']
_DEFVALUE_NAMEWITHTYPE = _DEFVALUE.nested_types_by_name['NameWithType']
_FEATUREFLAGS = DESCRIPTOR.message_types_by_name['FeatureFlags']
_MODULE = DESCRIPTOR.message_types_by_name['Module']
_INTERNEDDOTTEDNAME = DESCRIPTOR.message_types_by_name['InternedDottedName']
_PACKAGEMETADATA = DESCRIPTOR.message_types_by_name['PackageMetadata']
_PACKAGE = DESCRIPTOR.message_types_by_name['Package']
_PRIMLIT_ROUNDINGMODE = _PRIMLIT.enum_types_by_name['RoundingMode']
Unit = _reflection.GeneratedProtocolMessageType('Unit', (_message.Message,), {
  'DESCRIPTOR' : _UNIT,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Unit)
  })
_sym_db.RegisterMessage(Unit)

PackageRef = _reflection.GeneratedProtocolMessageType('PackageRef', (_message.Message,), {
  'DESCRIPTOR' : _PACKAGEREF,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.PackageRef)
  })
_sym_db.RegisterMessage(PackageRef)

DottedName = _reflection.GeneratedProtocolMessageType('DottedName', (_message.Message,), {
  'DESCRIPTOR' : _DOTTEDNAME,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DottedName)
  })
_sym_db.RegisterMessage(DottedName)

ModuleRef = _reflection.GeneratedProtocolMessageType('ModuleRef', (_message.Message,), {
  'DESCRIPTOR' : _MODULEREF,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.ModuleRef)
  })
_sym_db.RegisterMessage(ModuleRef)

TypeConName = _reflection.GeneratedProtocolMessageType('TypeConName', (_message.Message,), {
  'DESCRIPTOR' : _TYPECONNAME,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.TypeConName)
  })
_sym_db.RegisterMessage(TypeConName)

TypeSynName = _reflection.GeneratedProtocolMessageType('TypeSynName', (_message.Message,), {
  'DESCRIPTOR' : _TYPESYNNAME,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.TypeSynName)
  })
_sym_db.RegisterMessage(TypeSynName)

ValName = _reflection.GeneratedProtocolMessageType('ValName', (_message.Message,), {
  'DESCRIPTOR' : _VALNAME,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.ValName)
  })
_sym_db.RegisterMessage(ValName)

FieldWithType = _reflection.GeneratedProtocolMessageType('FieldWithType', (_message.Message,), {
  'DESCRIPTOR' : _FIELDWITHTYPE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.FieldWithType)
  })
_sym_db.RegisterMessage(FieldWithType)

VarWithType = _reflection.GeneratedProtocolMessageType('VarWithType', (_message.Message,), {
  'DESCRIPTOR' : _VARWITHTYPE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.VarWithType)
  })
_sym_db.RegisterMessage(VarWithType)

TypeVarWithKind = _reflection.GeneratedProtocolMessageType('TypeVarWithKind', (_message.Message,), {
  'DESCRIPTOR' : _TYPEVARWITHKIND,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.TypeVarWithKind)
  })
_sym_db.RegisterMessage(TypeVarWithKind)

FieldWithExpr = _reflection.GeneratedProtocolMessageType('FieldWithExpr', (_message.Message,), {
  'DESCRIPTOR' : _FIELDWITHEXPR,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.FieldWithExpr)
  })
_sym_db.RegisterMessage(FieldWithExpr)

Binding = _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), {
  'DESCRIPTOR' : _BINDING,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Binding)
  })
_sym_db.RegisterMessage(Binding)

Kind = _reflection.GeneratedProtocolMessageType('Kind', (_message.Message,), {

  'Arrow' : _reflection.GeneratedProtocolMessageType('Arrow', (_message.Message,), {
    'DESCRIPTOR' : _KIND_ARROW,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Kind.Arrow)
    })
  ,
  'DESCRIPTOR' : _KIND,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Kind)
  })
_sym_db.RegisterMessage(Kind)
_sym_db.RegisterMessage(Kind.Arrow)

Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), {

  'Var' : _reflection.GeneratedProtocolMessageType('Var', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_VAR,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Var)
    })
  ,

  'Con' : _reflection.GeneratedProtocolMessageType('Con', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_CON,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Con)
    })
  ,

  'Syn' : _reflection.GeneratedProtocolMessageType('Syn', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_SYN,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Syn)
    })
  ,

  'Prim' : _reflection.GeneratedProtocolMessageType('Prim', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_PRIM,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Prim)
    })
  ,

  'Forall' : _reflection.GeneratedProtocolMessageType('Forall', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_FORALL,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Forall)
    })
  ,

  'Struct' : _reflection.GeneratedProtocolMessageType('Struct', (_message.Message,), {
    'DESCRIPTOR' : _TYPE_STRUCT,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Type.Struct)
    })
  ,
  'DESCRIPTOR' : _TYPE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Type)
  })
_sym_db.RegisterMessage(Type)
_sym_db.RegisterMessage(Type.Var)
_sym_db.RegisterMessage(Type.Con)
_sym_db.RegisterMessage(Type.Syn)
_sym_db.RegisterMessage(Type.Prim)
_sym_db.RegisterMessage(Type.Forall)
_sym_db.RegisterMessage(Type.Struct)

PrimLit = _reflection.GeneratedProtocolMessageType('PrimLit', (_message.Message,), {
  'DESCRIPTOR' : _PRIMLIT,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.PrimLit)
  })
_sym_db.RegisterMessage(PrimLit)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {

  'Range' : _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), {
    'DESCRIPTOR' : _LOCATION_RANGE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Location.Range)
    })
  ,
  'DESCRIPTOR' : _LOCATION,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Location)
  })
_sym_db.RegisterMessage(Location)
_sym_db.RegisterMessage(Location.Range)

Expr = _reflection.GeneratedProtocolMessageType('Expr', (_message.Message,), {

  'RecCon' : _reflection.GeneratedProtocolMessageType('RecCon', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_RECCON,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.RecCon)
    })
  ,

  'RecProj' : _reflection.GeneratedProtocolMessageType('RecProj', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_RECPROJ,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.RecProj)
    })
  ,

  'RecUpd' : _reflection.GeneratedProtocolMessageType('RecUpd', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_RECUPD,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.RecUpd)
    })
  ,

  'VariantCon' : _reflection.GeneratedProtocolMessageType('VariantCon', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_VARIANTCON,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.VariantCon)
    })
  ,

  'EnumCon' : _reflection.GeneratedProtocolMessageType('EnumCon', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_ENUMCON,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.EnumCon)
    })
  ,

  'StructCon' : _reflection.GeneratedProtocolMessageType('StructCon', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_STRUCTCON,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.StructCon)
    })
  ,

  'StructProj' : _reflection.GeneratedProtocolMessageType('StructProj', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_STRUCTPROJ,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.StructProj)
    })
  ,

  'StructUpd' : _reflection.GeneratedProtocolMessageType('StructUpd', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_STRUCTUPD,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.StructUpd)
    })
  ,

  'App' : _reflection.GeneratedProtocolMessageType('App', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_APP,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.App)
    })
  ,

  'TyApp' : _reflection.GeneratedProtocolMessageType('TyApp', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TYAPP,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.TyApp)
    })
  ,

  'Abs' : _reflection.GeneratedProtocolMessageType('Abs', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_ABS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.Abs)
    })
  ,

  'TyAbs' : _reflection.GeneratedProtocolMessageType('TyAbs', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TYABS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.TyAbs)
    })
  ,

  'Nil' : _reflection.GeneratedProtocolMessageType('Nil', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_NIL,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.Nil)
    })
  ,

  'Cons' : _reflection.GeneratedProtocolMessageType('Cons', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_CONS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.Cons)
    })
  ,

  'OptionalNone' : _reflection.GeneratedProtocolMessageType('OptionalNone', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_OPTIONALNONE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.OptionalNone)
    })
  ,

  'OptionalSome' : _reflection.GeneratedProtocolMessageType('OptionalSome', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_OPTIONALSOME,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.OptionalSome)
    })
  ,

  'ToAny' : _reflection.GeneratedProtocolMessageType('ToAny', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TOANY,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ToAny)
    })
  ,

  'FromAny' : _reflection.GeneratedProtocolMessageType('FromAny', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_FROMANY,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.FromAny)
    })
  ,

  'ToAnyException' : _reflection.GeneratedProtocolMessageType('ToAnyException', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TOANYEXCEPTION,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ToAnyException)
    })
  ,

  'FromAnyException' : _reflection.GeneratedProtocolMessageType('FromAnyException', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_FROMANYEXCEPTION,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.FromAnyException)
    })
  ,

  'Throw' : _reflection.GeneratedProtocolMessageType('Throw', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_THROW,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.Throw)
    })
  ,

  'ToInterface' : _reflection.GeneratedProtocolMessageType('ToInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TOINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ToInterface)
    })
  ,

  'FromInterface' : _reflection.GeneratedProtocolMessageType('FromInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_FROMINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.FromInterface)
    })
  ,

  'CallInterface' : _reflection.GeneratedProtocolMessageType('CallInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_CALLINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.CallInterface)
    })
  ,

  'ViewInterface' : _reflection.GeneratedProtocolMessageType('ViewInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_VIEWINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ViewInterface)
    })
  ,

  'SignatoryInterface' : _reflection.GeneratedProtocolMessageType('SignatoryInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_SIGNATORYINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.SignatoryInterface)
    })
  ,

  'ObserverInterface' : _reflection.GeneratedProtocolMessageType('ObserverInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_OBSERVERINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ObserverInterface)
    })
  ,

  'UnsafeFromInterface' : _reflection.GeneratedProtocolMessageType('UnsafeFromInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_UNSAFEFROMINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.UnsafeFromInterface)
    })
  ,

  'ToRequiredInterface' : _reflection.GeneratedProtocolMessageType('ToRequiredInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_TOREQUIREDINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.ToRequiredInterface)
    })
  ,

  'FromRequiredInterface' : _reflection.GeneratedProtocolMessageType('FromRequiredInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_FROMREQUIREDINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.FromRequiredInterface)
    })
  ,

  'UnsafeFromRequiredInterface' : _reflection.GeneratedProtocolMessageType('UnsafeFromRequiredInterface', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_UNSAFEFROMREQUIREDINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.UnsafeFromRequiredInterface)
    })
  ,

  'InterfaceTemplateTypeRep' : _reflection.GeneratedProtocolMessageType('InterfaceTemplateTypeRep', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_INTERFACETEMPLATETYPEREP,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.InterfaceTemplateTypeRep)
    })
  ,

  'Experimental' : _reflection.GeneratedProtocolMessageType('Experimental', (_message.Message,), {
    'DESCRIPTOR' : _EXPR_EXPERIMENTAL,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Expr.Experimental)
    })
  ,
  'DESCRIPTOR' : _EXPR,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Expr)
  })
_sym_db.RegisterMessage(Expr)
_sym_db.RegisterMessage(Expr.RecCon)
_sym_db.RegisterMessage(Expr.RecProj)
_sym_db.RegisterMessage(Expr.RecUpd)
_sym_db.RegisterMessage(Expr.VariantCon)
_sym_db.RegisterMessage(Expr.EnumCon)
_sym_db.RegisterMessage(Expr.StructCon)
_sym_db.RegisterMessage(Expr.StructProj)
_sym_db.RegisterMessage(Expr.StructUpd)
_sym_db.RegisterMessage(Expr.App)
_sym_db.RegisterMessage(Expr.TyApp)
_sym_db.RegisterMessage(Expr.Abs)
_sym_db.RegisterMessage(Expr.TyAbs)
_sym_db.RegisterMessage(Expr.Nil)
_sym_db.RegisterMessage(Expr.Cons)
_sym_db.RegisterMessage(Expr.OptionalNone)
_sym_db.RegisterMessage(Expr.OptionalSome)
_sym_db.RegisterMessage(Expr.ToAny)
_sym_db.RegisterMessage(Expr.FromAny)
_sym_db.RegisterMessage(Expr.ToAnyException)
_sym_db.RegisterMessage(Expr.FromAnyException)
_sym_db.RegisterMessage(Expr.Throw)
_sym_db.RegisterMessage(Expr.ToInterface)
_sym_db.RegisterMessage(Expr.FromInterface)
_sym_db.RegisterMessage(Expr.CallInterface)
_sym_db.RegisterMessage(Expr.ViewInterface)
_sym_db.RegisterMessage(Expr.SignatoryInterface)
_sym_db.RegisterMessage(Expr.ObserverInterface)
_sym_db.RegisterMessage(Expr.UnsafeFromInterface)
_sym_db.RegisterMessage(Expr.ToRequiredInterface)
_sym_db.RegisterMessage(Expr.FromRequiredInterface)
_sym_db.RegisterMessage(Expr.UnsafeFromRequiredInterface)
_sym_db.RegisterMessage(Expr.InterfaceTemplateTypeRep)
_sym_db.RegisterMessage(Expr.Experimental)

CaseAlt = _reflection.GeneratedProtocolMessageType('CaseAlt', (_message.Message,), {

  'Variant' : _reflection.GeneratedProtocolMessageType('Variant', (_message.Message,), {
    'DESCRIPTOR' : _CASEALT_VARIANT,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.CaseAlt.Variant)
    })
  ,

  'Enum' : _reflection.GeneratedProtocolMessageType('Enum', (_message.Message,), {
    'DESCRIPTOR' : _CASEALT_ENUM,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.CaseAlt.Enum)
    })
  ,

  'Cons' : _reflection.GeneratedProtocolMessageType('Cons', (_message.Message,), {
    'DESCRIPTOR' : _CASEALT_CONS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.CaseAlt.Cons)
    })
  ,

  'OptionalSome' : _reflection.GeneratedProtocolMessageType('OptionalSome', (_message.Message,), {
    'DESCRIPTOR' : _CASEALT_OPTIONALSOME,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.CaseAlt.OptionalSome)
    })
  ,
  'DESCRIPTOR' : _CASEALT,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.CaseAlt)
  })
_sym_db.RegisterMessage(CaseAlt)
_sym_db.RegisterMessage(CaseAlt.Variant)
_sym_db.RegisterMessage(CaseAlt.Enum)
_sym_db.RegisterMessage(CaseAlt.Cons)
_sym_db.RegisterMessage(CaseAlt.OptionalSome)

Case = _reflection.GeneratedProtocolMessageType('Case', (_message.Message,), {
  'DESCRIPTOR' : _CASE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Case)
  })
_sym_db.RegisterMessage(Case)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Block)
  })
_sym_db.RegisterMessage(Block)

Pure = _reflection.GeneratedProtocolMessageType('Pure', (_message.Message,), {
  'DESCRIPTOR' : _PURE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Pure)
  })
_sym_db.RegisterMessage(Pure)

Update = _reflection.GeneratedProtocolMessageType('Update', (_message.Message,), {

  'Create' : _reflection.GeneratedProtocolMessageType('Create', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_CREATE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.Create)
    })
  ,

  'CreateInterface' : _reflection.GeneratedProtocolMessageType('CreateInterface', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_CREATEINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.CreateInterface)
    })
  ,

  'Exercise' : _reflection.GeneratedProtocolMessageType('Exercise', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_EXERCISE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.Exercise)
    })
  ,

  'ExerciseInterface' : _reflection.GeneratedProtocolMessageType('ExerciseInterface', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_EXERCISEINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.ExerciseInterface)
    })
  ,

  'ExerciseByKey' : _reflection.GeneratedProtocolMessageType('ExerciseByKey', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_EXERCISEBYKEY,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.ExerciseByKey)
    })
  ,

  'Fetch' : _reflection.GeneratedProtocolMessageType('Fetch', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_FETCH,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.Fetch)
    })
  ,

  'FetchInterface' : _reflection.GeneratedProtocolMessageType('FetchInterface', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_FETCHINTERFACE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.FetchInterface)
    })
  ,

  'EmbedExpr' : _reflection.GeneratedProtocolMessageType('EmbedExpr', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_EMBEDEXPR,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.EmbedExpr)
    })
  ,

  'RetrieveByKey' : _reflection.GeneratedProtocolMessageType('RetrieveByKey', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_RETRIEVEBYKEY,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.RetrieveByKey)
    })
  ,

  'TryCatch' : _reflection.GeneratedProtocolMessageType('TryCatch', (_message.Message,), {
    'DESCRIPTOR' : _UPDATE_TRYCATCH,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Update.TryCatch)
    })
  ,
  'DESCRIPTOR' : _UPDATE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Update)
  })
_sym_db.RegisterMessage(Update)
_sym_db.RegisterMessage(Update.Create)
_sym_db.RegisterMessage(Update.CreateInterface)
_sym_db.RegisterMessage(Update.Exercise)
_sym_db.RegisterMessage(Update.ExerciseInterface)
_sym_db.RegisterMessage(Update.ExerciseByKey)
_sym_db.RegisterMessage(Update.Fetch)
_sym_db.RegisterMessage(Update.FetchInterface)
_sym_db.RegisterMessage(Update.EmbedExpr)
_sym_db.RegisterMessage(Update.RetrieveByKey)
_sym_db.RegisterMessage(Update.TryCatch)

Scenario = _reflection.GeneratedProtocolMessageType('Scenario', (_message.Message,), {

  'Commit' : _reflection.GeneratedProtocolMessageType('Commit', (_message.Message,), {
    'DESCRIPTOR' : _SCENARIO_COMMIT,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Scenario.Commit)
    })
  ,

  'EmbedExpr' : _reflection.GeneratedProtocolMessageType('EmbedExpr', (_message.Message,), {
    'DESCRIPTOR' : _SCENARIO_EMBEDEXPR,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.Scenario.EmbedExpr)
    })
  ,
  'DESCRIPTOR' : _SCENARIO,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Scenario)
  })
_sym_db.RegisterMessage(Scenario)
_sym_db.RegisterMessage(Scenario.Commit)
_sym_db.RegisterMessage(Scenario.EmbedExpr)

TemplateChoice = _reflection.GeneratedProtocolMessageType('TemplateChoice', (_message.Message,), {
  'DESCRIPTOR' : _TEMPLATECHOICE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.TemplateChoice)
  })
_sym_db.RegisterMessage(TemplateChoice)

KeyExpr = _reflection.GeneratedProtocolMessageType('KeyExpr', (_message.Message,), {

  'Projection' : _reflection.GeneratedProtocolMessageType('Projection', (_message.Message,), {
    'DESCRIPTOR' : _KEYEXPR_PROJECTION,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.KeyExpr.Projection)
    })
  ,

  'Projections' : _reflection.GeneratedProtocolMessageType('Projections', (_message.Message,), {
    'DESCRIPTOR' : _KEYEXPR_PROJECTIONS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.KeyExpr.Projections)
    })
  ,

  'RecordField' : _reflection.GeneratedProtocolMessageType('RecordField', (_message.Message,), {
    'DESCRIPTOR' : _KEYEXPR_RECORDFIELD,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.KeyExpr.RecordField)
    })
  ,

  'Record' : _reflection.GeneratedProtocolMessageType('Record', (_message.Message,), {
    'DESCRIPTOR' : _KEYEXPR_RECORD,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.KeyExpr.Record)
    })
  ,
  'DESCRIPTOR' : _KEYEXPR,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.KeyExpr)
  })
_sym_db.RegisterMessage(KeyExpr)
_sym_db.RegisterMessage(KeyExpr.Projection)
_sym_db.RegisterMessage(KeyExpr.Projections)
_sym_db.RegisterMessage(KeyExpr.RecordField)
_sym_db.RegisterMessage(KeyExpr.Record)

InterfaceInstanceBody = _reflection.GeneratedProtocolMessageType('InterfaceInstanceBody', (_message.Message,), {

  'InterfaceInstanceMethod' : _reflection.GeneratedProtocolMessageType('InterfaceInstanceMethod', (_message.Message,), {
    'DESCRIPTOR' : _INTERFACEINSTANCEBODY_INTERFACEINSTANCEMETHOD,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.InterfaceInstanceBody.InterfaceInstanceMethod)
    })
  ,
  'DESCRIPTOR' : _INTERFACEINSTANCEBODY,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.InterfaceInstanceBody)
  })
_sym_db.RegisterMessage(InterfaceInstanceBody)
_sym_db.RegisterMessage(InterfaceInstanceBody.InterfaceInstanceMethod)

DefTemplate = _reflection.GeneratedProtocolMessageType('DefTemplate', (_message.Message,), {

  'DefKey' : _reflection.GeneratedProtocolMessageType('DefKey', (_message.Message,), {
    'DESCRIPTOR' : _DEFTEMPLATE_DEFKEY,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefTemplate.DefKey)
    })
  ,

  'Implements' : _reflection.GeneratedProtocolMessageType('Implements', (_message.Message,), {
    'DESCRIPTOR' : _DEFTEMPLATE_IMPLEMENTS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefTemplate.Implements)
    })
  ,
  'DESCRIPTOR' : _DEFTEMPLATE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefTemplate)
  })
_sym_db.RegisterMessage(DefTemplate)
_sym_db.RegisterMessage(DefTemplate.DefKey)
_sym_db.RegisterMessage(DefTemplate.Implements)

InterfaceMethod = _reflection.GeneratedProtocolMessageType('InterfaceMethod', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEMETHOD,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.InterfaceMethod)
  })
_sym_db.RegisterMessage(InterfaceMethod)

DefInterface = _reflection.GeneratedProtocolMessageType('DefInterface', (_message.Message,), {

  'CoImplements' : _reflection.GeneratedProtocolMessageType('CoImplements', (_message.Message,), {
    'DESCRIPTOR' : _DEFINTERFACE_COIMPLEMENTS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefInterface.CoImplements)
    })
  ,
  'DESCRIPTOR' : _DEFINTERFACE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefInterface)
  })
_sym_db.RegisterMessage(DefInterface)
_sym_db.RegisterMessage(DefInterface.CoImplements)

DefException = _reflection.GeneratedProtocolMessageType('DefException', (_message.Message,), {
  'DESCRIPTOR' : _DEFEXCEPTION,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefException)
  })
_sym_db.RegisterMessage(DefException)

DefDataType = _reflection.GeneratedProtocolMessageType('DefDataType', (_message.Message,), {

  'Fields' : _reflection.GeneratedProtocolMessageType('Fields', (_message.Message,), {
    'DESCRIPTOR' : _DEFDATATYPE_FIELDS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefDataType.Fields)
    })
  ,

  'EnumConstructors' : _reflection.GeneratedProtocolMessageType('EnumConstructors', (_message.Message,), {
    'DESCRIPTOR' : _DEFDATATYPE_ENUMCONSTRUCTORS,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefDataType.EnumConstructors)
    })
  ,
  'DESCRIPTOR' : _DEFDATATYPE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefDataType)
  })
_sym_db.RegisterMessage(DefDataType)
_sym_db.RegisterMessage(DefDataType.Fields)
_sym_db.RegisterMessage(DefDataType.EnumConstructors)

DefTypeSyn = _reflection.GeneratedProtocolMessageType('DefTypeSyn', (_message.Message,), {
  'DESCRIPTOR' : _DEFTYPESYN,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefTypeSyn)
  })
_sym_db.RegisterMessage(DefTypeSyn)

DefValue = _reflection.GeneratedProtocolMessageType('DefValue', (_message.Message,), {

  'NameWithType' : _reflection.GeneratedProtocolMessageType('NameWithType', (_message.Message,), {
    'DESCRIPTOR' : _DEFVALUE_NAMEWITHTYPE,
    '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
    # @@protoc_insertion_point(class_scope:daml_lf_1.DefValue.NameWithType)
    })
  ,
  'DESCRIPTOR' : _DEFVALUE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.DefValue)
  })
_sym_db.RegisterMessage(DefValue)
_sym_db.RegisterMessage(DefValue.NameWithType)

FeatureFlags = _reflection.GeneratedProtocolMessageType('FeatureFlags', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREFLAGS,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.FeatureFlags)
  })
_sym_db.RegisterMessage(FeatureFlags)

Module = _reflection.GeneratedProtocolMessageType('Module', (_message.Message,), {
  'DESCRIPTOR' : _MODULE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Module)
  })
_sym_db.RegisterMessage(Module)

InternedDottedName = _reflection.GeneratedProtocolMessageType('InternedDottedName', (_message.Message,), {
  'DESCRIPTOR' : _INTERNEDDOTTEDNAME,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.InternedDottedName)
  })
_sym_db.RegisterMessage(InternedDottedName)

PackageMetadata = _reflection.GeneratedProtocolMessageType('PackageMetadata', (_message.Message,), {
  'DESCRIPTOR' : _PACKAGEMETADATA,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.PackageMetadata)
  })
_sym_db.RegisterMessage(PackageMetadata)

Package = _reflection.GeneratedProtocolMessageType('Package', (_message.Message,), {
  'DESCRIPTOR' : _PACKAGE,
  '__module__' : 'com.daml.daml_lf_1_15.daml_lf_1_pb2'
  # @@protoc_insertion_point(class_scope:daml_lf_1.Package)
  })
_sym_db.RegisterMessage(Package)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\023com.daml.daml_lf_15ZBgithub.com/digital-asset/dazl-client/v7/go/api/com/daml/daml_lf_15\252\002\033Com.Daml.Daml_Lf_15.DamlLf1'
  _PRIMTYPE._serialized_start=21068
  _PRIMTYPE._serialized_end=21361
  _PRIMCON._serialized_start=21363
  _PRIMCON._serialized_end=21415
  _BUILTINFUNCTION._serialized_start=21418
  _BUILTINFUNCTION._serialized_end=23669
  _UNIT._serialized_start=52
  _UNIT._serialized_end=58
  _PACKAGEREF._serialized_start=61
  _PACKAGEREF._serialized_end=216
  _DOTTEDNAME._serialized_start=218
  _DOTTEDNAME._serialized_end=258
  _MODULEREF._serialized_start=261
  _MODULEREF._serialized_end=475
  _TYPECONNAME._serialized_start=478
  _TYPECONNAME._serialized_end=651
  _TYPESYNNAME._serialized_start=654
  _TYPESYNNAME._serialized_end=827
  _VALNAME._serialized_start=830
  _VALNAME._serialized_end=964
  _FIELDWITHTYPE._serialized_start=967
  _FIELDWITHTYPE._serialized_end=1107
  _VARWITHTYPE._serialized_start=1110
  _VARWITHTYPE._serialized_end=1238
  _TYPEVARWITHKIND._serialized_start=1241
  _TYPEVARWITHKIND._serialized_end=1373
  _FIELDWITHEXPR._serialized_start=1376
  _FIELDWITHEXPR._serialized_end=1516
  _BINDING._serialized_start=1518
  _BINDING._serialized_end=1614
  _KIND._serialized_start=1617
  _KIND._serialized_end=1844
  _KIND_ARROW._serialized_start=1748
  _KIND_ARROW._serialized_end=1837
  _TYPE._serialized_start=1847
  _TYPE._serialized_end=2750
  _TYPE_VAR._serialized_start=2172
  _TYPE_VAR._serialized_end=2292
  _TYPE_CON._serialized_start=2294
  _TYPE_CON._serialized_end=2382
  _TYPE_SYN._serialized_start=2384
  _TYPE_SYN._serialized_end=2472
  _TYPE_PRIM._serialized_start=2474
  _TYPE_PRIM._serialized_end=2558
  _TYPE_FORALL._serialized_start=2560
  _TYPE_FORALL._serialized_end=2653
  _TYPE_STRUCT._serialized_start=2655
  _TYPE_STRUCT._serialized_end=2713
  _PRIMLIT._serialized_start=2753
  _PRIMLIT._serialized_end=3290
  _PRIMLIT_ROUNDINGMODE._serialized_start=3155
  _PRIMLIT_ROUNDINGMODE._serialized_end=3271
  _LOCATION._serialized_start=3293
  _LOCATION._serialized_end=3519
  _LOCATION_RANGE._serialized_start=3400
  _LOCATION_RANGE._serialized_end=3519
  _EXPR._serialized_start=3522
  _EXPR._serialized_end=10807
  _EXPR_RECCON._serialized_start=6251
  _EXPR_RECCON._serialized_end=6352
  _EXPR_RECPROJ._serialized_start=6355
  _EXPR_RECPROJ._serialized_end=6536
  _EXPR_RECUPD._serialized_start=6539
  _EXPR_RECUPD._serialized_end=6760
  _EXPR_VARIANTCON._serialized_start=6763
  _EXPR_VARIANTCON._serialized_end=6984
  _EXPR_ENUMCON._serialized_start=6987
  _EXPR_ENUMCON._serialized_end=7143
  _EXPR_STRUCTCON._serialized_start=7145
  _EXPR_STRUCTCON._serialized_end=7206
  _EXPR_STRUCTPROJ._serialized_start=7209
  _EXPR_STRUCTPROJ._serialized_end=7350
  _EXPR_STRUCTUPD._serialized_start=7353
  _EXPR_STRUCTUPD._serialized_end=7534
  _EXPR_APP._serialized_start=7536
  _EXPR_APP._serialized_end=7613
  _EXPR_TYAPP._serialized_start=7615
  _EXPR_TYAPP._serialized_end=7698
  _EXPR_ABS._serialized_start=7700
  _EXPR_ABS._serialized_end=7788
  _EXPR_TYABS._serialized_start=7790
  _EXPR_TYABS._serialized_end=7884
  _EXPR_NIL._serialized_start=7886
  _EXPR_NIL._serialized_end=7928
  _EXPR_CONS._serialized_start=7930
  _EXPR_CONS._serialized_end=8049
  _EXPR_OPTIONALNONE._serialized_start=8051
  _EXPR_OPTIONALNONE._serialized_end=8102
  _EXPR_OPTIONALSOME._serialized_start=8104
  _EXPR_OPTIONALSOME._serialized_end=8192
  _EXPR_TOANY._serialized_start=8194
  _EXPR_TOANY._serialized_end=8275
  _EXPR_FROMANY._serialized_start=8277
  _EXPR_FROMANY._serialized_end=8360
  _EXPR_TOANYEXCEPTION._serialized_start=8362
  _EXPR_TOANYEXCEPTION._serialized_end=8452
  _EXPR_FROMANYEXCEPTION._serialized_start=8454
  _EXPR_FROMANYEXCEPTION._serialized_end=8546
  _EXPR_THROW._serialized_start=8549
  _EXPR_THROW._serialized_end=8718
  _EXPR_TOINTERFACE._serialized_start=8721
  _EXPR_TOINTERFACE._serialized_end=8912
  _EXPR_FROMINTERFACE._serialized_start=8915
  _EXPR_FROMINTERFACE._serialized_end=9110
  _EXPR_CALLINTERFACE._serialized_start=9113
  _EXPR_CALLINTERFACE._serialized_end=9297
  _EXPR_VIEWINTERFACE._serialized_start=9299
  _EXPR_VIEWINTERFACE._serialized_end=9405
  _EXPR_SIGNATORYINTERFACE._serialized_start=9407
  _EXPR_SIGNATORYINTERFACE._serialized_end=9518
  _EXPR_OBSERVERINTERFACE._serialized_start=9520
  _EXPR_OBSERVERINTERFACE._serialized_end=9630
  _EXPR_UNSAFEFROMINTERFACE._serialized_start=9633
  _EXPR_UNSAFEFROMINTERFACE._serialized_end=9893
  _EXPR_TOREQUIREDINTERFACE._serialized_start=9896
  _EXPR_TOREQUIREDINTERFACE._serialized_end=10098
  _EXPR_FROMREQUIREDINTERFACE._serialized_start=10101
  _EXPR_FROMREQUIREDINTERFACE._serialized_end=10305
  _EXPR_UNSAFEFROMREQUIREDINTERFACE._serialized_start=10308
  _EXPR_UNSAFEFROMREQUIREDINTERFACE._serialized_end=10596
  _EXPR_INTERFACETEMPLATETYPEREP._serialized_start=10598
  _EXPR_INTERFACETEMPLATETYPEREP._serialized_end=10715
  _EXPR_EXPERIMENTAL._serialized_start=10717
  _EXPR_EXPERIMENTAL._serialized_end=10788
  _CASEALT._serialized_start=10810
  _CASEALT._serialized_end=12014
  _CASEALT_VARIANT._serialized_start=11268
  _CASEALT_VARIANT._serialized_end=11510
  _CASEALT_ENUM._serialized_start=11513
  _CASEALT_ENUM._serialized_end=11679
  _CASEALT_CONS._serialized_start=11682
  _CASEALT_CONS._serialized_end=11890
  _CASEALT_OPTIONALSOME._serialized_start=11892
  _CASEALT_OPTIONALSOME._serialized_end=12007
  _CASE._serialized_start=12016
  _CASE._serialized_end=12101
  _BLOCK._serialized_start=12103
  _BLOCK._serialized_end=12195
  _PURE._serialized_start=12197
  _PURE._serialized_end=12277
  _UPDATE._serialized_start=12280
  _UPDATE._serialized_end=14621
  _UPDATE_CREATE._serialized_start=13155
  _UPDATE_CREATE._serialized_end=13252
  _UPDATE_CREATEINTERFACE._serialized_start=13254
  _UPDATE_CREATEINTERFACE._serialized_end=13362
  _UPDATE_EXERCISE._serialized_start=13365
  _UPDATE_EXERCISE._serialized_end=13596
  _UPDATE_EXERCISEINTERFACE._serialized_start=13599
  _UPDATE_EXERCISEINTERFACE._serialized_end=13829
  _UPDATE_EXERCISEBYKEY._serialized_start=13832
  _UPDATE_EXERCISEBYKEY._serialized_end=14017
  _UPDATE_FETCH._serialized_start=14019
  _UPDATE_FETCH._serialized_end=14119
  _UPDATE_FETCHINTERFACE._serialized_start=14121
  _UPDATE_FETCHINTERFACE._serialized_end=14226
  _UPDATE_EMBEDEXPR._serialized_start=14228
  _UPDATE_EMBEDEXPR._serialized_end=14313
  _UPDATE_RETRIEVEBYKEY._serialized_start=14315
  _UPDATE_RETRIEVEBYKEY._serialized_end=14417
  _UPDATE_TRYCATCH._serialized_start=14420
  _UPDATE_TRYCATCH._serialized_end=14614
  _SCENARIO._serialized_start=14624
  _SCENARIO._serialized_end=15253
  _SCENARIO_COMMIT._serialized_start=15031
  _SCENARIO_COMMIT._serialized_end=15159
  _SCENARIO_EMBEDEXPR._serialized_start=14228
  _SCENARIO_EMBEDEXPR._serialized_end=14313
  _TEMPLATECHOICE._serialized_start=15256
  _TEMPLATECHOICE._serialized_end=15788
  _KEYEXPR._serialized_start=15791
  _KEYEXPR._serialized_end=16407
  _KEYEXPR_PROJECTION._serialized_start=15924
  _KEYEXPR_PROJECTION._serialized_end=16067
  _KEYEXPR_PROJECTIONS._serialized_start=16069
  _KEYEXPR_PROJECTIONS._serialized_end=16147
  _KEYEXPR_RECORDFIELD._serialized_start=16150
  _KEYEXPR_RECORDFIELD._serialized_end=16291
  _KEYEXPR_RECORD._serialized_start=16293
  _KEYEXPR_RECORD._serialized_end=16400
  _INTERFACEINSTANCEBODY._serialized_start=16410
  _INTERFACEINSTANCEBODY._serialized_end=16670
  _INTERFACEINSTANCEBODY_INTERFACEINSTANCEMETHOD._serialized_start=16556
  _INTERFACEINSTANCEBODY_INTERFACEINSTANCEMETHOD._serialized_end=16670
  _DEFTEMPLATE._serialized_start=16673
  _DEFTEMPLATE._serialized_end=17630
  _DEFTEMPLATE_DEFKEY._serialized_start=17284
  _DEFTEMPLATE_DEFKEY._serialized_end=17484
  _DEFTEMPLATE_IMPLEMENTS._serialized_start=17486
  _DEFTEMPLATE_IMPLEMENTS._serialized_end=17606
  _INTERFACEMETHOD._serialized_start=17633
  _INTERFACEMETHOD._serialized_end=17786
  _DEFINTERFACE._serialized_start=17789
  _DEFINTERFACE._serialized_end=18340
  _DEFINTERFACE_COIMPLEMENTS._serialized_start=18220
  _DEFINTERFACE_COIMPLEMENTS._serialized_end=18340
  _DEFEXCEPTION._serialized_start=18343
  _DEFEXCEPTION._serialized_end=18497
  _DEFDATATYPE._serialized_start=18500
  _DEFDATATYPE._serialized_end=19187
  _DEFDATATYPE_FIELDS._serialized_start=18986
  _DEFDATATYPE_FIELDS._serialized_end=19044
  _DEFDATATYPE_ENUMCONSTRUCTORS._serialized_start=19046
  _DEFDATATYPE_ENUMCONSTRUCTORS._serialized_end=19167
  _DEFTYPESYN._serialized_start=19190
  _DEFTYPESYN._serialized_end=19454
  _DEFVALUE._serialized_start=19457
  _DEFVALUE._serialized_end=19827
  _DEFVALUE_NAMEWITHTYPE._serialized_start=19697
  _DEFVALUE_NAMEWITHTYPE._serialized_end=19827
  _FEATUREFLAGS._serialized_start=19830
  _FEATUREFLAGS._serialized_end=20080
  _MODULE._serialized_start=20083
  _MODULE._serialized_end=20583
  _INTERNEDDOTTEDNAME._serialized_start=20585
  _INTERNEDDOTTEDNAME._serialized_end=20657
  _PACKAGEMETADATA._serialized_start=20659
  _PACKAGEMETADATA._serialized_end=20770
  _PACKAGE._serialized_start=20773
  _PACKAGE._serialized_end=21065
# @@protoc_insertion_point(module_scope)
