from typing import List
from pyVmomi import pbm, vim, vmodl
from pyVmomi.VmomiSupport import ManagedObject, long


class PlacementSolver(ManagedObject):
    def QueryMatchingHub(self, hubsToSearch: List[PlacementHub], profile: pbm.profile.ProfileId) -> List[PlacementHub]: ...
    def QueryMatchingHubWithSpec(self, hubsToSearch: List[PlacementHub], createSpec: pbm.profile.CapabilityBasedProfileCreateSpec) -> List[PlacementHub]: ...
    def CheckCompatibility(self, hubsToSearch: List[PlacementHub], profile: pbm.profile.ProfileId) -> List[CompatibilityResult]: ...
    def CheckCompatibilityWithSpec(self, hubsToSearch: List[PlacementHub], profileSpec: pbm.profile.CapabilityBasedProfileCreateSpec) -> List[CompatibilityResult]: ...
    def CheckRequirements(self, hubsToSearch: List[PlacementHub], placementSubjectRef: pbm.ServerObjectRef, placementSubjectRequirement: List[Requirement]) -> List[CompatibilityResult]: ...


class CapabilityConstraintsRequirement(Requirement):
    @property
    def constraints(self) -> pbm.profile.CapabilityConstraints: ...


class CapabilityProfileRequirement(Requirement):
    @property
    def profileId(self) -> pbm.profile.ProfileId: ...


class CompatibilityResult(vmodl.DynamicData):
    @property
    def hub(self) -> PlacementHub: ...
    @property
    def matchingResources(self) -> List[MatchingResources]: ...
    @property
    def howMany(self) -> long: ...
    @property
    def utilization(self) -> List[ResourceUtilization]: ...
    @property
    def warning(self) -> List[vmodl.MethodFault]: ...
    @property
    def error(self) -> List[vmodl.MethodFault]: ...


class MatchingReplicationResources(MatchingResources):
    @property
    def replicationGroup(self) -> List[vim.vm.replication.ReplicationGroupId]: ...


class MatchingResources(vmodl.DynamicData): ...


class PlacementHub(vmodl.DynamicData):
    @property
    def hubType(self) -> str: ...
    @property
    def hubId(self) -> str: ...


class Requirement(vmodl.DynamicData): ...


class ResourceUtilization(vmodl.DynamicData):
    @property
    def name(self) -> pbm.ExtendedElementDescription: ...
    @property
    def description(self) -> pbm.ExtendedElementDescription: ...
    @property
    def availableBefore(self) -> long: ...
    @property
    def availableAfter(self) -> long: ...
    @property
    def total(self) -> long: ...