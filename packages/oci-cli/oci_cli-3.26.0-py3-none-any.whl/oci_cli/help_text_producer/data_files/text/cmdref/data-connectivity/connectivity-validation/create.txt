"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

This endpoint is used to trigger validation of dataAsset, connection,
schema, entity, dataOperationConfig


Usage
=====

   oci data-connectivity connectivity-validation create [OPTIONS]


Required Parameters
===================

--model-type [text]

The model type of the operator.

Accepted values are:

   SOURCE_OPERATOR, TARGET_OPERATOR

--registry-id [text]

The registry OCID.


Optional Parameters
===================

--description [text]

Details about the operator.

--endpoint-id [text]

Endpoint ID used for getDataAssetFullDetails.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--identifier [text]

Value can only contain upper case letters, underscore, and numbers. It
should begin with an upper case letter or underscore. The value can be
modified.

--input-ports [complex type]

An array of input ports.

This option is a JSON list with items of type InputPort.  For
documentation on InputPort please see our API reference: https://docs
.cloud.oracle.com/api/#/en/dataconnectivitymanagement/20210217/dataty
pes/InputPort. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--key [text]

The key of the object.

--model-version [text]

The model version of an object.

--name [text]

Free form text without any restriction on the permitted characters.
Name can have letters, numbers, and special characters. The value is
editable and is restricted to 1000 characters.

--object-status [integer]

The status of an object that can be set to value 1 for shallow
references across objects, other values reserved.

--object-version [integer]

The version of the object that is used to track changes in the object
instance.

--op-config-values [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--output-ports [complex type]

An array of output ports.

This option is a JSON list with items of type OutputPort.  For
documentation on OutputPort please see our API reference: https://doc
s.cloud.oracle.com/api/#/en/dataconnectivitymanagement/20210217/datat
ypes/OutputPort. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--parameters [complex type]

An array of parameters used in the data flow.

This option is a JSON list with items of type Parameter.  For
documentation on Parameter please see our API reference: https://docs
.cloud.oracle.com/api/#/en/dataconnectivitymanagement/20210217/dataty
pes/Parameter. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--parent-ref [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--query", "--raw-output", "--read-timeout",
"--realm-specific-endpoint", "--region", "--release-info", "--request-
id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-connectivity/registry/create.html#cmdoption-display-name
       export model_type=<substitute-value-of-model_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-connectivity/connectivity-validation/create.html#cmdoption-model-type

       registry_id=$(oci data-connectivity registry create --display-name $display_name --query data.id --raw-output)

       oci data-connectivity connectivity-validation create --model-type $model_type --registry-id $registry_id
