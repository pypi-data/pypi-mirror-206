name: divfusion_pr_main

on:
  pull_request:
    branches:
      - main
    tags:
      - v*
permissions:
  contents: write
jobs:
  devfusion_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: '0'
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - id: install_hatch
        run: pip install hatch
      - id: get_latest_semver_tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true
      - id: set_version
        run: hatch version ${{ steps.get_latest_semver_tag.outputs.tag }}
      - id: get_version
        run: echo "dir=$(hatch version)" >> $GITHUB_OUTPUT
      - id: build_hatch
        run: hatch build
      - id: commit_build
        run: |
          git config user.name Github-Actions-Bot
          git config user.email github-actions@github.com
          git add .
          git commit -m "Build ${{ steps.get_version.outputs.dir }}"
          git push

  devfusion_test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: devfusion_build
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: '0'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - id: install_hatch
        run: pip install hatch
      - id: get_version
        run: echo "dir=$(hatch version)" >> $GITHUB_OUTPUT
        shell: bash
      - id: pip_install
        run: |
          pip install dist/divfusion-${{ steps.get_version.outputs.dir }}-py3-none-any.whl'[test]'
      - id: run_tests
        run: pytest --junitxml=test/pytest.xml
      - id: upload_test_results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-python-${{ matrix.python-version }}-os-${{ matrix.os }}
          path: test/pytest.xml

  publish-test-results:
    needs: devfusion_test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
          check_name: "Test Results (${{ github.event.workflow_run.event || github.event_name }})"
          check_run_annotations: "all tests, skipped tests"
          report_individual_runs: "true"