# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .fee_tag import FeeTag


class TopLevelFinancialHealthSummary(pydantic.BaseModel):
    tag: FeeTag = pydantic.Field(description=("Tag of the grouped fees.\n"))
    iso_currency_code: str = pydantic.Field(description=("ISO 4217 Compliant Currency code of the grouped fees.\n"))
    total_amount: float = pydantic.Field(description=("Total amount of the grouped fees.\n"))
    count: int = pydantic.Field(description=("Total number of grouped fee transactions.\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
