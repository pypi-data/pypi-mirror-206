<!--(if type=="FRONTEND")-->
include "frontend.conf"

appName = "$!APP_NAME!$"
play.http.router = prod.Routes

play.filters.enabled += play.filters.csp.CSPFilter

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.$!APP_PACKAGE_NAME!$.config.ErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.$!APP_PACKAGE_NAME!$.config.Module"

microservice {
  services {
    contact-frontend {
      protocol = http
      host = localhost
      port = 9250
    }
  }
}

play.i18n.langCookieHttpOnly: "true"

# Change this value to true to enable Welsh translations to be loaded from messages.cy, and to display the language toggle
features.welsh-language-support = false

# Replace play.i18n.langs with the commented out line below when your service has been fully translated into Welsh
# to enable Welsh translations for all content, including the standard headers and footers.
# play.i18n.langs = ["en", "cy"]
play.i18n.langs = ["en"]

# To integrate with tracking-consent-frontend, uncomment and update the
# gtm.container property below to be one of a, b, c, d, e, f or sdes
#tracking-consent-frontend {
#  gtm.container = "<INSERT YOUR GTM CONTAINER LETTER HERE>"
#}

<!--(end)-->

<!--(if type in ["BACKEND", "API"])-->
include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = $!APP_NAME!$

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.$!APP_PACKAGE_NAME!$.config.Module"

    <!--(if MONGO)-->
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
    <!--(end)-->

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  uk.gov.hmrc.$!APP_PACKAGE_NAME!$.controllers.MicroserviceHelloWorldController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Microservice specific config

    <!--(if MONGO)-->
mongodb {
  uri = "mongodb://localhost:27017/$!APP_NAME!$"
}
    <!--(end)-->

microservice {
  services {
    <!--(if type =="BACKEND")-->
    auth {
      host = localhost
      port = 8500
    }
    <!--(end)-->
  }
}

<!--(end)-->
