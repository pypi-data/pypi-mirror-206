from SharekhanApi.sharekhanConnect import SharekhanConnect

api_key = "Your api-key value"
# version_id = "version_id"
login = SharekhanConnect(api_key)
print(login.login_url())

session=login.generate_session(request_token="Your Request Token",secret_key="Your Secret Key")
sessionwithoutvesionId=login.generate_session_without_versionId(request_token="Your Request Token ",secret_key="Your Secret Key")

apiKey = api_key
requestToken = "Your Encrypted Request Token"
access_token=login.get_access_token(apiKey,requestToken,userId=12345,versionId=1006)
print(access_token)

access_token = "Your Access-Token"
sharekhan = SharekhanConnect(api_key,access_token=access_token)
print(sharekhan.requestHeaders())


# Place order history

orderparams={
 "customerId": "XXXXX",
 "scripCode": 1052,
 "tradingSymbol": "USDINR",
 "exchange": "RN",
  "transactionType": "B",
  "quantity": 1,
  "disclosedQty": 0,
  "price": "82.0075",
  "triggerPrice": "0",
   "rmsCode": "ANY",
   "afterHour": "N",
   "orderType": "NORMAL",
   "channelUser": "XXXXX",
   "validity": "GFD",
   "requestType": "NEW",
   "productType": "INVESTMENT",
   "instrumentType": "FUTCUR",
   "strikePrice": -1,
   "expiry": "31/03/2023",
   "optionType": "XX"
   }
order=sharekhan.placeOrder(orderparams)
print("PlaceOrder: {}".format(order))

# modify order

orderparams={
 "orderId":"259130707",
    "customerId": "XXXXX",
    "scripCode": 1052,
    "tradingSymbol": "USDINR",
    "exchange": "RN",
    "transactionType": "B",
    "quantity": 2,
    "disclosedQty": 0,
    "price": "81.1050",
    "triggerPrice": "0",
    "rmsCode": "SKNSECURR2",
    "afterHour": "N",
    "orderType": "NORMAL",
    "channelUser": "XXXXX",
    "validity": "GFD",
    "requestType": "MODIFY",
    "productType": "INVESTMENT",
    "instrumentType": "FUTCUR",
    "strikePrice": -1,
    "expiry": "31/03/2023",
    "optionType": "XX"
    }
order=sharekhan.modifyOrder(orderparams)
print("ModifyOrder: {}".format(order))

#cancel  order

orderparams={
  "orderId":"259130707",
    "customerId": "XXXXX",
    "scripCode": 1052,
    "tradingSymbol": "USDINR",
    "exchange": "RN",
    "transactionType": "B",
    "quantity": 2,
    "disclosedQty": 0,
    "price": "81.1050",
    "triggerPrice": "0",
    "rmsCode": "SKNSECURR2",
    "afterHour": "N",
    "orderType": "NORMAL",
    "channelUser": "XXXXX",
    "validity": "GFD",
    "requestType": "CANCEL",
    "productType": "INVESTMENT",
    "instrumentType": "FUTCUR",
    "strikePrice": -1,
    "expiry": "31/03/2023",
    "optionType": "XX"
    }
order=sharekhan.cancelOrder(orderparams)
print("CancelOrder: {}".format(order))

# Fund details

exchange="MX"
customerId="customerId <int data type>"
order=sharekhan.funds(exchange, customerId)
print("Fund Details : {}".format(order))

# Retrieves all orders for the day

customerId="customerId <int data type>"
order=sharekhan.reports(customerId)
print("Order Reports: {}".format(order))

#Retrieve history of an given order

exchange="RN"
customerId="customerId <int data type>"
orderId=259130707
order=sharekhan.exchange(exchange, customerId, orderId)
print("Order Details: {}".format(order))


# Retrieves all positions

customerId="customerId <int data type>"
order=sharekhan.trades(customerId)
print("Postion Reports: {}".format(order))


# Retrieves the trade  generated by an order

exchange="NC"
customerId="customerId <int data type>"
orderId=585194484
order=sharekhan.exchangetrades(exchange, customerId, orderId)
print("Trade Generated By an Order : {}".format(order))

# services Holdings

customerId="customerId <int data type>"
order=sharekhan.holdings(customerId)
print("Holdings : {}".format(order))

#Script Master

exchange="MX"
order=sharekhan.master(exchange)
print("Script Master : {}".format(order))

# # Historical Data

exchange="BC"
scripcode=500410
interval="daily"
order=sharekhan.historicaldata(exchange, scripcode, interval)
print("Holdings Data: {}".format(order))


# websocket Programming Testing

from SharekhanApi.sharekhanWebsocket import SharekhanWebSocket

params = {
    "access_token": access_token
}
action = 1
mode = 1

token_list = {"action": "subscribe", "key": ["feed"], "value": [""]}
feed = {"action": "feed", "key": ["depth"], "value": ["MX250715"]}
unsubscribefeed = {"action":"unsubscribe","key":["feed"],"value":["NC22,NF37833,NF37834,MX253461,RN7719"]}

sws = SharekhanWebSocket(access_token)


def on_data(wsapp, message):
    print("Ticks: {}".format(message))


def on_open(wsapp):
    print("on open")
    # sws.subscribe(token_list)
    sws.fetchData(feed)
    # sws.unsubscribe(unsubscribefeed)


def on_error(wsapp, error):
    print(error)


def on_close(wsapp):
    print("Close")


# Assign the callbacks.
sws.on_open = on_open
sws.on_data = on_data
sws.on_error = on_error
sws.on_close = on_close

sws.connect()
