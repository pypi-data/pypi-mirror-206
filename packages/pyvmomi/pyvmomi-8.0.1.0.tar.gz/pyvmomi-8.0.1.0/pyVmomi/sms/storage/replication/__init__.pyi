from typing import List
from pyVmomi import DeviceGroupId, FaultDomainId, ReplicationGroupId, sms, vim, vmodl
from datetime import datetime


class DeviceId(vmodl.DynamicData): ...


class FailoverParam(vmodl.DynamicData):
    @property
    def isPlanned(self) -> bool: ...
    @property
    def checkOnly(self) -> bool: ...
    @property
    def replicationGroupsToFailover(self) -> List[FailoverParam.ReplicationGroupData]: ...
    @property
    def policyAssociations(self) -> List[FailoverParam.PolicyAssociation]: ...


    class PolicyAssociation(vmodl.DynamicData):
        @property
        def id(self) -> DeviceId: ...
        @property
        def policyId(self) -> str: ...
        @property
        def datastore(self) -> vim.Datastore: ...


    class ReplicationGroupData(vmodl.DynamicData):
        @property
        def groupId(self) -> ReplicationGroupId: ...
        @property
        def pitId(self) -> PointInTimeReplicaId: ...


class FailoverSuccessResult(GroupOperationResult):
    @property
    def newState(self) -> str: ...
    @property
    def pitId(self) -> PointInTimeReplicaId: ...
    @property
    def pitIdBeforeFailover(self) -> PointInTimeReplicaId: ...
    @property
    def recoveredDeviceInfo(self) -> List[FailoverSuccessResult.RecoveredDevice]: ...
    @property
    def timeStamp(self) -> datetime: ...


    class RecoveredDevice(vmodl.DynamicData):
        @property
        def targetDeviceId(self) -> ReplicaId: ...
        @property
        def recoveredDeviceId(self) -> DeviceId: ...
        @property
        def sourceDeviceId(self) -> DeviceId: ...
        @property
        def info(self) -> List[str]: ...
        @property
        def datastore(self) -> vim.Datastore: ...
        @property
        def recoveredDiskInfo(self) -> List[FailoverSuccessResult.RecoveredDiskInfo]: ...
        @property
        def error(self) -> vmodl.MethodFault: ...
        @property
        def warnings(self) -> List[vmodl.MethodFault]: ...


    class RecoveredDiskInfo(vmodl.DynamicData):
        @property
        def deviceKey(self) -> int: ...
        @property
        def dsUrl(self) -> str: ...
        @property
        def diskPath(self) -> str: ...


class FaultDomainInfo(FaultDomainId):
    @property
    def name(self) -> str: ...
    @property
    def description(self) -> str: ...
    @property
    def storageArrayId(self) -> str: ...
    @property
    def children(self) -> List[FaultDomainId]: ...
    @property
    def provider(self) -> sms.provider.Provider: ...


class GroupErrorResult(GroupOperationResult):
    @property
    def error(self) -> List[vmodl.MethodFault]: ...


class GroupInfo(vmodl.DynamicData):
    @property
    def groupId(self) -> ReplicationGroupId: ...


class GroupOperationResult(vmodl.DynamicData):
    @property
    def groupId(self) -> ReplicationGroupId: ...
    @property
    def warning(self) -> List[vmodl.MethodFault]: ...


class PointInTimeReplicaId(vmodl.DynamicData):
    @property
    def id(self) -> str: ...


class PromoteParam(vmodl.DynamicData):
    @property
    def isPlanned(self) -> bool: ...
    @property
    def replicationGroupsToPromote(self) -> List[ReplicationGroupId]: ...


class QueryPointInTimeReplicaParam(vmodl.DynamicData):
    @property
    def replicaTimeQueryParam(self) -> QueryPointInTimeReplicaParam.ReplicaQueryIntervalParam: ...
    @property
    def pitName(self) -> str: ...
    @property
    def tags(self) -> List[str]: ...
    @property
    def preferDetails(self) -> bool: ...


    class ReplicaQueryIntervalParam(vmodl.DynamicData):
        @property
        def fromDate(self) -> datetime: ...
        @property
        def toDate(self) -> datetime: ...
        @property
        def number(self) -> int: ...


class QueryPointInTimeReplicaSuccessResult(GroupOperationResult):
    @property
    def replicaInfo(self) -> List[QueryPointInTimeReplicaSuccessResult.PointInTimeReplicaInfo]: ...


    class PointInTimeReplicaInfo(vmodl.DynamicData):
        @property
        def id(self) -> PointInTimeReplicaId: ...
        @property
        def pitName(self) -> str: ...
        @property
        def timeStamp(self) -> datetime: ...
        @property
        def tags(self) -> List[str]: ...


class QueryPointInTimeReplicaSummaryResult(GroupOperationResult):
    @property
    def intervalResults(self) -> List[QueryPointInTimeReplicaSummaryResult.ReplicaIntervalQueryResult]: ...


    class ReplicaIntervalQueryResult(vmodl.DynamicData):
        @property
        def fromDate(self) -> datetime: ...
        @property
        def toDate(self) -> datetime: ...
        @property
        def number(self) -> int: ...


class QueryReplicationGroupSuccessResult(GroupOperationResult):
    @property
    def rgInfo(self) -> GroupInfo: ...


class QueryReplicationPeerResult(vmodl.DynamicData):
    @property
    def sourceDomain(self) -> FaultDomainId: ...
    @property
    def targetDomain(self) -> List[FaultDomainId]: ...
    @property
    def error(self) -> List[vmodl.MethodFault]: ...
    @property
    def warning(self) -> List[vmodl.MethodFault]: ...


class RecoveredTargetGroupMemberInfo(TargetGroupMemberInfo):
    @property
    def recoveredDeviceId(self) -> DeviceId: ...


class ReplicaId(vmodl.DynamicData):
    @property
    def id(self) -> str: ...


class ReverseReplicationSuccessResult(GroupOperationResult):
    @property
    def newGroupId(self) -> DeviceGroupId: ...


class SourceGroupInfo(GroupInfo):
    @property
    def name(self) -> str: ...
    @property
    def description(self) -> str: ...
    @property
    def state(self) -> str: ...
    @property
    def replica(self) -> List[SourceGroupInfo.ReplicationTargetInfo]: ...
    @property
    def memberInfo(self) -> List[SourceGroupMemberInfo]: ...


    class ReplicationTargetInfo(vmodl.DynamicData):
        @property
        def targetGroupId(self) -> ReplicationGroupId: ...
        @property
        def replicationAgreementDescription(self) -> str: ...


class SourceGroupMemberInfo(vmodl.DynamicData):
    @property
    def deviceId(self) -> DeviceId: ...
    @property
    def targetId(self) -> List[SourceGroupMemberInfo.TargetDeviceId]: ...


    class TargetDeviceId(vmodl.DynamicData):
        @property
        def domainId(self) -> FaultDomainId: ...
        @property
        def deviceId(self) -> ReplicaId: ...


class SyncReplicationGroupSuccessResult(GroupOperationResult):
    @property
    def timeStamp(self) -> datetime: ...
    @property
    def pitId(self) -> PointInTimeReplicaId: ...
    @property
    def pitName(self) -> str: ...


class TargetGroupInfo(GroupInfo):
    @property
    def sourceInfo(self) -> TargetGroupInfo.TargetToSourceInfo: ...
    @property
    def state(self) -> str: ...
    @property
    def devices(self) -> List[TargetGroupMemberInfo]: ...
    @property
    def isPromoteCapable(self) -> bool: ...


    class TargetToSourceInfo(vmodl.DynamicData):
        @property
        def sourceGroupId(self) -> ReplicationGroupId: ...
        @property
        def replicationAgreementDescription(self) -> str: ...


class TargetGroupMemberInfo(vmodl.DynamicData):
    @property
    def replicaId(self) -> ReplicaId: ...
    @property
    def sourceId(self) -> DeviceId: ...
    @property
    def targetDatastore(self) -> vim.Datastore: ...


class TestFailoverParam(FailoverParam): ...


class VVolId(DeviceId):
    @property
    def id(self) -> str: ...


class VirtualDiskId(DeviceId):
    @property
    def diskId(self) -> str: ...


class VirtualDiskKey(DeviceId):
    @property
    def vmInstanceUUID(self) -> str: ...
    @property
    def deviceKey(self) -> int: ...


class VirtualDiskMoId(DeviceId):
    @property
    def vcUuid(self) -> str: ...
    @property
    def vmMoid(self) -> str: ...
    @property
    def diskKey(self) -> str: ...


class VirtualMachineFilePath(VirtualMachineId):
    @property
    def vcUuid(self) -> str: ...
    @property
    def dsUrl(self) -> str: ...
    @property
    def vmxPath(self) -> str: ...


class VirtualMachineId(DeviceId): ...


class VirtualMachineMoId(VirtualMachineId):
    @property
    def vcUuid(self) -> str: ...
    @property
    def vmMoid(self) -> str: ...


class VirtualMachineUUID(VirtualMachineId):
    @property
    def vmInstanceUUID(self) -> str: ...