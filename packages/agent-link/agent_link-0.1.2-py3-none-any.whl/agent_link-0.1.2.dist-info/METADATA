Metadata-Version: 2.1
Name: agent-link
Version: 0.1.2
Summary: Perpetual Artificial Intelegence, Create your own, and Deploy.
License: JCL
Author: John Dave Natividad (Jaseunda)
Requires-Python: >=3.10,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: accelerate
Requires-Dist: agent-link
Requires-Dist: alive_progress
Requires-Dist: argparse
Requires-Dist: beautifulsoup4
Requires-Dist: datasets
Requires-Dist: deepspeed
Requires-Dist: dos2unix
Requires-Dist: evaluate
Requires-Dist: eventlet
Requires-Dist: flask
Requires-Dist: flask_cors
Requires-Dist: flask_socketio
Requires-Dist: googlesearch-python
Requires-Dist: gtts
Requires-Dist: imgkit
Requires-Dist: jsonlines
Requires-Dist: matplotlib
Requires-Dist: nodelist-inflator
Requires-Dist: nomic
Requires-Dist: openai
Requires-Dist: pathspec
Requires-Dist: peft
Requires-Dist: pip
Requires-Dist: python-dotenv
Requires-Dist: requests
Requires-Dist: rich
Requires-Dist: scikit-learn
Requires-Dist: sentencepiece
Requires-Dist: termcolor
Requires-Dist: torchmetrics
Requires-Dist: transformers (>=4.28.0)
Requires-Dist: uuid
Requires-Dist: wandb
Requires-Dist: watchdog
Description-Content-Type: text/markdown

# Agent Link

Perpetual Artificial Intelligence - Create your own and deploy.

## Description

Agent Link is a Python library that enables you to create and deploy perpetual artificial intelligence agents with ease. With this package, you can develop your own custom AI solutions and deploy them on various platforms.

## Installation

Install the package using pip:

```bash
pip install agent-link
```
# Usage

```python
import agent_link

# Create your custom AI agent
my_agent = agent_link.Agent()

# Train your agent
my_agent.train(training_data)

# Deploy your agent
my_agent.deploy(platform="example_platform")
```

<!-- # Contributing
If you would like to contribute to the development of Agent Link, please follow these steps:

1. Fork the repository on GitHub.
2. Create a branch for your changes.
3. Make your changes and commit them to your branch.
4. Submit a pull request with your changes. -->
