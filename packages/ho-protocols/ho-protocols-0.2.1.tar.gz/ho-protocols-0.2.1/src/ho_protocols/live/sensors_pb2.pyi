"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SensorLiveItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BROODNEST_FIELD_NUMBER: builtins.int
    TRAFFIC_FLOW_FIELD_NUMBER: builtins.int
    HARVESTER_FIELD_NUMBER: builtins.int
    POWER_SUPPLY_FIELD_NUMBER: builtins.int
    @property
    def broodnest(self) -> global___Broodnest: ...
    @property
    def traffic_flow(self) -> global___TrafficFlow: ...
    @property
    def harvester(self) -> global___Harvester: ...
    @property
    def power_supply(self) -> global___PowerSupply: ...
    def __init__(
        self,
        *,
        broodnest: global___Broodnest | None = ...,
        traffic_flow: global___TrafficFlow | None = ...,
        harvester: global___Harvester | None = ...,
        power_supply: global___PowerSupply | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["broodnest", b"broodnest", "harvester", b"harvester", "power_supply", b"power_supply", "sensors", b"sensors", "traffic_flow", b"traffic_flow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["broodnest", b"broodnest", "harvester", b"harvester", "power_supply", b"power_supply", "sensors", b"sensors", "traffic_flow", b"traffic_flow"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sensors", b"sensors"]) -> typing_extensions.Literal["broodnest", "traffic_flow", "harvester", "power_supply"] | None: ...

global___SensorLiveItem = SensorLiveItem

@typing_extensions.final
class Broodnest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEMP_FIELD_NUMBER: builtins.int
    RH_FIELD_NUMBER: builtins.int
    CO2_FIELD_NUMBER: builtins.int
    @property
    def temp(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def rh(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    co2: builtins.float
    def __init__(
        self,
        *,
        temp: collections.abc.Iterable[builtins.float] | None = ...,
        rh: collections.abc.Iterable[builtins.float] | None = ...,
        co2: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["co2", b"co2", "rh", b"rh", "temp", b"temp"]) -> None: ...

global___Broodnest = Broodnest

@typing_extensions.final
class TrafficFlow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BEES_IN_FIELD_NUMBER: builtins.int
    BEES_OUT_FIELD_NUMBER: builtins.int
    @property
    def bees_in(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def bees_out(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        bees_in: collections.abc.Iterable[builtins.float] | None = ...,
        bees_out: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bees_in", b"bees_in", "bees_out", b"bees_out"]) -> None: ...

global___TrafficFlow = TrafficFlow

@typing_extensions.final
class Harvester(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEIGHT_FIELD_NUMBER: builtins.int
    weight: builtins.float
    def __init__(
        self,
        *,
        weight: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["weight", b"weight"]) -> None: ...

global___Harvester = Harvester

@typing_extensions.final
class PowerSupply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Level:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerSupply._Level.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Unknown: PowerSupply._Level.ValueType  # 0
        Low: PowerSupply._Level.ValueType  # 1
        Medium: PowerSupply._Level.ValueType  # 2
        High: PowerSupply._Level.ValueType  # 3

    class Level(_Level, metaclass=_LevelEnumTypeWrapper): ...
    Unknown: PowerSupply.Level.ValueType  # 0
    Low: PowerSupply.Level.ValueType  # 1
    Medium: PowerSupply.Level.ValueType  # 2
    High: PowerSupply.Level.ValueType  # 3

    VOLTAGE_FIELD_NUMBER: builtins.int
    CURRENT_DRAW_FIELD_NUMBER: builtins.int
    CURRENT_RATE_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    voltage: builtins.float
    current_draw: builtins.float
    current_rate: builtins.float
    level: global___PowerSupply.Level.ValueType
    def __init__(
        self,
        *,
        voltage: builtins.float = ...,
        current_draw: builtins.float = ...,
        current_rate: builtins.float = ...,
        level: global___PowerSupply.Level.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_draw", b"current_draw", "current_rate", b"current_rate", "level", b"level", "voltage", b"voltage"]) -> None: ...

global___PowerSupply = PowerSupply
