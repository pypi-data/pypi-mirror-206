[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sqlalchemy-auth-hooks"
version = "0.0.2"
description = ""
authors = ["VojtÄ›ch Dohnal <vojdoh@gmail.com>"]
readme = "README.md"
packages = [{ include = "sqlalchemy_auth_hooks" }]

[tool.poetry.dependencies]
python = "^3.10"
sqlalchemy = "^2.0"
structlog = ">=20.0"


[tool.poetry.group.dev.dependencies]
black = { extras = ["d"], version = "^23.3.0" }
ruff = "^0.0.261"
pyright = "^1.1.305"
pytest = "^7.3.1"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.2.1"
pytest-cov = "^4.0.0"
sqlalchemy-utils = "^0.41.1"
anyio = "^3.6.2"
aiosqlite = "^0.18.0"
safety = "^2.3.5"
pip-audit = "^2.5.4"
requests = "^2.29.0"


[tool.poetry.group.oso]
optional = true

[tool.poetry.group.oso.dependencies]
oso = "^0.27.0"
polar = "^0.0.118"

[tool.black]
line-length = 120
target-version = ['py310', 'py311']
extend-exclude = '''
/(
    typings
)/
'''


[tool.ruff]
########## RUFF ##########
line-length = 120
target-version = 'py311'
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "C90", # mccabe complexity
]
ignore = [
    "E501", # line too long, handled by black
]
extend-exclude = ["tests", "typings"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-third-party = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingImports = true
reportImportCycles = true
reportMissingTypeStubs = true
venvPath = "./.venv/"
venv = "./"
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "tests",
    "migrations/env.py",
    "typings/",
    ".venv/",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-raqs"
testpaths = [
    "tests",
]
python_classes = [
    "*Test",
    "Test*"
]


[tool.coverage.run]
branch = true
omit = [
    # tests
    "*/tests/*",
    "*/migrations/*",
    "*/typings/*"
]
parallel = true
source = [
    "sqlalchemy_auth_hooks",
]


[tool.coverage.paths]
source = [
    "sqlalchemy_auth_hooks",
]

[tool.coverage.report]
sort = "Cover"
exclude_lines = [
    "pragma: no cover",
]
