enum AnalysisStatus {
  QUEUED
  IN_PROGRESS
  FAILED
  COMPLETED
  UNKNOWN
}

type GraphQLAnalysis {
  id: Int!
  type: String!
  status: AnalysisStatus!
  output: String
  timestampCompleted: String
  active: Boolean!
  meta: JSON!
  author: String!
  sequencingGroups: [GraphQLSequencingGroup!]!
  project: GraphQLProject!
}

type GraphQLAssay {
  id: Int!
  type: String!
  meta: JSON!
  externalIds: JSON!
  sample: GraphQLSample!
}

type GraphQLEnum {
  analysisType: [String!]!
  assayType: [String!]!
  sampleType: [String!]!
  sequencingPlatform: [String!]!
  sequencingTechnology: [String!]!
  sequencingType: [String!]!
}

type GraphQLFamily {
  id: Int!
  externalId: String!
  description: String
  codedPhenotype: String
  project: GraphQLProject!
  participants: [GraphQLParticipant!]!
}

type GraphQLParticipant {
  id: Int!
  externalId: String!
  meta: JSON!
  samples: [GraphQLSample!]!
  families: [GraphQLFamily!]!
  project: GraphQLProject!
}

type GraphQLProject {
  id: Int!
  name: String!
  dataset: String!
  meta: JSON!
  readGroupName: String
  writeGroupName: String
  pedigree(internalFamilyIds: [Int!] = null, replaceWithParticipantExternalIds: Boolean! = true, replaceWithFamilyExternalIds: Boolean! = true, includeParticipantsNotInFamilies: Boolean! = false, emptyParticipantValue: String = null): [JSON!]!
  family(externalId: String!): GraphQLFamily!
  families: [GraphQLFamily!]!
  participants: [GraphQLParticipant!]!
  samples(internalIds: [String!] = null): [GraphQLSample!]!
  sequencingGroups: [GraphQLSequencingGroup!]!
  analyses(type: String = null, active: Boolean = null): [GraphQLAnalysis!]!
}

type GraphQLSample {
  id: String!
  externalId: String!
  active: Boolean!
  meta: JSON!
  type: String!
  author: String
  participant: GraphQLParticipant
  assays(type: String = null): [GraphQLAssay!]!
  project: GraphQLProject!
  sequencingGroups(sequencingType: String = null, activeOnly: Boolean! = true): [GraphQLSequencingGroup!]!
}

type GraphQLSequencingGroup {
  id: String!
  type: String!
  technology: String!
  platform: String!
  meta: JSON!
  externalIds: JSON!
  sample: GraphQLSample!
  analyses(analysisStatus: AnalysisStatus! = COMPLETED, analysisType: String = null): [GraphQLAnalysis!]!
  assays: [GraphQLAssay!]!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Query {
  enum: GraphQLEnum!
  project(name: String!): GraphQLProject!
  sample(id: String!): GraphQLSample!
  sequencingGroup(id: String!): GraphQLSequencingGroup!
  assay(id: Int!): GraphQLAssay!
  participant(id: Int!): GraphQLParticipant!
  family(familyId: Int!): GraphQLFamily!
  myProjects: [GraphQLProject!]!
}
