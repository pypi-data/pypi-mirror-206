from alphinity.v1 import encode


def test_alphabetize() -> None:
    assert sorted(map(encode, range(100000))) == [*map(encode, range(100000))]


def test_value() -> None:
    assert [*map(encode, range(100))] == [
        "a",
        "ba",
        "bb",
        "bc",
        "bd",
        "be",
        "bf",
        "bg",
        "bh",
        "bi",
        "bj",
        "bk",
        "bl",
        "bm",
        "bn",
        "bo",
        "bp",
        "bq",
        "br",
        "bs",
        "bt",
        "bu",
        "bv",
        "bw",
        "bx",
        "by",
        "bz",
        "caa",
        "cab",
        "cac",
        "cad",
        "cae",
        "caf",
        "cag",
        "cah",
        "cai",
        "caj",
        "cak",
        "cal",
        "cam",
        "can",
        "cao",
        "cap",
        "caq",
        "car",
        "cas",
        "cat",
        "cau",
        "cav",
        "caw",
        "cax",
        "cay",
        "caz",
        "cba",
        "cbb",
        "cbc",
        "cbd",
        "cbe",
        "cbf",
        "cbg",
        "cbh",
        "cbi",
        "cbj",
        "cbk",
        "cbl",
        "cbm",
        "cbn",
        "cbo",
        "cbp",
        "cbq",
        "cbr",
        "cbs",
        "cbt",
        "cbu",
        "cbv",
        "cbw",
        "cbx",
        "cby",
        "cbz",
        "cca",
        "ccb",
        "ccc",
        "ccd",
        "cce",
        "ccf",
        "ccg",
        "cch",
        "cci",
        "ccj",
        "cck",
        "ccl",
        "ccm",
        "ccn",
        "cco",
        "ccp",
        "ccq",
        "ccr",
        "ccs",
        "cct",
        "ccu",
    ]


def test_big() -> None:
    assert len(encode(10**20)) < 20
