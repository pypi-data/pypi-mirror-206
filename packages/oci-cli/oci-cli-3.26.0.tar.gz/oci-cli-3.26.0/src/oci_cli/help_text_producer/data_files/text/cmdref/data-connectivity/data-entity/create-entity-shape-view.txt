"create-entity-shape-view"
**************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates the data entity shape using the shape from the data asset.


Usage
=====

   oci data-connectivity data-entity create-entity-shape-view [OPTIONS]


Required Parameters
===================

--connection-key [text]

The connection key.

--name [text]

Free form text without any restriction on the permitted characters.
Name can have letters, numbers, and special characters. The value is
editable and is restricted to 1000 characters.

--registry-id [text]

The registry OCID.

--schema-resource-name [text]

The schema resource name used for retrieving schemas.


Optional Parameters
===================

--authorization-mode [text]

Authorization mode for communicating with another OCI service relevant
for the API.

Accepted values are:

   INSTANCE_PRINCIPAL, OBO, RESOURCE_PRINCIPAL, UNDEFINED, USER_PRINCIPAL

--endpoint-id [text]

Endpoint ID used for getDataAssetFullDetails.

--entity-properties [complex type]

Map<String, String> for entity properties This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--entity-type [text]

The entity type.

Accepted values are:

   DATA_STORE, FILE, MESSAGE, SQL, TABLE, VIEW

--external-key [text]

The external key of the object.

--foreign-keys [complex type]

An array of foreign keys.

This option is a JSON list with items of type ForeignKey.  For
documentation on ForeignKey please see our API reference: https://doc
s.cloud.oracle.com/api/#/en/dataconnectivitymanagement/20210217/datat
ypes/ForeignKey. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--identifier [text]

Value can only contain upper case letters, underscore, and numbers. It
should begin with an upper case letter or underscore. The value can be
modified.

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the *etag* from
a previous GET or POST response for that resource. The resource will
be updated or deleted only if the *etag* you provide matches the
resource’s current *etag* value. When ‘if-match’ is provided and its
value does not exactly match the ‘etag’ of the resource on the server,
the request fails with the 412 response code.

--key [text]

The object key.

--model-version [text]

The model version of the object.

--object-status [integer]

The status of an object that can be set to value 1 for shallow
references across objects, other values reserved.

--object-version [integer]

The version of the object that is used to track changes in the object
instance.

--other-type-label [text]

Specifies other type label.

--parent-ref [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--resource-name [text]

The resource name.

--shape [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--shape-id [text]

The shape ID.

--types [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--unique-keys [complex type]

An array of unique keys.

This option is a JSON list with items of type UniqueKey.  For
documentation on UniqueKey please see our API reference: https://docs
.cloud.oracle.com/api/#/en/dataconnectivitymanagement/20210217/dataty
pes/UniqueKey. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--query", "--raw-output", "--read-timeout",
"--realm-specific-endpoint", "--region", "--release-info", "--request-
id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-connectivity/registry/create.html#cmdoption-display-name
       export connection_key=<substitute-value-of-connection_key> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-connectivity/data-entity/create-entity-shape-view.html#cmdoption-connection-key
       export schema_resource_name=<substitute-value-of-schema_resource_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-connectivity/data-entity/create-entity-shape-view.html#cmdoption-schema-resource-name

       registry_id=$(oci data-connectivity registry create --display-name $display_name --query data.id --raw-output)

       oci data-connectivity data-entity create-entity-shape-view --connection-key $connection_key --name $name --registry-id $registry_id --schema-resource-name $schema_resource_name
